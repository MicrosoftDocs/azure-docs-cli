### YamlMime:AzureCLIGroup
uid: az_aks_draft
name: az aks draft
extensionInformation: >-
  > [!Note]

  > This reference is part of the **aks-preview** extension for the Azure CLI  (version 2.38.0 or higher).  The extension will automatically install the first time you run an **az aks draft** command.  [Learn more](https://docs.microsoft.com/en-us/cli/azure/azure-cli-extensions-overview) about extensions.
summary: Commands to build deployment files in a project directory and deploy to an AKS cluster.
description: ''
directCommands:
- uid: az_aks_draft_create
  name: az aks draft create
  summary: Generate a Dockerfile and the minimum required Kubernetes deployment files (helm, kustomize, manifests) for your project directory.
  description: ''
  syntax: >-
    az aks draft create [--app]
                        [--create-config]
                        [--deployment-only]
                        [--destination]
                        [--dockerfile-only]
                        [--language]
                        [--path]
  examples:
  - summary: Prompt to generate a Dockerfile and deployment files in the current directory.
    syntax: az aks draft create
  - summary: Generate only the Dockerfile in the current directory.
    syntax: az aks draft create --dockerfile-only=true
  - summary: Generate only the deployment files in the current directory.
    syntax: az aks draft create --deployment-only=true
  - summary: Generate a Dockerfile and an deployment file in a Java project with an app name at a specific project directory.
    syntax: az aks draft create --language=java --app=some_app --destination=/projects/some_project
  optionalParameters:
  - name: --app
    summary: Specify the name of the helm release.
    description: ''
  - name: --create-config
    summary: Specify the path to the configuration file.
    description: ''
  - name: --deployment-only
    summary: Only generate deployment files (helm, kustomize, manifests) for the Kubernetes deployment.
    description: ''
  - name: --destination
    defaultValue: "."
    summary: Specify the path to the project directory (default is .).
    description: ''
  - name: --dockerfile-only
    summary: Only generate Dockerfile for the Kubernetes deployment.
    description: ''
  - name: --language
    summary: Specify the language used to create the Kubernetes deployment.
    description: ''
  - name: --path
    summary: Automatically download and use the Draft binary at the specified location.
    description: ''
- uid: az_aks_draft_generate-workflow
  name: az aks draft generate-workflow
  summary: Generate a GitHub workflow for automatic build and deploy to AKS.
  description: Before running this command, Make sure you have set up GitHub OIDC for your application. You also need to create a resource group, a container registry and a Kubernetes cluster on Azure and link the three resources using `az aks update -n <cluster-name> -g <resource-group-name> --attach-acr <acr-name>`.
  syntax: >-
    az aks draft generate-workflow [--branch]
                                   [--cluster-name]
                                   [--container-name]
                                   [--destination]
                                   [--path]
                                   [--registry-name]
                                   [--resource-group]
  examples:
  - summary: Prompt to generate a GitHub workflow in the current directory.
    syntax: az aks draft generate-workflow
  - summary: Prompt to generate a GitHub workflow in a specific project directory.
    syntax: az aks draft generate-workflow --destination=/projects/some_project
  - summary: Generate a GitHub workflow with a resource group, an AKS cluster name, a container registry name in a specific project directory.
    syntax: az aks draft generate-workflow --resource-group=some_rg --cluster-name=some_cluster --registry-name=some_registry --destination=/projects/some_project
  - summary: Generate a GitHub workflow that deploys from the main branch with a resource group, an AKS cluster name, a container registry name, and a container image name in a specific project directory.
    syntax: az aks draft generate-workflow --branch=main --resource-group=some_rg --cluster-name=some_cluster --registry-name=some_registry --container-name=some_image --destination=/projects/some_project
  optionalParameters:
  - name: --branch
    summary: Specify the GitHub branch to automatically deploy from.
    description: ''
  - name: --cluster-name
    summary: Specify the AKS cluster name.
    description: ''
  - name: --container-name
    summary: Specify the name of the container image.
    description: ''
  - name: --destination
    summary: Specify the path to the project directory (default is .).
    description: ''
  - name: --path
    summary: Automatically download and use the Draft binary at the specified location.
    description: ''
  - name: --registry-name
    summary: Specify the path to the project directory.
    description: ''
  - name: --resource-group
    summary: Specify the name of the Azure resource group.
    description: ''
- uid: az_aks_draft_setup-gh
  name: az aks draft setup-gh
  summary: Set up GitHub OIDC for your application.
  description: ''
  syntax: >-
    az aks draft setup-gh [--app]
                          [--gh-repo]
                          [--path]
                          [--provider]
                          [--resource-group]
                          [--subscription-id]
  examples:
  - summary: Prompt to setup the GitHub OIDC for a repository.
    syntax: az aks draft setup-gh
  - summary: Setup the GitHub OIDC on Azure for a specific repository.
    syntax: az aks draft setup-gh --provider=azure --gh-repo=some_organization/some_repo
  - summary: Setup the GitHub OIDC on Azure with subscription ID and resource group.
    syntax: az aks draft setup-gh --provider=azure --subscription-id=some_subscription --resource-group=some_rg
  - summary: Setup the GitHub OIDC with an application name on Azure with subscription ID and resource group for a specific repository.
    syntax: az aks draft setup-gh --app=some_app --provider=azure --subscription-id=some_subscription --resource-group=some_rg --gh-repo=some_organization/some_repo
  optionalParameters:
  - name: --app
    summary: Specify the Azure Active Directory applicaton name.
    description: ''
  - name: --gh-repo
    summary: Specify the the GitHub repository (organization/repo_name).
    description: ''
  - name: --path
    summary: Automatically download and use the Draft binary at the specified location.
    description: ''
  - name: --provider
    defaultValue: "azure"
    summary: Specify the cloud provider (default is azure).
    description: ''
  - name: --resource-group
    summary: Specify the name of the Azure resource group.
    description: ''
  - name: --subscription-id
    summary: Specify the Azure subscription ID.
    description: ''
- uid: az_aks_draft_up
  name: az aks draft up
  summary: Set up GitHub OIDC and generate a GitHub workflow for automatic build and deploy to AKS.
  description: This command combines `az aks draft setup-gh` and `az aks draft generate-workflow`. Before running this command, create a resource group, a container registry and a Kubernetes cluster on Azure and link the three resources using `az aks update -n <cluster-name> -g <resource-group-name> --attach-acr <acr-name>`.
  syntax: >-
    az aks draft up [--app]
                    [--branch]
                    [--cluster-name]
                    [--container-name]
                    [--destination]
                    [--gh-repo]
                    [--path]
                    [--provider]
                    [--registry-name]
                    [--resource-group]
                    [--subscription-id]
  examples:
  - summary: Prompt to setup the GitHub OIDC then generate a GitHub workflow in the current directory.
    syntax: az aks draft up
  - summary: Prompt to setup the GitHub OIDC then generate a GitHub workflow in a specific project directory.
    syntax: az aks draft up --destination=/projects/some_project
  - summary: Prompt to setup the GitHub OIDC for a specific repository then generate a GitHub workflow in a specific project directory.
    syntax: az aks draft up --gh-repo=some_organization/some_repo --destination=/projects/some_project
  optionalParameters:
  - name: --app
    summary: Specify the name of the application.
    description: ''
  - name: --branch
    summary: Specify the GitHub branch to automatically deploy from.
    description: ''
  - name: --cluster-name
    summary: Specify the AKS cluster name.
    description: ''
  - name: --container-name
    summary: Specify the name of the container image.
    description: ''
  - name: --destination
    summary: Specify the path to the project directory (default is .).
    description: ''
  - name: --gh-repo
    summary: Specify the the GitHub repository (organization/repo_name).
    description: ''
  - name: --path
    summary: Automatically download and use the Draft binary at the specified location.
    description: ''
  - name: --provider
    defaultValue: "azure"
    summary: Specify the cloud provider (default is azure).
    description: ''
  - name: --registry-name
    summary: Specify the path to the project directory.
    description: ''
  - name: --resource-group
    summary: Specify the name of the Azure resource group.
    description: ''
  - name: --subscription-id
    summary: Specify the Azure subscription ID.
    description: ''
- uid: az_aks_draft_update
  name: az aks draft update
  summary: Update your application to be internet accessible.
  description: This command automatically updates your yaml files as necessary so that your application will be able to receive external requests.
  syntax: >-
    az aks draft update [--certificate]
                        [--destination]
                        [--host]
                        [--path]
  examples:
  - summary: Prompt to update the application to be internet accessible.
    syntax: az aks draft update
  - summary: Prompt to update the application to be internet accessible in a specific project directory.
    syntax: az aks draft update --destination=/projects/some_project
  - summary: Update the application to be internet accessible with a host of the ingress resource and a Keyvault certificate in a specific project directory.
    syntax: az aks draft update --host=some_host --certificate=some_certificate --destination=/projects/some_project
  optionalParameters:
  - name: --certificate
    summary: Specify the URI of the Keyvault certificate to present.
    description: ''
  - name: --destination
    summary: Specify the path to the project directory (default is .).
    description: ''
  - name: --host
    summary: Specify the host of the ingress resource.
    description: ''
  - name: --path
    summary: Automatically download and use the Draft binary at the specified location.
    description: ''
commands:
- az_aks_draft_create
- az_aks_draft_generate-workflow
- az_aks_draft_setup-gh
- az_aks_draft_up
- az_aks_draft_update
globalParameters:
- name: --debug
  summary: Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: Show this help message and exit.
- name: --only-show-errors
  summary: Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, table, tsv"
  summary: Output format.
- name: --query
  summary: JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: Commands to build deployment files in a project directory and deploy to an AKS cluster.
