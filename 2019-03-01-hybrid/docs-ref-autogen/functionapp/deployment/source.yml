### YamlMime:AzureCLIGroup
uid: az_functionapp_deployment_source
name: az functionapp deployment source
importantNote: >-
  > [!NOTE]

  > This command group has commands that are defined in both Azure CLI and at least one extension. Install each extension to benefit from its extended capabilities. [Learn more](https://learn.microsoft.com/cli/azure/azure-cli-extensions-overview) about extensions.
summary: |-
  Manage function app deployment via source control.
status: GA
sourceType: Core and Extension
directCommands:
- uid: az_functionapp_deployment_source_config
  name: az functionapp deployment source config
  summary: |-
    Manage deployment from git or Mercurial repositories.
  description: |-
    Note that the GitHub action password is now redacted in the result. Please use the `az functionapp deployment source show` command to view the GitHub action password.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appservice/_help.py
  syntax: >-
    az functionapp deployment source config --repo-url
                                            [--branch]
                                            [--git-token]
                                            [--github-action]
                                            [--ids]
                                            [--manual-integration]
                                            [--name]
                                            [--repository-type {externalgit, git, github, localgit, mercurial}]
                                            [--resource-group]
                                            [--slot]
                                            [--subscription]
  examples:
  - summary: |-
      Manage deployment from git or Mercurial repositories. (autogenerated)
    syntax: az functionapp deployment source config --branch master --manual-integration --name MyFunctionApp --repo-url https://github.com/Azure-Samples/function-image-upload-resize --resource-group MyResourceGroup
  requiredParameters:
  - isRequired: true
    name: --repo-url -u
    summary: |-
      Repository url to pull the latest source from, e.g. https://github.com/foo/foo-web.
  optionalParameters:
  - name: --branch
    summary: |-
      The branch name of the repository.
  - name: --git-token
    summary: |-
      Git access token required for auto sync.
  - name: --github-action
    summary: |-
      If using GitHub action, default to False.
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --manual-integration
    summary: |-
      Disable automatic sync between source control and web.
  - name: --name -n
    summary: |-
      Name of the function app.
  - name: --repository-type
    defaultValue: "git"
    parameterValueGroup: "externalgit, git, github, localgit, mercurial"
    summary: |-
      Repository type.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --slot -s
    summary: |-
      The name of the slot. Default to the productions slot if not specified.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_functionapp_deployment_source_config-local-git
  name: az functionapp deployment source config-local-git
  summary: |-
    Get a URL for a git repository endpoint to clone and push to for function app deployment.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appservice/_help.py
  syntax: >-
    az functionapp deployment source config-local-git [--ids]
                                                      [--name]
                                                      [--resource-group]
                                                      [--slot]
                                                      [--subscription]
  examples:
  - summary: |-
      Get an endpoint and add it as a git remote.
    syntax: >-
      az functionapp deployment source config-local-git \
          -g MyResourceGroup -n MyUniqueApp

      git remote add azure \
          https://{deploy_user_name}@MyUniqueApp.scm.azurewebsites.net/MyUniqueApp.git
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      Name of the function app.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --slot -s
    summary: |-
      The name of the slot. Default to the productions slot if not specified.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_functionapp_deployment_source_config-zip
  name: az functionapp deployment source config-zip
  summary: |-
    Perform deployment using the kudu zip push deployment for a function app.
  description: |-
    By default Kudu assumes that zip deployments do not require any build-related actions like npm install or dotnet publish. This can be overridden by including an .deployment file in your zip file with the following content '[config] SCM_DO_BUILD_DURING_DEPLOYMENT = true', to enable Kudu detection logic and build script generation process. See https://github.com/projectkudu/kudu/wiki/Configurable-settings#enabledisable-build-actions-preview. Alternately the setting can be enabled using the az functionapp config appsettings set command.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appservice/_help.py
  syntax: >-
    az functionapp deployment source config-zip --src
                                                [--build-remote {false, true}]
                                                [--ids]
                                                [--name]
                                                [--resource-group]
                                                [--slot]
                                                [--subscription]
                                                [--timeout]
  examples:
  - summary: |-
      Perform deployment by using zip file content.
    syntax: >-
      az functionapp deployment source config-zip \
          -g {myRG} -n {myAppName} \
          --src {zipFilePathLocation}
  requiredParameters:
  - isRequired: true
    name: --src
    summary: |-
      A zip file path for deployment.
  optionalParameters:
  - name: --build-remote
    defaultValue: "False"
    parameterValueGroup: "false, true"
    summary: |-
      Enable remote build during deployment.
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      Name of the function app.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --slot -s
    summary: |-
      The name of the slot. Default to the productions slot if not specified.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --timeout -t
    summary: |-
      Configurable timeout in seconds for checking the status of deployment.
- uid: az_functionapp_deployment_source_config-zip(appservice-kube)
  name: az functionapp deployment source config-zip
  extensionSuffix: appservice-kube
  summary: |-
    Perform deployment using the kudu zip push deployment for a function app.
  description: |-
    By default Kudu assumes that zip deployments do not require any build-related actions like npm install or dotnet publish. This can be overridden by including an .deployment file in your zip file with the following content '[config] SCM_DO_BUILD_DURING_DEPLOYMENT = true', to enable Kudu detection logic and build script generation process. See https://github.com/projectkudu/kudu/wiki/Configurable-settings#enabledisable-build-actions-preview. Alternately the setting can be enabled using the az functionapp config appsettings set command.
  status: GA
  sourceType: Extension
  syntax: >-
    az functionapp deployment source config-zip --src
                                                [--build-remote {false, true}]
                                                [--ids]
                                                [--name]
                                                [--resource-group]
                                                [--slot]
                                                [--subscription]
                                                [--timeout]
  examples:
  - summary: |-
      Perform deployment by using zip file content.
    syntax: >-
      az functionapp deployment source config-zip \
          -g {myRG} -n {myAppName} \
          --src {zipFilePathLocation}
  requiredParameters:
  - isRequired: true
    name: --src
    summary: |-
      A zip file path for deployment.
  optionalParameters:
  - name: --build-remote
    defaultValue: "False"
    parameterValueGroup: "false, true"
    summary: |-
      Enable remote build during deployment.
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      Name of the function app.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --slot -s
    summary: |-
      The name of the slot. Default to the productions slot if not specified.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --timeout -t
    summary: |-
      Configurable timeout in seconds for checking the status of deployment.
- uid: az_functionapp_deployment_source_delete
  name: az functionapp deployment source delete
  summary: |-
    Delete a source control deployment configuration.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appservice/_help.py
  syntax: >-
    az functionapp deployment source delete [--ids]
                                            [--name]
                                            [--resource-group]
                                            [--slot]
                                            [--subscription]
  examples:
  - summary: |-
      Delete a source control deployment configuration. (autogenerated)
    syntax: az functionapp deployment source delete --name MyFunctionApp --resource-group MyResourceGroup
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      Name of the function app.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --slot -s
    summary: |-
      The name of the slot. Default to the productions slot if not specified.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_functionapp_deployment_source_show
  name: az functionapp deployment source show
  summary: |-
    Get the details of a source control deployment configuration.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appservice/_help.py
  syntax: >-
    az functionapp deployment source show [--ids]
                                          [--name]
                                          [--resource-group]
                                          [--slot]
                                          [--subscription]
  examples:
  - summary: |-
      Get the details of a source control deployment configuration. (autogenerated)
    syntax: az functionapp deployment source show --name MyFunctionApp --resource-group MyResourceGroup
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      Name of the function app.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --slot -s
    summary: |-
      The name of the slot. Default to the productions slot if not specified.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_functionapp_deployment_source_sync
  name: az functionapp deployment source sync
  summary: |-
    Synchronize from the repository. Only needed under manual integration mode.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appservice/_help.py
  syntax: >-
    az functionapp deployment source sync [--ids]
                                          [--name]
                                          [--resource-group]
                                          [--slot]
                                          [--subscription]
  examples:
  - summary: |-
      Synchronize from the repository. Only needed under manual integration mode. (autogenerated)
    syntax: az functionapp deployment source sync --name MyFunctionApp --resource-group MyResourceGroup
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      Name of the function app.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --slot -s
    summary: |-
      The name of the slot. Default to the productions slot if not specified.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_functionapp_deployment_source_update-token
  name: az functionapp deployment source update-token
  summary: |-
    Update source control token cached in Azure app service.
  description: |-
    If no token is provided, the command will clean up existing token. Note that tokens are now redacted in the result.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appservice/_help.py
  syntax: az functionapp deployment source update-token [--git-token]
  optionalParameters:
  - name: --git-token
    summary: |-
      Git access token required for auto sync.
commands:
- az_functionapp_deployment_source_config
- az_functionapp_deployment_source_config-local-git
- az_functionapp_deployment_source_config-zip
- az_functionapp_deployment_source_config-zip(appservice-kube)
- az_functionapp_deployment_source_delete
- az_functionapp_deployment_source_show
- az_functionapp_deployment_source_sync
- az_functionapp_deployment_source_update-token
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: Manage function app deployment via source control.
