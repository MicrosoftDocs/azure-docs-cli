### YamlMime:AzureCLIGroup
uid: az_webapp
name: az webapp
importantNote: >-
  > [!NOTE]

  > This command group has commands that are defined in both Azure CLI and at least one extension. Install each extension to benefit from its extended capabilities. [Learn more](https://learn.microsoft.com/cli/azure/azure-cli-extensions-overview) about extensions.
summary: |-
  Manage web apps.
status: GA
sourceType: Core and Extension
directCommands:
- uid: az_webapp_browse
  name: az webapp browse
  summary: |-
    Open a web app in a browser. This is not supported in Azure Cloud Shell.
  status: GA
  sourceType: Core
  syntax: >-
    az webapp browse [--ids]
                     [--logs]
                     [--name]
                     [--resource-group]
                     [--slot]
                     [--subscription]
  examples:
  - summary: |-
      Open a web app in a browser. (autogenerated)
    syntax: az webapp browse --name MyWebapp --resource-group MyResourceGroup
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --logs -l
    defaultValue: "False"
    summary: |-
      Enable viewing the log stream immediately after launching the web app.
  - name: --name -n
    summary: |-
      Name of the web app. If left unspecified, a name will be randomly generated. You can configure the default using `az configure --defaults web=<name>`.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --slot -s
    summary: |-
      The name of the slot. Default to the productions slot if not specified.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_webapp_create
  name: az webapp create
  summary: |-
    Create a web app.
  description: |-
    The web app's name must be able to produce a unique FQDN as AppName.azurewebsites.net.
  status: GA
  sourceType: Core
  syntax: >-
    az webapp create --name
                     --plan
                     --resource-group
                     [--acr-use-identity]
                     [--assign-identity]
                     [--basic-auth {Disabled, Enabled}]
                     [--deployment-container-image-name]
                     [--deployment-local-git]
                     [--deployment-source-branch]
                     [--deployment-source-url]
                     [--docker-registry-server-password]
                     [--docker-registry-server-user]
                     [--https-only {false, true}]
                     [--multicontainer-config-file]
                     [--multicontainer-config-type {COMPOSE, KUBE}]
                     [--public-network-access {Disabled, Enabled}]
                     [--role]
                     [--runtime]
                     [--scope]
                     [--startup-file]
                     [--subnet]
                     [--tags]
                     [--vnet]
  examples:
  - summary: |-
      Create a web app with the default configuration.
    syntax: az webapp create -g MyResourceGroup -p MyPlan -n MyUniqueAppName
  - summary: |-
      Create a web app with a Java 11 runtime.
    syntax: az webapp create -g MyResourceGroup -p MyPlan -n MyUniqueAppName --runtime "java:11:Java SE:11"
  - summary: |-
      Create a web app with a NodeJS 10.14 runtime and deployed from a local git repository.
    syntax: az webapp create -g MyResourceGroup -p MyPlan -n MyUniqueAppName --runtime "node:12LTS" --deployment-local-git
  - summary: |-
      Create a web app with an image from DockerHub.
    syntax: az webapp create -g MyResourceGroup -p MyPlan -n MyUniqueAppName -i nginx
  - summary: |-
      Create a web app with an image from a private DockerHub registry.
    syntax: az webapp create -g MyResourceGroup -p MyPlan -n MyUniqueAppName -i MyImageName -s username -w password
  - summary: |-
      Create a web app with an image from a private Azure Container Registry.
    syntax: az webapp create -g MyResourceGroup -p MyPlan -n MyUniqueAppName -i myregistry.azurecr.io/docker-image:tag
  - summary: |-
      create a WebApp using shared App Service Plan that is in a different resource group.
    syntax: AppServicePlanID=$(az appservice plan show -n SharedAppServicePlan -g MyASPRG --query "id" --out tsv) az webapp create -g MyResourceGroup -p "$AppServicePlanID" -n MyUniqueAppName
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      Name of the new web app. Web app name can contain only allow alphanumeric characters and hyphens, it cannot start or end in a hyphen, and must be less than 64 characters.
  - isRequired: true
    name: --plan -p
    summary: |-
      Name or resource id of the app service plan. Use 'appservice plan create' to get one.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  optionalParameters:
  - name: --acr-use-identity
    defaultValue: "False"
    summary: |-
      Enable or disable pull image from acr use managed identity.
  - name: --assign-identity
    summary: |-
      Accept system or user assigned identities separated by spaces. Use '[system]' to refer system assigned identity, or a resource id to refer user assigned identity. Check out help for more examples.
  - name: --basic-auth
    parameterValueGroup: "Disabled, Enabled"
    summary: |-
      Enable or disable basic auth.
  - name: --deployment-container-image-name -i
    summary: |-
      Container image name from Docker Hub, e.g. publisher/image-name:tag.
  - name: --deployment-local-git -l
    summary: |-
      Enable local git.
  - name: --deployment-source-branch -b
    defaultValue: "master"
    summary: |-
      The branch to deploy.
  - name: --deployment-source-url -u
    summary: |-
      Git repository URL to link with manual integration.
  - name: --docker-registry-server-password -w
    summary: |-
      The container registry server password. Required for private registries.
  - name: --docker-registry-server-user -s
    summary: |-
      The container registry server username.
  - name: --https-only
    defaultValue: "False"
    parameterValueGroup: "false, true"
    summary: |-
      Redirect all traffic made to an app using HTTP to HTTPS.
  - name: --multicontainer-config-file
    summary: |-
      Linux only. Config file for multicontainer apps. (local or remote).
  - name: --multicontainer-config-type
    parameterValueGroup: "COMPOSE, KUBE"
    summary: |-
      Linux only.
  - name: --public-network-access
    parameterValueGroup: "Disabled, Enabled"
    summary: |-
      Enable or disable public access to the web app.
  - name: --role
    defaultValue: "Contributor"
    summary: |-
      Role name or id the system assigned identity will have.
  - name: --runtime -r
    summary: |-
      Canonicalized web runtime in the format of Framework:Version, e.g. "PHP:7.2".Use `az webapp list-runtimes` for available list.
  - name: --scope
    summary: |-
      Scope that the system assigned identity can access.
  - name: --startup-file
    summary: |-
      Linux only. The web's startup file.
  - name: --subnet
    summary: |-
      Name or resource ID of the pre-existing subnet to have the webapp join. The --vnet is argument also needed if specifying subnet by name.
  - name: --tags
    summary: |-
      Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags.
  - name: --vnet
    summary: |-
      Name or resource ID of the regional virtual network. If there are multiple vnets of the same name across different resource groups, use vnet resource id to specify which vnet to use. If vnet name is used, by default, the vnet in the same resource group as the webapp will be used. Must be used with --subnet argument.
- uid: az_webapp_create(appservice-kube)
  name: az webapp create
  extensionSuffix: appservice-kube
  summary: |-
    Create a web app.
  description: |-
    The web app's name must be able to produce a unique FQDN as AppName.azurewebsites.net.
  status: GA
  sourceType: Extension
  syntax: >-
    az webapp create --name
                     --resource-group
                     [--assign-identity]
                     [--custom-location]
                     [--deployment-container-image-name]
                     [--deployment-local-git]
                     [--deployment-source-branch]
                     [--deployment-source-url]
                     [--docker-registry-server-password]
                     [--docker-registry-server-user]
                     [--max-worker-count]
                     [--min-worker-count]
                     [--multicontainer-config-file]
                     [--multicontainer-config-type {COMPOSE, KUBE}]
                     [--plan]
                     [--role]
                     [--runtime]
                     [--scope]
                     [--startup-file]
                     [--tags]
  examples:
  - summary: |-
      Create a web app with the default configuration.
    syntax: az webapp create -g MyResourceGroup -p MyPlan -n MyUniqueAppName
  - summary: |-
      Create a web app with a Java 11 runtime using '|' delimiter.
    syntax: az webapp create -g MyResourceGroup -p MyPlan -n MyUniqueAppName --runtime "java|11|Java SE|11"
  - summary: |-
      Create a web app with a Java 11 runtime using ':' delimiter.
    syntax: az webapp create -g MyResourceGroup -p MyPlan -n MyUniqueAppName --runtime "java:11:Java SE:11"
  - summary: |-
      Create a web app with a NodeJS 10.14 runtime and deployed from a local git repository.
    syntax: az webapp create -g MyResourceGroup -p MyPlan -n MyUniqueAppName --runtime "node|10.14" --deployment-local-git
  - summary: |-
      Create a web app with an image from DockerHub.
    syntax: az webapp create -g MyResourceGroup -p MyPlan -n MyUniqueAppName -i nginx
  - summary: |-
      Create a web app with an image from a private DockerHub registry.
    syntax: az webapp create -g MyResourceGroup -p MyPlan -n MyUniqueAppName -i MyImageName -s username -w password
  - summary: |-
      Create a web app with an image from a private Azure Container Registry.
    syntax: az webapp create -g MyResourceGroup -p MyPlan -n MyUniqueAppName -i myregistry.azurecr.io/docker-image:tag
  - summary: |-
      create a WebApp using shared App Service Plan that is in a different resource group.
    syntax: AppServicePlanID=$(az appservice plan show -n SharedAppServicePlan -g MyASPRG --query "id" --out tsv) az webapp create -g MyResourceGroup -p "$AppServicePlanID" -n MyUniqueAppName
  - summary: |-
      create a WebApp in an appservice kubernetes environment
    syntax: az webapp create -g MyResourceGroup -p MyPlan -n MyUniqueAppName --custom-location /subscriptions/sub_id/resourcegroups/group_name/providers/microsoft.extendedlocation/customlocations/custom_location_name
  - summary: |-
      create a WebApp in an appservice kubernetes environment and in the same resource group as the custom location
    syntax: az webapp create -g MyResourceGroup -p MyPlan -n MyUniqueAppName --custom-location custom_location_name
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      Name of the new web app.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  optionalParameters:
  - name: --assign-identity
    summary: |-
      Accept system or user assigned identities separated by spaces. Use '[system]' to refer system assigned identity, or a resource id to refer user assigned identity. Check out help for more examples.
  - name: --custom-location
    summary: |-
      Name or ID of the custom location. Use an ID for a custom location in a different resource group from the app.
  - name: --deployment-container-image-name -i
    summary: |-
      Linux only. Container image name from Docker Hub, e.g. publisher/image-name:tag.
  - name: --deployment-local-git -l
    summary: |-
      Enable local git.
  - name: --deployment-source-branch -b
    defaultValue: "master"
    summary: |-
      The branch to deploy.
  - name: --deployment-source-url -u
    summary: |-
      Git repository URL to link with manual integration.
  - name: --docker-registry-server-password -w
    summary: |-
      The container registry server password. Required for private registries.
  - name: --docker-registry-server-user -s
    summary: |-
      The container registry server username.
  - name: --max-worker-count
    summary: |-
      Maximum number of workers to be allocated.
    isPreview: true
  - name: --min-worker-count
    summary: |-
      Minimum number of workers to be allocated.
    isPreview: true
  - name: --multicontainer-config-file
    summary: |-
      Linux only. Config file for multicontainer apps. (local or remote).
  - name: --multicontainer-config-type
    parameterValueGroup: "COMPOSE, KUBE"
    summary: |-
      Linux only.
  - name: --plan -p
    summary: |-
      Name or resource id of the app service plan. Use 'appservice plan create' to get one.
  - name: --role
    defaultValue: "Contributor"
    summary: |-
      Role name or id the system assigned identity will have.
  - name: --runtime -r
    summary: |-
      Canonicalized web runtime in the format of Framework|Version, e.g. "PHP|5.6". Use `az webapp list-runtimes` for available list.
  - name: --scope
    summary: |-
      Scope that the system assigned identity can access.
  - name: --startup-file
    summary: |-
      Linux only. The web's startup file.
  - name: --tags
    summary: |-
      Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags.
- uid: az_webapp_create-remote-connection
  name: az webapp create-remote-connection
  summary: |-
    Creates a remote connection using a tcp tunnel to your web app.
  status: GA
  sourceType: Core
  syntax: >-
    az webapp create-remote-connection [--ids]
                                       [--instance]
                                       [--name]
                                       [--port]
                                       [--resource-group]
                                       [--slot]
                                       [--subscription]
                                       [--timeout]
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --instance -i
    summary: |-
      Webapp instance to connect to. Defaults to none.
  - name: --name -n
    summary: |-
      Name of the web app. If left unspecified, a name will be randomly generated. You can configure the default using `az configure --defaults web=<name>`.
  - name: --port -p
    summary: |-
      Port for the remote connection. Default: Random available port.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --slot -s
    summary: |-
      The name of the slot. Default to the productions slot if not specified.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --timeout -t
    summary: |-
      Timeout in seconds. Defaults to none.
- uid: az_webapp_delete
  name: az webapp delete
  summary: |-
    Delete a web app.
  status: GA
  sourceType: Core
  syntax: >-
    az webapp delete [--ids]
                     [--keep-dns-registration]
                     [--keep-empty-plan]
                     [--keep-metrics]
                     [--name]
                     [--resource-group]
                     [--slot]
                     [--subscription]
  examples:
  - summary: |-
      Delete a web app. (autogenerated)
    syntax: az webapp delete --name MyWebapp --resource-group MyResourceGroup
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --keep-dns-registration
    summary: |-
      Keep DNS registration.
    isDeprecated: true
    deprecateInfo: Argument 'keep_dns_registration' has been deprecated and will be removed in version '3.0.0'.
  - name: --keep-empty-plan
    summary: |-
      Keep empty app service plan.
  - name: --keep-metrics
    summary: |-
      Keep app metrics.
  - name: --name -n
    summary: |-
      The name of the webapp.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --slot -s
    summary: |-
      The name of the slot. Default to the productions slot if not specified.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_webapp_deploy
  name: az webapp deploy
  summary: |-
    Deploys a provided artifact to Azure Web Apps.
  status: GA
  sourceType: Core
  syntax: >-
    az webapp deploy [--async {false, true}]
                     [--clean {false, true}]
                     [--ids]
                     [--ignore-stack {false, true}]
                     [--name]
                     [--resource-group]
                     [--restart {false, true}]
                     [--slot]
                     [--src-path]
                     [--src-url]
                     [--subscription]
                     [--target-path]
                     [--timeout]
                     [--track-status {false, true}]
                     [--type {ear, jar, lib, startup, static, war, zip}]
  examples:
  - summary: |-
      Deploy a war file asynchronously.
    syntax: az webapp deploy --resource-group ResourceGroup --name AppName --src-path SourcePath --type war --async true
  - summary: |-
      Deploy a static text file to wwwroot/staticfiles/test.txt
    syntax: az webapp deploy --resource-group ResourceGroup --name AppName --src-path SourcePath --type static --target-path staticfiles/test.txt
  optionalParameters:
  - name: --async
    parameterValueGroup: "false, true"
    summary: |-
      If true, the artifact is deployed asynchronously. (The command will exit once the artifact is pushed to the web app.). Synchronous deployments are not yet supported when using "--src-url".
  - name: --clean
    parameterValueGroup: "false, true"
    summary: |-
      If true, cleans the target directory prior to deploying the file(s). Default value is determined based on artifact type.
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --ignore-stack
    parameterValueGroup: "false, true"
    summary: |-
      If true, any stack-specific defaults are ignored.
  - name: --name -n
    summary: |-
      Name of the webapp to deploy to.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --restart
    parameterValueGroup: "false, true"
    summary: |-
      If true, the web app will be restarted following the deployment. Set this to false if you are deploying multiple artifacts and do not want to restart the site on the earlier deployments.
  - name: --slot -s
    summary: |-
      The name of the slot. Default to the productions slot if not specified.
  - name: --src-path
    summary: |-
      Path of the artifact to be deployed. Ex: "myapp.zip" or "/myworkspace/apps/myapp.war".
  - name: --src-url
    summary: |-
      URL of the artifact. The webapp will pull the artifact from this URL. Ex: "http://mysite.com/files/myapp.war?key=123".
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --target-path
    summary: |-
      Absolute path that the artifact should be deployed to. Defaults to "home/site/wwwroot/" Ex: "/home/site/deployments/tools/", "/home/site/scripts/startup-script.sh".
  - name: --timeout
    summary: |-
      Timeout for the deployment operation in milliseconds. Ignored when using "--src-url" since synchronous deployments are not yet supported when using "--src-url".
  - name: --track-status
    defaultValue: "False"
    parameterValueGroup: "false, true"
    summary: |-
      If true, web app startup status during deployment will be tracked for linux web apps.
  - name: --type
    parameterValueGroup: "ear, jar, lib, startup, static, war, zip"
    summary: |-
      Used to override the type of artifact being deployed.
- uid: az_webapp_list
  name: az webapp list
  summary: |-
    List web apps.
  status: GA
  sourceType: Core
  syntax: az webapp list [--resource-group]
  examples:
  - summary: |-
      List all web apps in MyResourceGroup.
    syntax: az webapp list --resource-group MyResourceGroup
  - summary: |-
      List default host name and state for all web apps.
    syntax: 'az webapp list --query "[].{hostName: defaultHostName, state: state}"'
  - summary: |-
      List all running web apps.
    syntax: az webapp list --query "[?state=='Running']"
  optionalParameters:
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_webapp_list-instances
  name: az webapp list-instances
  summary: |-
    List all scaled out instances of a web app or web app slot.
  status: GA
  sourceType: Core
  syntax: >-
    az webapp list-instances --name
                             --resource-group
                             [--slot]
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      Name of the web app. If left unspecified, a name will be randomly generated. You can configure the default using `az configure --defaults web=<name>`.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  optionalParameters:
  - name: --slot -s
    summary: |-
      Name of the web app slot. Default to the productions slot if not specified.
- uid: az_webapp_list-runtimes
  name: az webapp list-runtimes
  summary: |-
    List available built-in stacks which can be used for web apps.
  status: GA
  sourceType: Core
  syntax: >-
    az webapp list-runtimes [--linux]
                            [--os {linux, windows}]
  optionalParameters:
  - name: --linux
    defaultValue: "False"
    summary: |-
      List runtime stacks for linux based web apps.
    isDeprecated: true
    deprecateInfo: Argument 'linux' has been deprecated and will be removed in a future release. Use '--os-type' instead.
  - name: --os --os-type
    parameterValueGroup: "linux, windows"
    summary: |-
      Limit the output to just windows or linux runtimes.
- uid: az_webapp_list-runtimes(appservice-kube)
  name: az webapp list-runtimes
  extensionSuffix: appservice-kube
  summary: |-
    List available built-in stacks which can be used for web apps.
  status: GA
  sourceType: Extension
  syntax: >-
    az webapp list-runtimes [--is-kube]
                            [--linux]
                            [--os {linux, windows}]
  optionalParameters:
  - name: --is-kube
    defaultValue: "False"
    summary: |-
      Limit the output for app service on azure arc.
    isPreview: true
  - name: --linux
    defaultValue: "False"
    summary: |-
      List runtime stacks for linux based web apps.
    isDeprecated: true
    deprecateInfo: Argument 'linux' has been deprecated and will be removed in a future release. Use '--os-type' instead.
  - name: --os --os-type
    parameterValueGroup: "linux, windows"
    summary: |-
      Limit the output to just windows or linux runtimes.
- uid: az_webapp_restart
  name: az webapp restart
  summary: |-
    Restart a web app.
  status: GA
  sourceType: Core
  syntax: >-
    az webapp restart [--ids]
                      [--name]
                      [--resource-group]
                      [--slot]
                      [--subscription]
  examples:
  - summary: |-
      Restart a web app. (autogenerated)
    syntax: az webapp restart --name MyWebapp --resource-group MyResourceGroup
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      Name of the web app. If left unspecified, a name will be randomly generated. You can configure the default using `az configure --defaults web=<name>`.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --slot -s
    summary: |-
      The name of the slot. Default to the productions slot if not specified.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_webapp_restart(appservice-kube)
  name: az webapp restart
  extensionSuffix: appservice-kube
  summary: |-
    Restart a web app.
  status: GA
  sourceType: Extension
  syntax: >-
    az webapp restart [--ids]
                      [--name]
                      [--resource-group]
                      [--slot]
                      [--subscription]
  examples:
  - summary: |-
      Restart a web app. (autogenerated)
    syntax: az webapp restart --name MyWebapp --resource-group MyResourceGroup
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      Name of the web app. You can configure the default using `az configure --defaults web=<name>`.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --slot -s
    summary: |-
      The name of the slot. Default to the productions slot if not specified.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_webapp_scale
  name: az webapp scale
  summary: |-
    Modify the number of instances of a webapp on Arc enabled Kubernetes workloads .
  status: GA
  sourceType: Extension
  syntax: >-
    az webapp scale --instance-count
                    [--ids]
                    [--name]
                    [--resource-group]
                    [--slot]
                    [--subscription]
  examples:
  - summary: |-
      Change the number of instances of MyApp to 2.
    syntax: az webapp scale -g MyResourceGroup -n MyApp --instance-count 2
  requiredParameters:
  - isRequired: true
    name: --instance-count
    defaultValue: "1"
    summary: |-
      Number of instances.
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      Name of the web app. You can configure the default using `az configure --defaults web=<name>`.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --slot -s
    summary: |-
      The name of the slot. Default to the productions slot if not specified.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_webapp_show
  name: az webapp show
  summary: |-
    Get the details of a web app.
  status: GA
  sourceType: Core
  syntax: >-
    az webapp show [--ids]
                   [--name]
                   [--resource-group]
                   [--slot]
                   [--subscription]
  examples:
  - summary: |-
      Get the details of a web app. (autogenerated)
    syntax: az webapp show --name MyWebapp --resource-group MyResourceGroup
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      Name of the web app. If left unspecified, a name will be randomly generated. You can configure the default using `az configure --defaults web=<name>`.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --slot -s
    summary: |-
      The name of the slot. Default to the productions slot if not specified.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_webapp_show(appservice-kube)
  name: az webapp show
  extensionSuffix: appservice-kube
  summary: |-
    Get the details of a web app.
  status: GA
  sourceType: Extension
  syntax: >-
    az webapp show [--ids]
                   [--name]
                   [--resource-group]
                   [--slot]
                   [--subscription]
  examples:
  - summary: |-
      Get the details of a web app. (autogenerated)
    syntax: az webapp show --name MyWebapp --resource-group MyResourceGroup
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      Name of the web app. You can configure the default using `az configure --defaults web=<name>`.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --slot -s
    summary: |-
      The name of the slot. Default to the productions slot if not specified.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_webapp_ssh
  name: az webapp ssh
  summary: |-
    SSH command establishes a ssh session to the web container and developer would get a shell terminal remotely.
  status: Preview
  isPreview: true
  previewOrExperimentalInfo: 'This command is in preview and under development. Reference and support levels: https://aka.ms/CLI_refstatus'
  sourceType: Core
  syntax: >-
    az webapp ssh [--ids]
                  [--instance]
                  [--name]
                  [--port]
                  [--resource-group]
                  [--slot]
                  [--subscription]
                  [--timeout]
  examples:
  - summary: |-
      ssh into a web app
    syntax: az webapp ssh -n MyUniqueAppName -g MyResourceGroup
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --instance -i
    summary: |-
      Webapp instance to connect to. Defaults to none.
  - name: --name -n
    summary: |-
      Name of the web app. If left unspecified, a name will be randomly generated. You can configure the default using `az configure --defaults web=<name>`.
  - name: --port -p
    summary: |-
      Port for the remote connection. Default: Random available port.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --slot -s
    summary: |-
      The name of the slot. Default to the productions slot if not specified.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --timeout -t
    summary: |-
      Timeout in seconds. Defaults to none.
- uid: az_webapp_start
  name: az webapp start
  summary: |-
    Start a web app.
  status: GA
  sourceType: Core
  syntax: >-
    az webapp start [--ids]
                    [--name]
                    [--resource-group]
                    [--slot]
                    [--subscription]
  examples:
  - summary: |-
      Start a web app. (autogenerated)
    syntax: az webapp start --name MyWebapp --resource-group MyResourceGroup
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      Name of the web app. If left unspecified, a name will be randomly generated. You can configure the default using `az configure --defaults web=<name>`.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --slot -s
    summary: |-
      The name of the slot. Default to the productions slot if not specified.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_webapp_stop
  name: az webapp stop
  summary: |-
    Stop a web app.
  status: GA
  sourceType: Core
  syntax: >-
    az webapp stop [--ids]
                   [--name]
                   [--resource-group]
                   [--slot]
                   [--subscription]
  examples:
  - summary: |-
      Stop a web app. (autogenerated)
    syntax: az webapp stop --name MyWebapp --resource-group MyResourceGroup
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      Name of the web app. If left unspecified, a name will be randomly generated. You can configure the default using `az configure --defaults web=<name>`.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --slot -s
    summary: |-
      The name of the slot. Default to the productions slot if not specified.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_webapp_up
  name: az webapp up
  summary: |-
    Create a webapp and deploy code from a local workspace to the app. The command is required to run from the folder where the code is present. Current support includes Node, Python, .NET Core and ASP.NET. Node, Python apps are created as Linux apps. .Net Core, ASP.NET, and static HTML apps are created as Windows apps. Append the html flag to deploy as a static HTML app. Each time the command is successfully run, default argument values for resource group, sku, location, plan, and name are saved for the current directory. These defaults are then used for any arguments not provided on subsequent runs of the command in the same directory.  Use 'az configure' to manage defaults.
  status: GA
  sourceType: Core
  syntax: >-
    az webapp up [--app-service-environment]
                 [--basic-auth {Disabled, Enabled}]
                 [--dryrun]
                 [--html]
                 [--ids]
                 [--launch-browser]
                 [--location]
                 [--logs]
                 [--name]
                 [--os-type {Linux, Windows}]
                 [--plan]
                 [--resource-group]
                 [--runtime]
                 [--sku {B1, B2, B3, D1, F1, FREE, I1, I1v2, I2, I2v2, I3, I3v2, I4v2, I5v2, I6v2, P0V3, P1MV3, P1V2, P1V3, P2MV3, P2V2, P2V3, P3MV3, P3V2, P3V3, P4MV3, P5MV3, S1, S2, S3, SHARED, WS1, WS2, WS3}]
                 [--subscription]
                 [--track-status {false, true}]
  examples:
  - summary: |-
      View the details of the app that will be created, without actually running the operation
    syntax: az webapp up --dryrun
  - summary: |-
      Create a web app with the default configuration, by running the command from the folder where the code to be deployed exists.
    syntax: az webapp up
  - summary: |-
      Create a web app with a specified name
    syntax: az webapp up -n MyUniqueAppName
  - summary: |-
      Create a web app with a specified name and a Java 11 runtime
    syntax: az webapp up -n MyUniqueAppName --runtime "java:11:Java SE:11"
  - summary: |-
      Create a web app in a specific region, by running the command from the folder where the code to be deployed exists.
    syntax: az webapp up -l locationName
  - summary: |-
      Create a web app and enable log streaming after the deployment operation is complete. This will enable the default configuration required to enable log streaming.
    syntax: az webapp up --logs
  - summary: |-
      Create a web app and deploy as a static HTML app.
    syntax: az webapp up --html
  optionalParameters:
  - name: --app-service-environment -e
    summary: |-
      Name or resource ID of the (pre-existing) App Service Environment to deploy to. Requires an Isolated V2 sku [I1v2, I2v2, I3v2].
  - name: --basic-auth
    parameterValueGroup: "Disabled, Enabled"
    summary: |-
      Enable or disable basic auth.
  - name: --dryrun
    defaultValue: "False"
    summary: |-
      Show summary of the create and deploy operation instead of executing it.
  - name: --html
    defaultValue: "False"
    summary: |-
      Ignore app detection and deploy as an html app.
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --launch-browser -b
    defaultValue: "False"
    summary: |-
      Launch the created app using the default browser. This is not supported in Azure Cloud Shell.
  - name: --location -l
    summary: |-
      Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
  - name: --logs
    defaultValue: "False"
    summary: |-
      Configure default logging required to enable viewing log stream immediately after launching the webapp.
  - name: --name -n
    summary: |-
      Name of the web app. If left unspecified, a name will be randomly generated. You can configure the default using `az configure --defaults web=<name>`.
  - name: --os-type
    parameterValueGroup: "Linux, Windows"
    summary: |-
      Set the OS type for the app to be created.
  - name: --plan -p
    summary: |-
      Name of the app service plan associated with the webapp.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --runtime -r
    summary: |-
      Canonicalized web runtime in the format of Framework:Version, e.g. "PHP:7.2".Use `az webapp list-runtimes` for available list.
  - name: --sku
    parameterValueGroup: "B1, B2, B3, D1, F1, FREE, I1, I1v2, I2, I2v2, I3, I3v2, I4v2, I5v2, I6v2, P0V3, P1MV3, P1V2, P1V3, P2MV3, P2V2, P2V3, P3MV3, P3V2, P3V3, P4MV3, P5MV3, S1, S2, S3, SHARED, WS1, WS2, WS3"
    summary: |-
      The pricing tiers, e.g., F1(Free), D1(Shared), B1(Basic Small), B2(Basic Medium), B3(Basic Large), S1(Standard Small), P1V2(Premium V2 Small), P2V2(Premium V2 Medium), P3V2(Premium V2 Large), P0V3(Premium V3 Extra Small), P1V3(Premium V3 Small), P2V3(Premium V3 Medium), P3V3(Premium V3 Large), P1MV3(Premium Memory Optimized V3 Small), P2MV3(Premium Memory Optimized V3 Medium), P3MV3(Premium Memory Optimized V3 Large), P4MV3(Premium Memory Optimized V3 Extra Large), P5MV3(Premium Memory Optimized V3 Extra Extra Large), I1 (Isolated Small), I2 (Isolated Medium), I3 (Isolated Large), I1v2 (Isolated V2 Small), I2v2 (Isolated V2 Medium), I3v2 (Isolated V2 Large), I4v2 (Isolated V2 I4v2), I5v2 (Isolated V2 I5v2), I6v2 (Isolated V2 I6v2), WS1 (Logic Apps Workflow Standard 1), WS2 (Logic Apps Workflow Standard 2), WS3 (Logic Apps Workflow Standard 3).
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --track-status
    defaultValue: "False"
    parameterValueGroup: "false, true"
    summary: |-
      If true, web app startup status during deployment will be tracked for linux web apps.
- uid: az_webapp_update
  name: az webapp update
  summary: |-
    Update an existing web app.
  status: GA
  sourceType: Core
  syntax: >-
    az webapp update [--add]
                     [--basic-auth {Disabled, Enabled}]
                     [--client-affinity-enabled {false, true}]
                     [--force-dns-registration {false, true}]
                     [--force-string]
                     [--https-only {false, true}]
                     [--ids]
                     [--minimum-elastic-instance-count]
                     [--name]
                     [--prewarmed-instance-count]
                     [--remove]
                     [--resource-group]
                     [--set]
                     [--skip-custom-domain-verification {false, true}]
                     [--skip-dns-registration {false, true}]
                     [--slot]
                     [--subscription]
                     [--ttl-in-seconds {false, true}]
  examples:
  - summary: |-
      Update the tags of a web app.
    syntax: az webapp update -g MyResourceGroup -n MyAppName --set tags.tagName=tagValue
  - summary: |-
      Update a web app. (autogenerated)
    syntax: az webapp update --https-only true --name MyAppName --resource-group MyResourceGroup
  optionalParameters:
  - name: --add
    defaultValue: "[]"
    summary: |-
      Add an object to a list of objects by specifying a path and key value pairs.  Example: `--add property.listProperty <key=value, string or JSON string>`.
  - name: --basic-auth
    parameterValueGroup: "Disabled, Enabled"
    summary: |-
      Enable or disable basic auth.
  - name: --client-affinity-enabled
    parameterValueGroup: "false, true"
    summary: |-
      Enables sending session affinity cookies.
  - name: --force-dns-registration
    parameterValueGroup: "false, true"
    summary: |-
      If true, web app hostname is force registered with DNS.
    isDeprecated: true
    deprecateInfo: Argument 'force_dns_registration' has been deprecated and will be removed in version '3.0.0'.
  - name: --force-string
    defaultValue: "False"
    summary: |-
      When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.
  - name: --https-only
    parameterValueGroup: "false, true"
    summary: |-
      Redirect all traffic made to an app using HTTP to HTTPS.
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --minimum-elastic-instance-count -i
    summary: |-
      Minimum number of instances. App must be in an elastic scale App Service Plan.
    isPreview: true
  - name: --name -n
    summary: |-
      Name of the web app. If left unspecified, a name will be randomly generated. You can configure the default using `az configure --defaults web=<name>`.
  - name: --prewarmed-instance-count -w
    summary: |-
      Number of preWarmed instances. App must be in an elastic scale App Service Plan.
    isPreview: true
  - name: --remove
    defaultValue: "[]"
    summary: |-
      Remove a property or an element from a list.  Example: `--remove property.list <indexToRemove>` OR `--remove propertyToRemove`.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --set
    defaultValue: "[]"
    summary: |-
      Update an object by specifying a property path and value to set.  Example: `--set property1.property2=<value>`.
  - name: --skip-custom-domain-verification
    parameterValueGroup: "false, true"
    summary: |-
      If true, custom (non *.azurewebsites.net) domains associated with web app are not verified.
    isDeprecated: true
    deprecateInfo: Argument 'skip_custom_domain_verification' has been deprecated and will be removed in version '3.0.0'.
  - name: --skip-dns-registration
    parameterValueGroup: "false, true"
    summary: |-
      If true web app hostname is not registered with DNS on creation.
    isDeprecated: true
    deprecateInfo: Argument 'skip_dns_registration' has been deprecated and will be removed in version '3.0.0'.
  - name: --slot -s
    summary: |-
      The name of the slot. Default to the productions slot if not specified.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --ttl-in-seconds
    parameterValueGroup: "false, true"
    summary: |-
      Time to live in seconds for web app's default domain name.
    isDeprecated: true
    deprecateInfo: Argument 'ttl_in_seconds' has been deprecated and will be removed in version '3.0.0'.
- uid: az_webapp_update(appservice-kube)
  name: az webapp update
  extensionSuffix: appservice-kube
  summary: |-
    Update an existing web app.
  status: GA
  sourceType: Extension
  syntax: >-
    az webapp update [--add]
                     [--client-affinity-enabled {false, true}]
                     [--force-string]
                     [--https-only {false, true}]
                     [--ids]
                     [--minimum-elastic-instance-count]
                     [--name]
                     [--prewarmed-instance-count]
                     [--remove]
                     [--resource-group]
                     [--set]
                     [--slot]
                     [--subscription]
  examples:
  - summary: |-
      Update the tags of a web app.
    syntax: az webapp update -g MyResourceGroup -n MyAppName --set tags.tagName=tagValue
  - summary: |-
      Update a web app. (autogenerated)
    syntax: az webapp update --https-only true --name MyAppName --resource-group MyResourceGroup
  optionalParameters:
  - name: --add
    defaultValue: "[]"
    summary: |-
      Add an object to a list of objects by specifying a path and key value pairs.  Example: `--add property.listProperty <key=value, string or JSON string>`.
  - name: --client-affinity-enabled
    parameterValueGroup: "false, true"
    summary: |-
      Enables sending session affinity cookies.
  - name: --force-string
    defaultValue: "False"
    summary: |-
      When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.
  - name: --https-only
    parameterValueGroup: "false, true"
    summary: |-
      Redirect all traffic made to an app using HTTP to HTTPS.
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --minimum-elastic-instance-count -i
    summary: |-
      Minimum number of instances. App must be in an elastic scale App Service Plan.
    isPreview: true
  - name: --name -n
    summary: |-
      Name of the web app. You can configure the default using `az configure --defaults web=<name>`.
  - name: --prewarmed-instance-count -w
    summary: |-
      Number of preWarmed instances. App must be in an elastic scale App Service Plan.
    isPreview: true
  - name: --remove
    defaultValue: "[]"
    summary: |-
      Remove a property or an element from a list.  Example: `--remove property.list <indexToRemove>` OR `--remove propertyToRemove`.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --set
    defaultValue: "[]"
    summary: |-
      Update an object by specifying a property path and value to set.  Example: `--set property1.property2=<value>`.
  - name: --slot -s
    summary: |-
      The name of the slot. Default to the productions slot if not specified.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
commands:
- az_webapp_auth
- az_webapp_auth-classic
- az_webapp_auth-classic_show
- az_webapp_auth-classic_update
- az_webapp_auth_apple
- az_webapp_auth_apple_show
- az_webapp_auth_apple_update
- az_webapp_auth_config-version
- az_webapp_auth_config-version_revert
- az_webapp_auth_config-version_show
- az_webapp_auth_config-version_upgrade
- az_webapp_auth_facebook
- az_webapp_auth_facebook_show
- az_webapp_auth_facebook_update
- az_webapp_auth_github
- az_webapp_auth_github_show
- az_webapp_auth_github_update
- az_webapp_auth_google
- az_webapp_auth_google_show
- az_webapp_auth_google_update
- az_webapp_auth_microsoft
- az_webapp_auth_microsoft_show
- az_webapp_auth_microsoft_update
- az_webapp_auth_openid-connect
- az_webapp_auth_openid-connect_add
- az_webapp_auth_openid-connect_remove
- az_webapp_auth_openid-connect_show
- az_webapp_auth_openid-connect_update
- az_webapp_auth_set
- az_webapp_auth_show
- az_webapp_auth_show(authV2)
- az_webapp_auth_twitter
- az_webapp_auth_twitter_show
- az_webapp_auth_twitter_update
- az_webapp_auth_update
- az_webapp_auth_update(authV2)
- az_webapp_browse
- az_webapp_config
- az_webapp_config_access-restriction
- az_webapp_config_access-restriction_add
- az_webapp_config_access-restriction_remove
- az_webapp_config_access-restriction_set
- az_webapp_config_access-restriction_show
- az_webapp_config_appsettings
- az_webapp_config_appsettings_delete
- az_webapp_config_appsettings_list
- az_webapp_config_appsettings_set
- az_webapp_config_backup
- az_webapp_config_backup_create
- az_webapp_config_backup_delete
- az_webapp_config_backup_list
- az_webapp_config_backup_restore
- az_webapp_config_backup_show
- az_webapp_config_backup_update
- az_webapp_config_connection-string
- az_webapp_config_connection-string_delete
- az_webapp_config_connection-string_list
- az_webapp_config_connection-string_set
- az_webapp_config_container
- az_webapp_config_container_delete
- az_webapp_config_container_set
- az_webapp_config_container_show
- az_webapp_config_hostname
- az_webapp_config_hostname_add
- az_webapp_config_hostname_delete
- az_webapp_config_hostname_get-external-ip
- az_webapp_config_hostname_list
- az_webapp_config_set
- az_webapp_config_show
- az_webapp_config_snapshot
- az_webapp_config_snapshot_list
- az_webapp_config_snapshot_restore
- az_webapp_config_ssl
- az_webapp_config_ssl_bind
- az_webapp_config_ssl_bind(appservice-kube)
- az_webapp_config_ssl_create
- az_webapp_config_ssl_delete
- az_webapp_config_ssl_import
- az_webapp_config_ssl_list
- az_webapp_config_ssl_show
- az_webapp_config_ssl_unbind
- az_webapp_config_ssl_unbind(appservice-kube)
- az_webapp_config_ssl_upload
- az_webapp_config_storage-account
- az_webapp_config_storage-account_add
- az_webapp_config_storage-account_delete
- az_webapp_config_storage-account_list
- az_webapp_config_storage-account_update
- az_webapp_connection
- az_webapp_connection_create
- az_webapp_connection_create_app-insights
- az_webapp_connection_create_appconfig
- az_webapp_connection_create_confluent-cloud
- az_webapp_connection_create_cosmos-cassandra
- az_webapp_connection_create_cosmos-gremlin
- az_webapp_connection_create_cosmos-mongo
- az_webapp_connection_create_cosmos-sql
- az_webapp_connection_create_cosmos-table
- az_webapp_connection_create_eventhub
- az_webapp_connection_create_keyvault
- az_webapp_connection_create_mysql
- az_webapp_connection_create_mysql-flexible
- az_webapp_connection_create_mysql-flexible(serviceconnector-passwordless)
- az_webapp_connection_create_postgres
- az_webapp_connection_create_postgres(serviceconnector-passwordless)
- az_webapp_connection_create_postgres-flexible
- az_webapp_connection_create_postgres-flexible(serviceconnector-passwordless)
- az_webapp_connection_create_redis
- az_webapp_connection_create_redis-enterprise
- az_webapp_connection_create_servicebus
- az_webapp_connection_create_signalr
- az_webapp_connection_create_sql
- az_webapp_connection_create_sql(serviceconnector-passwordless)
- az_webapp_connection_create_storage-blob
- az_webapp_connection_create_storage-file
- az_webapp_connection_create_storage-queue
- az_webapp_connection_create_storage-table
- az_webapp_connection_create_webpubsub
- az_webapp_connection_delete
- az_webapp_connection_list
- az_webapp_connection_list-configuration
- az_webapp_connection_list-support-types
- az_webapp_connection_show
- az_webapp_connection_update
- az_webapp_connection_update_app-insights
- az_webapp_connection_update_appconfig
- az_webapp_connection_update_confluent-cloud
- az_webapp_connection_update_cosmos-cassandra
- az_webapp_connection_update_cosmos-gremlin
- az_webapp_connection_update_cosmos-mongo
- az_webapp_connection_update_cosmos-sql
- az_webapp_connection_update_cosmos-table
- az_webapp_connection_update_eventhub
- az_webapp_connection_update_keyvault
- az_webapp_connection_update_mysql
- az_webapp_connection_update_mysql-flexible
- az_webapp_connection_update_postgres
- az_webapp_connection_update_postgres-flexible
- az_webapp_connection_update_redis
- az_webapp_connection_update_redis-enterprise
- az_webapp_connection_update_servicebus
- az_webapp_connection_update_signalr
- az_webapp_connection_update_sql
- az_webapp_connection_update_storage-blob
- az_webapp_connection_update_storage-file
- az_webapp_connection_update_storage-queue
- az_webapp_connection_update_storage-table
- az_webapp_connection_update_webpubsub
- az_webapp_connection_validate
- az_webapp_connection_wait
- az_webapp_cors
- az_webapp_cors_add
- az_webapp_cors_remove
- az_webapp_cors_show
- az_webapp_create
- az_webapp_create(appservice-kube)
- az_webapp_create-remote-connection
- az_webapp_delete
- az_webapp_deleted
- az_webapp_deleted_list
- az_webapp_deleted_restore
- az_webapp_deploy
- az_webapp_deployment
- az_webapp_deployment_container
- az_webapp_deployment_container_config
- az_webapp_deployment_container_show-cd-url
- az_webapp_deployment_github-actions
- az_webapp_deployment_github-actions_add
- az_webapp_deployment_github-actions_remove
- az_webapp_deployment_list-publishing-credentials
- az_webapp_deployment_list-publishing-profiles
- az_webapp_deployment_slot
- az_webapp_deployment_slot_auto-swap
- az_webapp_deployment_slot_create
- az_webapp_deployment_slot_delete
- az_webapp_deployment_slot_list
- az_webapp_deployment_slot_swap
- az_webapp_deployment_source
- az_webapp_deployment_source_config
- az_webapp_deployment_source_config-local-git
- az_webapp_deployment_source_config-zip
- az_webapp_deployment_source_config-zip(appservice-kube)
- az_webapp_deployment_source_delete
- az_webapp_deployment_source_show
- az_webapp_deployment_source_sync
- az_webapp_deployment_source_update-token
- az_webapp_deployment_user
- az_webapp_deployment_user_set
- az_webapp_deployment_user_show
- az_webapp_hybrid-connection
- az_webapp_hybrid-connection_add
- az_webapp_hybrid-connection_list
- az_webapp_hybrid-connection_remove
- az_webapp_identity
- az_webapp_identity_assign
- az_webapp_identity_remove
- az_webapp_identity_show
- az_webapp_list
- az_webapp_list-instances
- az_webapp_list-runtimes
- az_webapp_list-runtimes(appservice-kube)
- az_webapp_log
- az_webapp_log_config
- az_webapp_log_deployment
- az_webapp_log_deployment_list
- az_webapp_log_deployment_show
- az_webapp_log_download
- az_webapp_log_show
- az_webapp_log_tail
- az_webapp_restart
- az_webapp_restart(appservice-kube)
- az_webapp_scale
- az_webapp_scan
- az_webapp_scan_list-result
- az_webapp_scan_show-result
- az_webapp_scan_start
- az_webapp_scan_stop
- az_webapp_scan_track
- az_webapp_show
- az_webapp_show(appservice-kube)
- az_webapp_ssh
- az_webapp_start
- az_webapp_stop
- az_webapp_traffic-routing
- az_webapp_traffic-routing_clear
- az_webapp_traffic-routing_set
- az_webapp_traffic-routing_show
- az_webapp_up
- az_webapp_update
- az_webapp_update(appservice-kube)
- az_webapp_vnet-integration
- az_webapp_vnet-integration_add
- az_webapp_vnet-integration_list
- az_webapp_vnet-integration_remove
- az_webapp_webjob
- az_webapp_webjob_continuous
- az_webapp_webjob_continuous_list
- az_webapp_webjob_continuous_remove
- az_webapp_webjob_continuous_start
- az_webapp_webjob_continuous_stop
- az_webapp_webjob_triggered
- az_webapp_webjob_triggered_list
- az_webapp_webjob_triggered_log
- az_webapp_webjob_triggered_remove
- az_webapp_webjob_triggered_run
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: Manage web apps.
