### YamlMime:AzureCLIGroup
uid: az_dt_twin
name: az dt twin
extensionInformation: >-
  > [!NOTE]

  > This reference is part of the **azure-iot** extension for the Azure CLI (version 2.37.0 or higher). The extension will automatically install the first time you run an **az dt twin** command. [Learn more](https://learn.microsoft.com/cli/azure/azure-cli-extensions-overview) about extensions.
summary: |-
  Manage and configure the digital twins of a Digital Twins instance.
status: GA
sourceType: Extension
directCommands:
- uid: az_dt_twin_create
  name: az dt twin create
  summary: |-
    Create a digital twin on an instance.
  description: |-
    --properties can be inline JSON or file path.
    Note: --properties are required for twins that contain components.
  status: GA
  sourceType: Extension
  syntax: >-
    az dt twin create --dt-name
                      --dtmi
                      --twin-id
                      [--if-none-match]
                      [--properties]
                      [--resource-group]
  examples:
  - summary: |-
      Create a digital twin from an existing (prior-created) model.
    syntax: az dt twin create -n {instance_or_hostname} --dtmi "dtmi:com:example:Room;1" --twin-id {twin_id}
  - summary: |-
      Create a digital twin from an existing (prior-created) model with if-none-match tag.
    syntax: az dt twin create -n {instance_or_hostname} --dtmi "dtmi:com:example:Room;1" --twin-id {twin_id} --if-none-match
  - summary: |-
      Create a digital twin from an existing (prior-created) model. Instantiate with property values.
    syntax: "az dt twin create -n {instance_or_hostname} --dtmi \"dtmi:com:example:DeviceInformation;1\" --twin-id {twin_id} --properties '{\"manufacturer\": \"Microsoft\"}'"
  - summary: |-
      Create a digital twin with component from existing (prior-created) models. Instantiate component with minimum properties.
    syntax: >-
      az dt twin create -n {instance_or_hostname} --dtmi "dtmi:com:example:TemperatureController;1" --twin-id {twin_id} --properties '{
          "Thermostat": {
              "$metadata": {},
          }
      }'
  - summary: |-
      Create a digital twin with component from existing (prior-created) models. Instantiate with property values.
    syntax: >-
      az dt twin create -n {instance_or_hostname} --dtmi "dtmi:com:example:TemperatureController;1" --twin-id {twin_id} --properties '{
          "Temperature": 10.2,
          "Thermostat": {
              "$metadata": {},
              "setPointTemp": 23.12
          }
      }'
  requiredParameters:
  - isRequired: true
    name: --dt-name --dtn -n
    summary: |-
      Digital Twins instance name or hostname. If an instance name is provided, the user subscription is first queried for the target instance to retrieve the hostname. If a hostname is provided, the subscription query is skipped and the provided value is used for subsequent interaction.
  - isRequired: true
    name: --dtmi --model-id -m
    summary: |-
      Digital Twins model Id. Example: dtmi:com:example:Room;2.
  - isRequired: true
    name: --twin-id -t
    summary: |-
      The digital twin Id.
  optionalParameters:
  - name: --if-none-match
    defaultValue: "False"
    summary: |-
      Indicates the create operation should fail if an existing twin with the same id exists.
  - name: --properties -p
    summary: |-
      Initial property values for instantiating a digital twin or related components. Provide file path or inline JSON. Properties are required for twins that contain components, at the minimum you must provide an empty $metadata object for each component.
  - name: --resource-group -g
    summary: |-
      Digital Twins instance resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_dt_twin_delete
  name: az dt twin delete
  summary: |-
    Remove a digital twin. All relationships referencing this twin must already be deleted.
  status: GA
  sourceType: Extension
  syntax: >-
    az dt twin delete --dt-name
                      --twin-id
                      [--etag]
                      [--resource-group]
  examples:
  - summary: |-
      Remove a digital twin by Id.
    syntax: az dt twin delete -n {instance_or_hostname} --twin-id {twin_id}
  - summary: |-
      Remove a digital twin by Id using the etag.
    syntax: az dt twin delete -n {instance_or_hostname} --twin-id {twin_id} --etag {etag}
  requiredParameters:
  - isRequired: true
    name: --dt-name --dtn -n
    summary: |-
      Digital Twins instance name or hostname. If an instance name is provided, the user subscription is first queried for the target instance to retrieve the hostname. If a hostname is provided, the subscription query is skipped and the provided value is used for subsequent interaction.
  - isRequired: true
    name: --twin-id -t
    summary: |-
      The digital twin Id.
  optionalParameters:
  - name: --etag -e
    summary: |-
      Entity tag value. The command will succeed if the etag matches the current etag for the resource.
  - name: --resource-group -g
    summary: |-
      Digital Twins instance resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_dt_twin_delete-all
  name: az dt twin delete-all
  summary: |-
    Deletes all digital twins within a Digital Twins instance, including all relationships for those twins.
  status: GA
  sourceType: Extension
  syntax: >-
    az dt twin delete-all --dt-name
                          [--resource-group]
                          [--yes]
  examples:
  - summary: |-
      Delete all digital twins. Any relationships referencing the twins will also be deleted.
    syntax: az dt twin delete-all -n {instance_or_hostname}
  requiredParameters:
  - isRequired: true
    name: --dt-name --dtn -n
    summary: |-
      Digital Twins instance name or hostname. If an instance name is provided, the user subscription is first queried for the target instance to retrieve the hostname. If a hostname is provided, the subscription query is skipped and the provided value is used for subsequent interaction.
  optionalParameters:
  - name: --resource-group -g
    summary: |-
      Digital Twins instance resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --yes -y
    defaultValue: "False"
    summary: |-
      Do not prompt for confirmation.
- uid: az_dt_twin_query
  name: az dt twin query
  summary: |-
    Query the digital twins of an instance. Allows traversing relationships and filtering by property values.
  description: |-
    In many twin queries, the `$` character is used to reference the `$dtId` property of a twin. In bash-like shells or powershell the `$` character has functional meaning and must be escaped as part of the query input. Please review the Digital Twins CLI concepts document https://docs.microsoft.com/en-us/azure/digital-twins/concepts-cli for more information.
  status: GA
  sourceType: Extension
  syntax: >-
    az dt twin query --dt-name
                     --query-command
                     [--cost {false, true}]
                     [--resource-group]
  examples:
  - summary: |-
      Query all digital twins in target instance and project all attributes. Also show cost in query units.
    syntax: az dt twin query -n {instance_or_hostname} -q "select * from digitaltwins" --show-cost
  - summary: |-
      Query by model and project all attributes.
    syntax: az dt twin query -n {instance_or_hostname} -q "select * from digitaltwins T where IS_OF_MODEL(T, 'dtmi:com:example:Room;2')"
  - summary: |-
      Query leveraging `$dtId` with bash compatible syntax
    syntax: az dt twin query -n {instance_or_hostname} --query-command "SELECT * FROM DigitalTwins T Where T.\$dtId = 'room0'"
  - summary: |-
      Query leveraging `$dtId` with powershell compatible syntax
    syntax: az dt twin query -n {instance_or_hostname} --query-command "SELECT * FROM DigitalTwins T Where T.`$dtId = 'room0'"
  requiredParameters:
  - isRequired: true
    name: --dt-name --dtn -n
    summary: |-
      Digital Twins instance name or hostname. If an instance name is provided, the user subscription is first queried for the target instance to retrieve the hostname. If a hostname is provided, the subscription query is skipped and the provided value is used for subsequent interaction.
  - isRequired: true
    name: --query-command -q
    summary: |-
      User query to be executed.
  optionalParameters:
  - name: --cost --show-cost
    defaultValue: "False"
    parameterValueGroup: "false, true"
    summary: |-
      Calculates and shows the query charge.
  - name: --resource-group -g
    summary: |-
      Digital Twins instance resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_dt_twin_show
  name: az dt twin show
  summary: |-
    Show the details of a digital twin.
  status: GA
  sourceType: Extension
  syntax: >-
    az dt twin show --dt-name
                    --twin-id
                    [--resource-group]
  examples:
  - summary: |-
      Show the details of a digital twin.
    syntax: az dt twin show -n {instance_or_hostname} --twin-id {twin_id}
  requiredParameters:
  - isRequired: true
    name: --dt-name --dtn -n
    summary: |-
      Digital Twins instance name or hostname. If an instance name is provided, the user subscription is first queried for the target instance to retrieve the hostname. If a hostname is provided, the subscription query is skipped and the provided value is used for subsequent interaction.
  - isRequired: true
    name: --twin-id -t
    summary: |-
      The digital twin Id.
  optionalParameters:
  - name: --resource-group -g
    summary: |-
      Digital Twins instance resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_dt_twin_update
  name: az dt twin update
  summary: |-
    Update an instance digital twin via JSON patch specification.
  description: |-
    Updates to property values and $model elements may happen in the same request. Operations are limited to add, replace and remove.
  status: GA
  sourceType: Extension
  syntax: >-
    az dt twin update --dt-name
                      --json-patch
                      --twin-id
                      [--etag]
                      [--resource-group]
  examples:
  - summary: |-
      Update a digital twin via JSON patch specification.
    syntax: "az dt twin update -n {instance_or_hostname} --twin-id {twin_id} --json-patch '{\"op\":\"replace\", \"path\":\"/Temperature\", \"value\": 20.5}'"
  - summary: |-
      Update a digital twin via JSON patch specification and using etag.
    syntax: "az dt twin update -n {instance_or_hostname} --twin-id {twin_id} --etag {etag} --json-patch '{\"op\":\"replace\", \"path\":\"/Temperature\", \"value\": 20.5}'"
  - summary: |-
      Update a digital twin via JSON patch specification.
    syntax: >-
      az dt twin update -n {instance_or_hostname} --twin-id {twin_id} --json-patch '[
        {"op":"replace", "path":"/Temperature", "value": 20.5},
        {"op":"add", "path":"/Areas", "value": ["ControlSystem"]}
      ]'
  - summary: |-
      Update a digital twin via JSON patch specification defined in a file.
    syntax: az dt twin update -n {instance_or_hostname} --twin-id {twin_id} --json-patch ./my/patch/document.json
  requiredParameters:
  - isRequired: true
    name: --dt-name --dtn -n
    summary: |-
      Digital Twins instance name or hostname. If an instance name is provided, the user subscription is first queried for the target instance to retrieve the hostname. If a hostname is provided, the subscription query is skipped and the provided value is used for subsequent interaction.
  - isRequired: true
    name: --json-patch --patch
    summary: |-
      An update specification described by JSON-patch. Updates to property values and $model elements may happen in the same request. Operations are limited to add, replace and remove. Provide file path or inline JSON.
  - isRequired: true
    name: --twin-id -t
    summary: |-
      The digital twin Id.
  optionalParameters:
  - name: --etag -e
    summary: |-
      Entity tag value. The command will succeed if the etag matches the current etag for the resource.
  - name: --resource-group -g
    summary: |-
      Digital Twins instance resource group. You can configure the default group using `az configure --defaults group=<name>`.
commands:
- az_dt_twin_component
- az_dt_twin_component_show
- az_dt_twin_component_update
- az_dt_twin_create
- az_dt_twin_delete
- az_dt_twin_delete-all
- az_dt_twin_query
- az_dt_twin_relationship
- az_dt_twin_relationship_create
- az_dt_twin_relationship_delete
- az_dt_twin_relationship_delete-all
- az_dt_twin_relationship_list
- az_dt_twin_relationship_show
- az_dt_twin_relationship_update
- az_dt_twin_show
- az_dt_twin_telemetry
- az_dt_twin_telemetry_send
- az_dt_twin_update
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: Manage and configure the digital twins of a Digital Twins instance.
