### YamlMime:AzureCLIGroup
uid: az_keyvault_key
name: az keyvault key
summary: |-
  Manage keys.
status: GA
sourceType: Core
directCommands:
- uid: az_keyvault_key_backup
  name: az keyvault key backup
  summary: |-
    Request that a backup of the specified key be downloaded to the client.
  description: |-
    The Key Backup operation exports a key from Vault or HSM in a protected form. Note that this operation does NOT return key material in a form that can be used outside the Vault or HSM system, the returned key material is either protected to a HSM or to Vault itself. The intent of this operation is to allow a client to GENERATE a key in one Vault or HSM instance, BACKUP the key, and then RESTORE it into another Vault or HSM instance. The BACKUP operation may be used to export, in protected form, any key type from Vault or HSM. Individual versions of a key cannot be backed up. BACKUP / RESTORE can be performed within geographical boundaries only; meaning that a BACKUP from one geographical area cannot be restored to another geographical area. For example, a backup from the US geographical area cannot be restored in an EU geographical area. This operation requires the key/backup permission.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/keyvault/_help.py
  syntax: >-
    az keyvault key backup --file
                           [--hsm-name]
                           [--id]
                           [--name]
                           [--vault-name]
  requiredParameters:
  - isRequired: true
    name: --file -f
    summary: |-
      Local file path in which to store key backup.
  optionalParameters:
  - name: --hsm-name
    summary: |-
      Name of the HSM. (--hsm-name and --vault-name are mutually exclusive, please specify just one of them).
  - name: --id
    summary: |-
      Id of the key. If specified all other 'Id' arguments should be omitted.
  - name: --name -n
    summary: |-
      Name of the key. Required if --id is not specified.
  - name: --vault-name
    summary: |-
      Name of the Vault.
- uid: az_keyvault_key_create
  name: az keyvault key create
  summary: |-
    Create a new key, stores it, then returns key parameters and attributes to the client.
  description: |-
    The create key operation can be used to create any key type in Vault or HSM. If the named key already exists, Vault or HSM creates a new version of the key. It requires the keys/create permission.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/keyvault/_help.py
  syntax: >-
    az keyvault key create [--curve {P-256, P-256K, P-384, P-521}]
                           [--default-cvm-policy]
                           [--disabled {false, true}]
                           [--expires]
                           [--exportable {false, true}]
                           [--hsm-name]
                           [--id]
                           [--immutable {false, true}]
                           [--kty {EC, EC-HSM, RSA, RSA-HSM, oct, oct-HSM}]
                           [--name]
                           [--not-before]
                           [--ops {decrypt, encrypt, export, import, sign, unwrapKey, verify, wrapKey}]
                           [--policy]
                           [--protection {hsm, software}]
                           [--size]
                           [--tags]
                           [--vault-name]
  optionalParameters:
  - name: --curve
    parameterValueGroup: "P-256, P-256K, P-384, P-521"
    summary: |-
      Elliptic curve name. For valid values, see: https://docs.microsoft.com/rest/api/keyvault/keys/create-key/create-key#jsonwebkeycurvename.
  - name: --default-cvm-policy
    defaultValue: "False"
    summary: |-
      Use default policy under which the key can be exported for CVM disk encryption.
  - name: --disabled
    defaultValue: "False"
    parameterValueGroup: "false, true"
    summary: |-
      Create key in disabled state.
  - name: --expires
    summary: |-
      Expiration UTC datetime  (Y-m-d'T'H:M:S'Z').
  - name: --exportable
    parameterValueGroup: "false, true"
    summary: |-
      Whether the private key can be exported. To create key with release policy, "exportable" must be true and caller must have "export" permission.
  - name: --hsm-name
    summary: |-
      Name of the HSM. (--hsm-name and --vault-name are mutually exclusive, please specify just one of them).
  - name: --id
    summary: |-
      Id of the key. If specified all other 'Id' arguments should be omitted.
  - name: --immutable
    parameterValueGroup: "false, true"
    summary: |-
      Mark a release policy as immutable. An immutable release policy cannot be changed or updated after being marked immutable. Release policies are mutable by default.
  - name: --kty
    parameterValueGroup: "EC, EC-HSM, RSA, RSA-HSM, oct, oct-HSM"
    summary: |-
      The type of key to create. For valid values, see: https://docs.microsoft.com/rest/api/keyvault/keys/create-key/create-key#jsonwebkeytype.
  - name: --name -n
    summary: |-
      Name of the key. Required if --id is not specified.
  - name: --not-before
    summary: |-
      Key not usable before the provided UTC datetime  (Y-m-d'T'H:M:S'Z').
  - name: --ops
    parameterValueGroup: "decrypt, encrypt, export, import, sign, unwrapKey, verify, wrapKey"
    summary: |-
      Space-separated list of permitted JSON web key operations.
  - name: --policy
    summary: |-
      The policy rules under which the key can be exported. Policy definition as JSON, or a path to a file containing JSON policy definition.
  - name: --protection -p
    parameterValueGroup: "hsm, software"
    summary: |-
      Specifies the type of key protection.
  - name: --size
    summary: |-
      The key size in bits. For example: 2048, 3072, or 4096 for RSA. 128, 192, or 256 for oct.
  - name: --tags
    summary: |-
      Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags.
  - name: --vault-name
    summary: |-
      Name of the Vault.
- uid: az_keyvault_key_decrypt
  name: az keyvault key decrypt
  summary: |-
    Decrypt a single block of encrypted data.
  description: |-
    The DECRYPT operation decrypts a well-formed block of ciphertext using the target encryption key and specified algorithm. This operation is the reverse of the ENCRYPT operation; only a single block of data may be decrypted, the size of this block is dependent on the target key and the algorithm to be used. The DECRYPT operation applies to asymmetric and symmetric keys stored in Vault or HSM since it uses the private portion of the key. This operation requires the keys/decrypt permission.
  status: Preview
  isPreview: true
  previewOrExperimentalInfo: 'This command is in preview and under development. Reference and support levels: https://aka.ms/CLI_refstatus'
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/keyvault/_help.py
  syntax: >-
    az keyvault key decrypt --algorithm {A128CBC, A128CBCPAD, A128GCM, A192CBC, A192CBCPAD, A192GCM, A256CBC, A256CBCPAD, A256GCM, RSA-OAEP, RSA-OAEP-256, RSA1_5}
                            --value
                            [--aad]
                            [--data-type {base64, plaintext}]
                            [--hsm-name]
                            [--id]
                            [--iv]
                            [--name]
                            [--tag]
                            [--vault-name]
                            [--version]
  examples:
  - summary: |-
      Decrypt value(Base64 encoded string returned by encrypt command) with vault's key using RSA-OAEP and get result as base64 encoded.
    syntax: az keyvault key decrypt --name mykey --vault-name myvault --algorithm RSA-OAEP --data-type base64 --value "CbFcCxHG7WTU+nbpFRrHoqSduwlPy8xpWxf1JxZ2y12BY/qFJirMSYq1i4SO9rvSmvmEMxFV5kw5s9Tc+YoKmv8X6oe+xXx+JytYV8obA5l3OQD9epuuQHWW0kir/mp88lzhcYWxYuF7mKDpPKDV4if+wnAZqQ4woB6t2JEZU5MVK3s+3E/EU4ehb5XrVxAl6xpYy8VYbyF33uJ5s+aUsYIrsVtXgrW99HQ3ic7tJtIOGuWqKhPCdQRezRkOcyxkJcmnDHOLjWA/9strzzx/dyg/t884gT7qrkmIHh8if9SFal/vi1h4XhoDqUleMTnKev2IFHyDNcYVYG3pftJiuA=="
  - summary: |-
      Decrypt value(Base64 encoded string returned by encrypt command) with MHSM's key using AES-GCM and get result as plaintext.
    syntax: >-
      az keyvault key decrypt --name mykey --hsm-name myhsm --algorithm A256GCM --value "N5w02jS77xg536Ddzv/xPWQ=" --data-type plaintext

      --aad "101112131415161718191a1b1c1d1e1f" --iv "727b26f78e55cf4cd8d34216" --tag "f7207d02cead35a77a1c7e5f8af959e9"
  requiredParameters:
  - isRequired: true
    name: --algorithm -a
    parameterValueGroup: "A128CBC, A128CBCPAD, A128GCM, A192CBC, A192CBCPAD, A192GCM, A256CBC, A256CBCPAD, A256GCM, RSA-OAEP, RSA-OAEP-256, RSA1_5"
    summary: |-
      Algorithm identifier.
  - isRequired: true
    name: --value
    summary: |-
      The value to be decrypted, which should be the result of "az keyvault encrypt".
  optionalParameters:
  - name: --aad
    summary: |-
      Optional data that is authenticated but not encrypted. For use with AES-GCM decryption.
  - name: --data-type
    defaultValue: "base64"
    parameterValueGroup: "base64, plaintext"
    summary: |-
      The type of the original data.
  - name: --hsm-name
    summary: |-
      Name of the HSM. (--hsm-name and --vault-name are mutually exclusive, please specify just one of them).
  - name: --id
    summary: |-
      Id of the key. If specified all other 'Id' arguments should be omitted.
  - name: --iv
    summary: |-
      The initialization vector used during encryption. Required for AES decryption.
  - name: --name -n
    summary: |-
      Name of the key. Required if --id is not specified.
  - name: --tag
    summary: |-
      The authentication tag generated during encryption. Required for only AES-GCM decryption.
  - name: --vault-name
    summary: |-
      Name of the Vault.
  - name: --version -v
    summary: |-
      The key version. If omitted, uses the latest version.
- uid: az_keyvault_key_delete
  name: az keyvault key delete
  summary: |-
    Delete a key of any type from storage in Vault or HSM.
  description: |-
    The delete key operation cannot be used to remove individual versions of a key. This operation removes the cryptographic material associated with the key, which means the key is not usable for Sign/Verify, Wrap/Unwrap or Encrypt/Decrypt operations. This operation requires the keys/delete permission.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/keyvault/_help.py
  syntax: >-
    az keyvault key delete [--hsm-name]
                           [--id]
                           [--name]
                           [--vault-name]
  optionalParameters:
  - name: --hsm-name
    summary: |-
      Name of the HSM. (--hsm-name and --vault-name are mutually exclusive, please specify just one of them).
  - name: --id
    summary: |-
      Id of the key. If specified all other 'Id' arguments should be omitted.
  - name: --name -n
    summary: |-
      Name of the key. Required if --id is not specified.
  - name: --vault-name
    summary: |-
      Name of the Vault.
- uid: az_keyvault_key_download
  name: az keyvault key download
  summary: |-
    Download the public part of a stored key.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/keyvault/_help.py
  syntax: >-
    az keyvault key download --file
                             [--encoding {DER, PEM}]
                             [--hsm-name]
                             [--id]
                             [--name]
                             [--vault-name]
                             [--version]
  examples:
  - summary: |-
      Save the key with PEM encoding.
    syntax: az keyvault key download --vault-name MyKeyVault -n MyKey -e PEM -f mykey.pem
  - summary: |-
      Save the key with DER encoding.
    syntax: az keyvault key download --vault-name MyKeyVault -n MyKey -e DER -f mykey.der
  requiredParameters:
  - isRequired: true
    name: --file -f
    summary: |-
      File to receive the key contents.
  optionalParameters:
  - name: --encoding -e
    defaultValue: "PEM"
    parameterValueGroup: "DER, PEM"
    summary: |-
      Encoding of the key, default: PEM.
  - name: --hsm-name
    summary: |-
      Name of the HSM. (--hsm-name and --vault-name are mutually exclusive, please specify just one of them).
  - name: --id
    summary: |-
      Id of the key. If specified all other 'Id' arguments should be omitted.
  - name: --name -n
    summary: |-
      Name of the key. Required if --id is not specified.
  - name: --vault-name
    summary: |-
      Name of the Vault.
  - name: --version -v
    summary: |-
      The key version. If omitted, uses the latest version.
- uid: az_keyvault_key_encrypt
  name: az keyvault key encrypt
  summary: |-
    Encrypt an arbitrary sequence of bytes using an encryption key that is stored in a Vault or HSM.
  description: |-
    The ENCRYPT operation encrypts an arbitrary sequence of bytes using an encryption key that is stored in Vault or HSM. Note that the ENCRYPT operation only supports a single block of data, the size of which is dependent on the target key and the encryption algorithm to be used. The ENCRYPT operation is only strictly necessary for symmetric keys stored in Vault pr HSM since protection with an asymmetric key can be performed using public portion of the key. This operation is supported for asymmetric keys as a convenience for callers that have a key-reference but do not have access to the public key material. This operation requires the keys/encrypt permission.
  status: Preview
  isPreview: true
  previewOrExperimentalInfo: 'This command is in preview and under development. Reference and support levels: https://aka.ms/CLI_refstatus'
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/keyvault/_help.py
  syntax: >-
    az keyvault key encrypt --algorithm {A128CBC, A128CBCPAD, A128GCM, A192CBC, A192CBCPAD, A192GCM, A256CBC, A256CBCPAD, A256GCM, RSA-OAEP, RSA-OAEP-256, RSA1_5}
                            --value
                            [--aad]
                            [--data-type {base64, plaintext}]
                            [--hsm-name]
                            [--id]
                            [--iv]
                            [--name]
                            [--vault-name]
                            [--version]
  examples:
  - summary: |-
      Encrypt value(Base64 encoded string) with vault's key using RSA-OAEP.
    syntax: az keyvault key encrypt --name mykey --vault-name myvault --algorithm RSA-OAEP --value "YWJjZGVm" --data-type base64
  - summary: |-
      Encrypt value(plaintext) with MHSM's key using AES-GCM.
    syntax: az keyvault key encrypt --name mykey --hsm-name myhsm --algorithm A256GCM --value "this is plaintext" --data-type plaintext --aad "101112131415161718191a1b1c1d1e1f"
  requiredParameters:
  - isRequired: true
    name: --algorithm -a
    parameterValueGroup: "A128CBC, A128CBCPAD, A128GCM, A192CBC, A192CBCPAD, A192GCM, A256CBC, A256CBCPAD, A256GCM, RSA-OAEP, RSA-OAEP-256, RSA1_5"
    summary: |-
      Algorithm identifier.
  - isRequired: true
    name: --value
    summary: |-
      The value to be encrypted. Default data type is Base64 encoded string.
  optionalParameters:
  - name: --aad
    summary: |-
      Optional data that is authenticated but not encrypted. For use with AES-GCM encryption.
  - name: --data-type
    defaultValue: "base64"
    parameterValueGroup: "base64, plaintext"
    summary: |-
      The type of the original data.
  - name: --hsm-name
    summary: |-
      Name of the HSM. (--hsm-name and --vault-name are mutually exclusive, please specify just one of them).
  - name: --id
    summary: |-
      Id of the key. If specified all other 'Id' arguments should be omitted.
  - name: --iv
    summary: |-
      Initialization vector. Required for only AES-CBC(PAD) encryption.
  - name: --name -n
    summary: |-
      Name of the key. Required if --id is not specified.
  - name: --vault-name
    summary: |-
      Name of the Vault.
  - name: --version -v
    summary: |-
      The key version. If omitted, uses the latest version.
- uid: az_keyvault_key_get-policy-template
  name: az keyvault key get-policy-template
  summary: |-
    Return policy template as JSON encoded policy definition.
  status: Preview
  isPreview: true
  previewOrExperimentalInfo: 'This command is in preview and under development. Reference and support levels: https://aka.ms/CLI_refstatus'
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/keyvault/_help.py
  syntax: az keyvault key get-policy-template
- uid: az_keyvault_key_import
  name: az keyvault key import
  summary: |-
    Import a private key.
  description: |-
    Supports importing base64 encoded private keys from PEM files or strings. Supports importing BYOK keys into HSM for premium key vaults.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/keyvault/_help.py
  syntax: >-
    az keyvault key import [--byok-file]
                           [--byok-string]
                           [--curve {P-256, P-256K, P-384, P-521}]
                           [--default-cvm-policy]
                           [--disabled {false, true}]
                           [--expires]
                           [--exportable {false, true}]
                           [--hsm-name]
                           [--id]
                           [--immutable {false, true}]
                           [--kty {EC, RSA, oct}]
                           [--name]
                           [--not-before]
                           [--ops {decrypt, encrypt, export, import, sign, unwrapKey, verify, wrapKey}]
                           [--pem-file]
                           [--pem-password]
                           [--pem-string]
                           [--policy]
                           [--protection {hsm, software}]
                           [--tags]
                           [--vault-name]
  optionalParameters:
  - name: --byok-file
    summary: |-
      BYOK file containing the key to be imported. Must not be password protected.
  - name: --byok-string
    summary: |-
      BYOK string containing the key to be imported. Must not be password protected.
  - name: --curve
    parameterValueGroup: "P-256, P-256K, P-384, P-521"
    summary: |-
      The curve name of the key to import (only for BYOK).
  - name: --default-cvm-policy
    defaultValue: "False"
    summary: |-
      Use default policy under which the key can be exported for CVM disk encryption.
  - name: --disabled
    defaultValue: "False"
    parameterValueGroup: "false, true"
    summary: |-
      Create key in disabled state.
  - name: --expires
    summary: |-
      Expiration UTC datetime  (Y-m-d'T'H:M:S'Z').
  - name: --exportable
    parameterValueGroup: "false, true"
    summary: |-
      Whether the private key can be exported. To create key with release policy, "exportable" must be true and caller must have "export" permission.
  - name: --hsm-name
    summary: |-
      Name of the HSM. (--hsm-name and --vault-name are mutually exclusive, please specify just one of them).
  - name: --id
    summary: |-
      Id of the key. If specified all other 'Id' arguments should be omitted.
  - name: --immutable
    parameterValueGroup: "false, true"
    summary: |-
      Mark a release policy as immutable. An immutable release policy cannot be changed or updated after being marked immutable. Release policies are mutable by default.
  - name: --kty
    defaultValue: "RSA"
    parameterValueGroup: "EC, RSA, oct"
    summary: |-
      The type of key to import (only for BYOK).
  - name: --name -n
    summary: |-
      Name of the key. Required if --id is not specified.
  - name: --not-before
    summary: |-
      Key not usable before the provided UTC datetime  (Y-m-d'T'H:M:S'Z').
  - name: --ops
    parameterValueGroup: "decrypt, encrypt, export, import, sign, unwrapKey, verify, wrapKey"
    summary: |-
      Space-separated list of permitted JSON web key operations.
  - name: --pem-file
    summary: |-
      PEM file containing the key to be imported.
  - name: --pem-password
    summary: |-
      Password of PEM file.
  - name: --pem-string
    summary: |-
      PEM string containing the key to be imported.
  - name: --policy
    summary: |-
      The policy rules under which the key can be exported. Policy definition as JSON, or a path to a file containing JSON policy definition.
  - name: --protection -p
    parameterValueGroup: "hsm, software"
    summary: |-
      Specifies the type of key protection.
  - name: --tags
    summary: |-
      Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags.
  - name: --vault-name
    summary: |-
      Name of the Vault.
- uid: az_keyvault_key_list
  name: az keyvault key list
  summary: |-
    List keys in the specified Vault or HSM.
  description: |-
    Retrieve a list of the keys in the Vault or HSM as JSON Web Key structures that contain the public part of a stored key. The LIST operation is applicable to all key types, however only the base key identifier, attributes, and tags are provided in the response. Individual versions of a key are not listed in the response. This operation requires the keys/list permission.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/keyvault/_help.py
  syntax: >-
    az keyvault key list [--hsm-name]
                         [--id]
                         [--include-managed {false, true}]
                         [--maxresults]
                         [--vault-name]
  optionalParameters:
  - name: --hsm-name
    summary: |-
      Name of the HSM. Can be omitted if --id is specified.
  - name: --id
    summary: |-
      Full URI of the Vault or HSM. If specified all other 'Id' arguments should be omitted.
  - name: --include-managed
    defaultValue: "False"
    parameterValueGroup: "false, true"
    summary: |-
      Include managed keys.
  - name: --maxresults
    summary: |-
      Maximum number of results to return.
  - name: --vault-name
    summary: |-
      Name of the Vault.
- uid: az_keyvault_key_list-deleted
  name: az keyvault key list-deleted
  summary: |-
    List the deleted keys in the specified Vault or HSM.
  description: |-
    Retrieve a list of the keys in the Vault or HSM as JSON Web Key structures that contain the public part of a deleted key. This operation includes deletion-specific information. The Get Deleted Keys operation is applicable for vaults enabled for soft-delete. While the operation can be invoked on any Vault or HSM, it will return an error if invoked on a non soft-delete enabled Vault or HSM. This operation requires the keys/list permission.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/keyvault/_help.py
  syntax: >-
    az keyvault key list-deleted [--hsm-name]
                                 [--id]
                                 [--maxresults]
                                 [--vault-name]
  optionalParameters:
  - name: --hsm-name
    summary: |-
      Name of the HSM. Can be omitted if --id is specified.
  - name: --id
    summary: |-
      Full URI of the Vault or HSM. If specified all other 'Id' arguments should be omitted.
  - name: --maxresults
    summary: |-
      Maximum number of results to return.
  - name: --vault-name
    summary: |-
      Name of the Vault.
- uid: az_keyvault_key_list-versions
  name: az keyvault key list-versions
  summary: |-
    List the identifiers and properties of a key's versions.
  description: |-
    Requires keys/list permission.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/keyvault/_help.py
  syntax: >-
    az keyvault key list-versions [--hsm-name]
                                  [--id]
                                  [--maxresults]
                                  [--name]
                                  [--vault-name]
  optionalParameters:
  - name: --hsm-name
    summary: |-
      Name of the HSM. (--hsm-name and --vault-name are mutually exclusive, please specify just one of them).
  - name: --id
    summary: |-
      Id of the key. If specified all other 'Id' arguments should be omitted.
  - name: --maxresults
    summary: |-
      Maximum number of results to return.
  - name: --name -n
    summary: |-
      Name of the key. Required if --id is not specified.
  - name: --vault-name
    summary: |-
      Name of the Vault.
- uid: az_keyvault_key_purge
  name: az keyvault key purge
  summary: |-
    Permanently delete the specified key.
  description: |-
    The Purge Deleted Key operation is applicable for soft-delete enabled Vaults or HSMs. While the operation can be invoked on any Vault or HSM, it will return an error if invoked on a non soft-delete enabled Vault or HSM. This operation requires the keys/purge permission.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/keyvault/_help.py
  syntax: >-
    az keyvault key purge [--hsm-name]
                          [--id]
                          [--name]
                          [--vault-name]
  optionalParameters:
  - name: --hsm-name
    summary: |-
      Name of the HSM. (--hsm-name and --vault-name are mutually exclusive, please specify just one of them).
  - name: --id
    summary: |-
      The recovery id of the key. If specified all other 'Id' arguments should be omitted.
  - name: --name -n
    summary: |-
      Name of the key. Required if --id is not specified.
  - name: --vault-name
    summary: |-
      Name of the Vault.
- uid: az_keyvault_key_recover
  name: az keyvault key recover
  summary: |-
    Recover the deleted key to its latest version.
  description: |-
    The Recover Deleted Key operation is applicable for deleted keys in soft-delete enabled Vaults or HSMs. It recovers the deleted key back to its latest version under /keys. An attempt to recover an non-deleted key will return an error. Consider this the inverse of the delete operation on soft-delete enabled Vaults or HSMs. This operation requires the keys/recover permission.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/keyvault/_help.py
  syntax: >-
    az keyvault key recover [--hsm-name]
                            [--id]
                            [--name]
                            [--vault-name]
  optionalParameters:
  - name: --hsm-name
    summary: |-
      Name of the HSM. (--hsm-name and --vault-name are mutually exclusive, please specify just one of them).
  - name: --id
    summary: |-
      The recovery id of the key. If specified all other 'Id' arguments should be omitted.
  - name: --name -n
    summary: |-
      Name of the key. Required if --id is not specified.
  - name: --vault-name
    summary: |-
      Name of the Vault.
- uid: az_keyvault_key_restore
  name: az keyvault key restore
  summary: |-
    Restore a backed up key to a Vault or HSM.
  description: |-
    Import a previously backed up key into Vault or HSM, restoring the key, its key identifier, attributes and access control policies. The RESTORE operation may be used to import a previously backed up key. Individual versions of a key cannot be restored. The key is restored in its entirety with the same key name as it had when it was backed up. If the key name is not available in the target Key Vault, the RESTORE operation will be rejected. While the key name is retained during restore, the final key identifier will change if the key is restored to a different Vault or HSM. Restore will restore all versions and preserve version identifiers. The RESTORE operation is subject to security constraints. The target Vault or HSM must be owned by the same Microsoft Azure Subscription as the source Vault or HSM. The user must have RESTORE permission in the target Vault or HSM. This operation requires the keys/restore permission.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/keyvault/_help.py
  syntax: >-
    az keyvault key restore [--backup-folder]
                            [--blob-container-name]
                            [--file]
                            [--hsm-name]
                            [--id]
                            [--name]
                            [--no-wait]
                            [--storage-account-name]
                            [--storage-container-SAS-token]
                            [--storage-resource-uri]
                            [--vault-name]
  optionalParameters:
  - name: --backup-folder
    summary: |-
      Name of the blob container which contains the backup.
  - name: --blob-container-name
    summary: |-
      Name of Blob Container.
  - name: --file -f
    summary: |-
      Local key backup from which to restore key.
  - name: --hsm-name
    summary: |-
      Name of the HSM. Can be omitted if --id is specified.
  - name: --id
    summary: |-
      Full URI of the Vault or HSM. If specified all other 'Id' arguments should be omitted.
  - name: --name -n
    summary: |-
      Name of the key. (Only for restoring from storage account).
  - name: --no-wait
    defaultValue: "False"
    summary: |-
      Do not wait for the long-running operation to finish.
  - name: --storage-account-name
    summary: |-
      Name of Azure Storage Account.
  - name: --storage-container-SAS-token -t
    summary: |-
      The SAS token pointing to an Azure Blob storage container.
  - name: --storage-resource-uri -u
    summary: |-
      Azure Blob storage container Uri. If specified, all other 'Storage Id' arguments should be omitted.
  - name: --vault-name
    summary: |-
      Name of the Vault.
- uid: az_keyvault_key_set-attributes
  name: az keyvault key set-attributes
  summary: |-
    The update key operation changes specified attributes of a stored key and can be applied to any key type and key version stored in Vault or HSM.
  description: |-
    In order to perform this operation, the key must already exist in the Vault or HSM. The cryptographic material of a key itself cannot be changed. This operation requires the keys/update permission.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/keyvault/_help.py
  syntax: >-
    az keyvault key set-attributes [--enabled {false, true}]
                                   [--expires]
                                   [--hsm-name]
                                   [--id]
                                   [--immutable {false, true}]
                                   [--name]
                                   [--not-before]
                                   [--ops {decrypt, encrypt, export, import, sign, unwrapKey, verify, wrapKey}]
                                   [--policy]
                                   [--tags]
                                   [--vault-name]
                                   [--version]
  optionalParameters:
  - name: --enabled
    parameterValueGroup: "false, true"
    summary: |-
      Enable the key.
  - name: --expires
    summary: |-
      Expiration UTC datetime  (Y-m-d'T'H:M:S'Z').
  - name: --hsm-name
    summary: |-
      Name of the HSM. (--hsm-name and --vault-name are mutually exclusive, please specify just one of them).
  - name: --id
    summary: |-
      Id of the key. If specified all other 'Id' arguments should be omitted.
  - name: --immutable
    parameterValueGroup: "false, true"
    summary: |-
      Mark a release policy as immutable. An immutable release policy cannot be changed or updated after being marked immutable. Release policies are mutable by default.
  - name: --name -n
    summary: |-
      Name of the key. Required if --id is not specified.
  - name: --not-before
    summary: |-
      Key not usable before the provided UTC datetime  (Y-m-d'T'H:M:S'Z').
  - name: --ops
    parameterValueGroup: "decrypt, encrypt, export, import, sign, unwrapKey, verify, wrapKey"
    summary: |-
      Space-separated list of permitted JSON web key operations.
  - name: --policy
    summary: |-
      The policy rules under which the key can be exported. Policy definition as JSON, or a path to a file containing JSON policy definition.
  - name: --tags
    summary: |-
      Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags.
  - name: --vault-name
    summary: |-
      Name of the Vault.
  - name: --version -v
    summary: |-
      The key version. If omitted, uses the latest version.
- uid: az_keyvault_key_show
  name: az keyvault key show
  summary: |-
    Get a key's attributes and, if it's an asymmetric key, its public material.
  description: |-
    Requires keys/get permission.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/keyvault/_help.py
  syntax: >-
    az keyvault key show [--hsm-name]
                         [--id]
                         [--name]
                         [--vault-name]
                         [--version]
  optionalParameters:
  - name: --hsm-name
    summary: |-
      Name of the HSM. (--hsm-name and --vault-name are mutually exclusive, please specify just one of them).
  - name: --id
    summary: |-
      Id of the key. If specified all other 'Id' arguments should be omitted.
  - name: --name -n
    summary: |-
      Name of the key. Required if --id is not specified.
  - name: --vault-name
    summary: |-
      Name of the Vault.
  - name: --version -v
    summary: |-
      The key version. If omitted, uses the latest version.
- uid: az_keyvault_key_show-deleted
  name: az keyvault key show-deleted
  summary: |-
    Get the public part of a deleted key.
  description: |-
    The Get Deleted Key operation is applicable for soft-delete enabled Vaults or HSMs. While the operation can be invoked on any Vault or HSM, it will return an error if invoked on a non soft-delete enabled Vault or HSM. This operation requires the keys/get permission.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/keyvault/_help.py
  syntax: >-
    az keyvault key show-deleted [--hsm-name]
                                 [--id]
                                 [--name]
                                 [--vault-name]
  optionalParameters:
  - name: --hsm-name
    summary: |-
      Name of the HSM. (--hsm-name and --vault-name are mutually exclusive, please specify just one of them).
  - name: --id
    summary: |-
      Id of the key. If specified all other 'Id' arguments should be omitted.
  - name: --name -n
    summary: |-
      Name of the key. Required if --id is not specified.
  - name: --vault-name
    summary: |-
      Name of the Vault.
commands:
- az_keyvault_key_backup
- az_keyvault_key_create
- az_keyvault_key_decrypt
- az_keyvault_key_delete
- az_keyvault_key_download
- az_keyvault_key_encrypt
- az_keyvault_key_get-policy-template
- az_keyvault_key_import
- az_keyvault_key_list
- az_keyvault_key_list-deleted
- az_keyvault_key_list-versions
- az_keyvault_key_purge
- az_keyvault_key_recover
- az_keyvault_key_restore
- az_keyvault_key_set-attributes
- az_keyvault_key_show
- az_keyvault_key_show-deleted
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  ms.date: 11/15/2023
  description: Manage keys.
