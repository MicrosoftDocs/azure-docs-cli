### YamlMime:AzureCLIGroup
uid: az_iot_hub_device-identity
name: az iot hub device-identity
extensionInformation: >-
  > [!NOTE]

  > This reference is part of the **azure-iot** extension for the Azure CLI (version 2.37.0 or higher). The extension will automatically install the first time you run an **az iot hub device-identity** command. [Learn more](https://learn.microsoft.com/cli/azure/azure-cli-extensions-overview) about extensions.
summary: |-
  Manage IoT devices.
status: GA
sourceType: Extension
directCommands:
- uid: az_iot_hub_device-identity_create
  name: az iot hub device-identity create
  summary: |-
    Create a device in an IoT Hub.
  description: |-
    When using the auth method of shared_private_key (also known as symmetric keys),
    if no custom keys are provided the service will generate them for the device.

    If a device scope is provided for an edge device, the value will automatically be
    converted to a parent scope.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot hub device-identity create --device-id
                                      [--am {shared_private_key, x509_ca, x509_thumbprint}]
                                      [--auth-type {key, login}]
                                      [--device-scope]
                                      [--edge-enabled {false, true}]
                                      [--hub-name]
                                      [--login]
                                      [--od]
                                      [--pk]
                                      [--primary-thumbprint]
                                      [--resource-group]
                                      [--secondary-key]
                                      [--secondary-thumbprint]
                                      [--sta {disabled, enabled}]
                                      [--star]
                                      [--valid-days]
  examples:
  - summary: |-
      Create an edge enabled IoT device with default authorization (shared private key).
    syntax: az iot hub device-identity create -n {iothub_name} -d {device_id} --ee
  - summary: |-
      Create an IoT device with self-signed certificate authorization, generate a cert valid for 10 days then use its thumbprint.
    syntax: az iot hub device-identity create -n {iothub_name} -d {device_id} --am x509_thumbprint --valid-days 10
  - summary: |-
      Create an IoT device with self-signed certificate authorization, generate a cert of default expiration (365 days) and output to target directory.
    syntax: az iot hub device-identity create -n {iothub_name} -d {device_id} --am x509_thumbprint --output-dir /path/to/output
  - summary: |-
      Create an IoT device with self-signed certificate authorization and explicitly provide primary and secondary thumbprints.
    syntax: az iot hub device-identity create -n {iothub_name} -d {device_id} --am x509_thumbprint --ptp {thumbprint_1} --stp {thumbprint_2}
  - summary: |-
      Create an IoT device with root CA authorization with disabled status and reason.
    syntax: az iot hub device-identity create -n {iothub_name} -d {device_id} --am x509_ca --status disabled --status-reason 'for reasons'
  - summary: |-
      Create an IoT device with a device scope.
    syntax: az iot hub device-identity create -n {iothub_name} -d {device_id} --device-scope 'ms-azure-iot-edge://edge0-123456789123456789'
  requiredParameters:
  - isRequired: true
    name: --device-id -d
    summary: |-
      Target Device Id.
  optionalParameters:
  - name: --am --auth-method
    defaultValue: "shared_private_key"
    parameterValueGroup: "shared_private_key, x509_ca, x509_thumbprint"
    summary: |-
      The authorization method an entity is to be created with.
  - name: --auth-type
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      Indicates whether the operation should auto-derive a policy key or use the current Azure AD session. If the authentication type is login and the resource hostname is provided, resource lookup will be skipped unless needed.You can configure the default using `az configure --defaults iothub-data-auth-type=<auth-type-value>`.
  - name: --device-scope
    summary: |-
      The scope of the device. For edge devices, this is auto-generated and immutable. For leaf devices, set this to create child/parent relationship.
  - name: --edge-enabled --ee
    defaultValue: "False"
    parameterValueGroup: "false, true"
    summary: |-
      Flag indicating edge enablement.
  - name: --hub-name -n
    summary: |-
      IoT Hub name or hostname. Required if --login is not provided.
  - name: --login -l
    summary: |-
      This command supports an entity connection string with rights to perform action. Use to avoid session login via "az login". If both an entity connection string and name are provided the connection string takes priority. Required if --hub-name is not provided.
  - name: --od --output-dir
    summary: |-
      Generate self-signed cert and use its thumbprint. Output to specified target directory.
  - name: --pk --primary-key
    summary: |-
      The primary symmetric shared access key stored in base64 format.
  - name: --primary-thumbprint --ptp
    summary: |-
      Self-signed certificate thumbprint to use for the primary thumbprint.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --secondary-key --sk
    summary: |-
      The secondary symmetric shared access key stored in base64 format.
  - name: --secondary-thumbprint --stp
    summary: |-
      Self-signed certificate thumbprint to use for the secondary thumbprint.
  - name: --sta --status
    defaultValue: "enabled"
    parameterValueGroup: "disabled, enabled"
    summary: |-
      Set device status upon creation.
  - name: --star --status-reason
    summary: |-
      Description for device status.
  - name: --valid-days --vd
    summary: |-
      Generate self-signed cert and use its thumbprint. Valid for specified number of days. Default: 365.
- uid: az_iot_hub_device-identity_delete
  name: az iot hub device-identity delete
  summary: |-
    Delete an IoT Hub device.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot hub device-identity delete --device-id
                                      [--auth-type {key, login}]
                                      [--etag]
                                      [--hub-name]
                                      [--login]
                                      [--resource-group]
  requiredParameters:
  - isRequired: true
    name: --device-id -d
    summary: |-
      Target Device Id.
  optionalParameters:
  - name: --auth-type
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      Indicates whether the operation should auto-derive a policy key or use the current Azure AD session. If the authentication type is login and the resource hostname is provided, resource lookup will be skipped unless needed.You can configure the default using `az configure --defaults iothub-data-auth-type=<auth-type-value>`.
  - name: --etag -e
    summary: |-
      Etag or entity tag corresponding to the last state of the resource. If no etag is provided the value '*' is used.
  - name: --hub-name -n
    summary: |-
      IoT Hub name or hostname. Required if --login is not provided.
  - name: --login -l
    summary: |-
      This command supports an entity connection string with rights to perform action. Use to avoid session login via "az login". If both an entity connection string and name are provided the connection string takes priority. Required if --hub-name is not provided.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_iot_hub_device-identity_export
  name: az iot hub device-identity export
  summary: |-
    Export all device identities from an IoT Hub to an Azure Storage blob container.
  description: |-
    The output blob containing device identities is a text file named 'devices.txt'.

    Permissions required - Either IoT Hub shared access policy supporting 'Registry Read & Registry Write' OR a principal
    with 'IoT Hub Data Contributor' role on the IoT Hub.

    Storage account name and blob container name parameters can only be used when the storage account is in the same subscription as the input IoT Hub.
    For inline blob container SAS uri input, please review the input rules of your environment.

    For more information, see https://aka.ms/iothub-device-exportimport.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot hub device-identity export [--auth-type {key, login}]
                                      [--bc]
                                      [--bcu]
                                      [--hub-name]
                                      [--identity]
                                      [--ik {false, true}]
                                      [--login]
                                      [--resource-group]
                                      [--sa]
  examples:
  - summary: |-
      Export all device identities to a configured blob container and include device keys. The blob container name and storage account name are provided as parameters to the command.
    syntax: az iot hub device-identity export -n {iothub_name} --ik --bc {blob_container_name} --sa {storage_account_name}
  - summary: |-
      Export all device identities to a configured blob container and include device keys. Uses an inline SAS uri example.
    syntax: az iot hub device-identity export -n {iothub_name} --ik --bcu 'https://mystorageaccount.blob.core.windows.net/devices?sv=2019-02-02&st=2020-08-23T22%3A35%3A00Z&se=2020-08-24T22%3A35%3A00Z&sr=c&sp=rwd&sig=VrmJ5sQtW3kLzYg10VqmALGCp4vtYKSLNjZDDJBSh9s%3D'
  - summary: |-
      Export all device identities to a configured blob container using a file path which contains the SAS uri.
    syntax: az iot hub device-identity export -n {iothub_name} --bcu {sas_uri_filepath}
  - summary: |-
      Export all device identities to a configured blob container and include device keys. Uses system assigned identity that has Storage Blob Data Contributor roles for the storage account. The blob container name and storage account name are provided as parameters to the command.
    syntax: az iot hub device-identity export -n {iothub_name} --ik --bc {blob_container_name} --sa {storage_account_name} --identity [system]
  - summary: |-
      Export all device identities to a configured blob container and include device keys. Uses system assigned identity that has Storage Blob Data Contributor roles for the storage account. The blob container uri does not need the blob SAS token.
    syntax: az iot hub device-identity export -n {iothub_name} --ik --bcu 'https://mystorageaccount.blob.core.windows.net/devices' --identity [system]
  - summary: |-
      Export all device identities to a configured blob container and include device keys. Uses user assigned managed identity that has Storage Blob Data Contributor role for the storage account. The blob container name and storage account name are provided as parameters to the command.
    syntax: az iot hub device-identity export -n {iothub_name} --ik --bc {blob_container_name} --sa {storage_account_name} --identity {managed_identity_resource_id}
  - summary: |-
      Export all device identities to a configured blob container and include device keys. Uses user assigned managed identity that has Storage Blob Data Contributor role for the storage account. The blob container uri does not need the blob SAS token.
    syntax: az iot hub device-identity export -n {iothub_name} --ik --bcu 'https://mystorageaccount.blob.core.windows.net/devices' --identity {managed_identity_resource_id}
  optionalParameters:
  - name: --auth-type
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      Indicates whether the operation should auto-derive a policy key or use the current Azure AD session. If the authentication type is login and the resource hostname is provided, resource lookup will be skipped unless needed.You can configure the default using `az configure --defaults iothub-data-auth-type=<auth-type-value>`.
  - name: --bc --blob-container
    summary: |-
      This blob container is used to output the status of the device identity import job and the results. Parameter is ignored when blob_container_uri is provided. Write, read and delete access is required for this blob container.
  - name: --bcu --blob-container-uri
    summary: |-
      Blob Shared Access Signature URI with write, read, and delete access to a blob container. This is used to output the status of the job and the results. Note: when using Identity-based authentication an https:// URI is still required - but no SAS token is necessary. Input for this argument can be inline or from a file path.
  - name: --hub-name -n
    summary: |-
      IoT Hub name or hostname. Required if --login is not provided.
  - name: --identity
    summary: |-
      Managed identity type to determine if system assigned managed identity or user assigned managed identity is used. For system assigned managed identity, use [system]. For user assigned managed identity, provide the user assigned managed identity resource id. This identity requires a Storage Blob Data Contributor roles for the Storage Account.
  - name: --ik --include-keys
    defaultValue: "False"
    parameterValueGroup: "false, true"
    summary: |-
      If set, keys are exported normally. Otherwise, keys are set to null in export output.
  - name: --login -l
    summary: |-
      This command supports an entity connection string with rights to perform action. Use to avoid session login via "az login". If both an entity connection string and name are provided the connection string takes priority. Required if --hub-name is not provided.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --sa --storage-account
    summary: |-
      Name of Azure Storage account containing the output blob container.Parameter is ignored when blob_container_uri is provided. Write, read and delete access is required.
- uid: az_iot_hub_device-identity_import
  name: az iot hub device-identity import
  summary: |-
    Import device identities to an IoT Hub from a storage container blob.
  description: |-
    The expected input file containing device identities should be named 'devices.txt'.
    The output log file 'importErrors.log' is empty when import is successful and contains error logs in case of import failure.

    Permissions required - Either IoT Hub shared access policy supporting 'Registry Read & Registry Write' OR a principal
    with 'IoT Hub Data Contributor' role on the IoT Hub.

    Storage account name and blob container name parameters can only be used when the storage account is in the same subscription as the input IoT Hub.
    For inline blob container SAS uri input, please review the input rules of your environment.

    For more information, see https://aka.ms/iothub-device-exportimport.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot hub device-identity import [--auth-type {key, login}]
                                      [--hub-name]
                                      [--ibc]
                                      [--ibcu]
                                      [--identity]
                                      [--input-storage-account]
                                      [--login]
                                      [--obc]
                                      [--obcu]
                                      [--osa]
                                      [--resource-group]
  examples:
  - summary: |-
      Import all device identities from a blob by providing command parameters for input blob container and storage account as well as output blob container and storage account.
    syntax: az iot hub device-identity import -n {iothub_name} --ibc {input_blob_container_name} --isa {input_storage_account_name} --obc {output_blob_container_name} --osa {output_storage_account_name}
  - summary: |-
      Import all device identities from a blob using an inline SAS uri.
    syntax: az iot hub device-identity import -n {iothub_name} --ibcu {input_sas_uri} --obcu {output_sas_uri}
  - summary: |-
      Import all device identities from a blob using a file path which contains SAS uri.
    syntax: az iot hub device-identity import -n {iothub_name} --ibcu {input_sas_uri_filepath} --obcu {output_sas_uri_filepath}
  - summary: |-
      Import all device identities from a blob using system assigned identity that has Storage Blob Data Contributor roles for both storage accounts. The input blob container and storage account as well as output blob container and storage account are provided as parameters to the command
    syntax: az iot hub device-identity import -n {iothub_name} --ibc {input_blob_container_name} --isa {input_storage_account_name} --obc {output_blob_container_name} --osa {output_storage_account_name} --identity [system]
  - summary: |-
      Import all device identities from a blob using system assigned identity that has Storage Blob Data Contributor roles for both storage accounts. The blob container uri does not need the blob SAS token.
    syntax: az iot hub device-identity import -n {iothub_name} --ibcu {input_sas_uri} --obcu {output_sas_uri} --identity [system]
  - summary: |-
      Import all device identities from a blob using user assigned managed identity that has Storage Blob Data Contributor roles for both storage accounts. The input blob container and storage account as well as output blob container and storage account are provided as parameters to the command
    syntax: az iot hub device-identity import -n {iothub_name} --ibc {input_blob_container_name} --isa {input_storage_account_name} --obc {output_blob_container_name} --osa {output_storage_account_name} --identity {managed_identity_resource_id}
  - summary: |-
      Import all device identities from a blob using user assigned managed identity that has Storage Blob Data Contributor roles for both storage accounts. The blob container uri does not need the blob SAS token.
    syntax: az iot hub device-identity import -n {iothub_name} --ibcu {input_sas_uri} --obcu {output_sas_uri} --identity {managed_identity_resource_id}
  optionalParameters:
  - name: --auth-type
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      Indicates whether the operation should auto-derive a policy key or use the current Azure AD session. If the authentication type is login and the resource hostname is provided, resource lookup will be skipped unless needed.You can configure the default using `az configure --defaults iothub-data-auth-type=<auth-type-value>`.
  - name: --hub-name -n
    summary: |-
      IoT Hub name or hostname. Required if --login is not provided.
  - name: --ibc --input-blob-container
    summary: |-
      This blob container stores the file which defines operations to be performed on the identity registry. Parameter is ignored when input_blob_container_uri is provided. Read access is required for this blob container.
  - name: --ibcu --input-blob-container-uri
    summary: |-
      Blob Shared Access Signature URI with read access to a blob container. This blob contains the operations to be performed on the identity registry. Note: when using Identity-based authentication an https:// URI is still required - but no SAS token is necessary. Input for this argument can be inline or from a file path.
  - name: --identity
    summary: |-
      Managed identity type to determine if system assigned managed identity or user assigned managed identity is used. For system assigned managed identity, use [system]. For user assigned managed identity, provide the user assigned managed identity resource id. This identity requires a Storage Blob Data Contributor role for the target Storage Account and Contributor role for the IoT Hub.
  - name: --input-storage-account --isa
    summary: |-
      Name of Azure Storage account containing the input blob container.Only required when input_blob_container_uri is not provided. Read access is required.
  - name: --login -l
    summary: |-
      This command supports an entity connection string with rights to perform action. Use to avoid session login via "az login". If both an entity connection string and name are provided the connection string takes priority. Required if --hub-name is not provided.
  - name: --obc --output-blob-container
    summary: |-
      This blob container is used to output the status of the device identity import job and the results. Only required when input_blob_container_uri is not provided. Write access is required for this blob container.
  - name: --obcu --output-blob-container-uri
    summary: |-
      Blob Shared Access Signature URI with write access to a blob container. This is used to output the status of the job and the results. Note: when using Identity-based authentication an https:// URI without the SAS token is still required. Input for this argument can be inline or from a file path.
  - name: --osa --output-storage-account
    summary: |-
      Name of Azure Storage account containing the output blob container.Parameter is ignored when output_blob_container_uri is provided. Write access is required.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_iot_hub_device-identity_list
  name: az iot hub device-identity list
  summary: |-
    List devices in an IoT Hub.
  description: |-
    This command is an alias for `az iot hub device-twin list`, which is highly recommended over
    this command. In the future, this `az iot hub device-identity list` command may be
    altered or deprecated.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot hub device-identity list [--auth-type {key, login}]
                                    [--edge-enabled {false, true}]
                                    [--hub-name]
                                    [--login]
                                    [--resource-group]
                                    [--top]
  optionalParameters:
  - name: --auth-type
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      Indicates whether the operation should auto-derive a policy key or use the current Azure AD session. If the authentication type is login and the resource hostname is provided, resource lookup will be skipped unless needed.You can configure the default using `az configure --defaults iothub-data-auth-type=<auth-type-value>`.
  - name: --edge-enabled --ee
    defaultValue: "False"
    parameterValueGroup: "false, true"
    summary: |-
      Flag indicating edge enablement.
  - name: --hub-name -n
    summary: |-
      IoT Hub name or hostname. Required if --login is not provided.
  - name: --login -l
    summary: |-
      This command supports an entity connection string with rights to perform action. Use to avoid session login via "az login". If both an entity connection string and name are provided the connection string takes priority. Required if --hub-name is not provided.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --top
    defaultValue: "1000"
    summary: |-
      Maximum number of elements to return. Use -1 for unlimited.
- uid: az_iot_hub_device-identity_renew-key
  name: az iot hub device-identity renew-key
  summary: |-
    Renew target keys of an IoT Hub device with sas authentication.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot hub device-identity renew-key --device-id
                                         --hub-name
                                         --key-type {primary, secondary, swap}
                                         [--auth-type {key, login}]
                                         [--etag]
                                         [--login]
                                         [--resource-group]
  examples:
  - summary: |-
      Renew the primary key.
    syntax: az iot hub device-identity renew-key -d {device_id} -n {iothub_name} --kt primary
  - summary: |-
      Swap the primary and secondary keys.
    syntax: az iot hub device-identity renew-key -d {device_id} -n {iothub_name} --kt swap
  requiredParameters:
  - isRequired: true
    name: --device-id -d
    summary: |-
      Target Device Id.
  - isRequired: true
    name: --hub-name -n
    summary: |-
      IoT Hub name or hostname. Required if --login is not provided.
  - isRequired: true
    name: --key-type --kt
    parameterValueGroup: "primary, secondary, swap"
    summary: |-
      Target key type to regenerate.
  optionalParameters:
  - name: --auth-type
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      Indicates whether the operation should auto-derive a policy key or use the current Azure AD session. If the authentication type is login and the resource hostname is provided, resource lookup will be skipped unless needed.You can configure the default using `az configure --defaults iothub-data-auth-type=<auth-type-value>`.
  - name: --etag -e
    summary: |-
      Etag or entity tag corresponding to the last state of the resource. If no etag is provided the value '*' is used.
  - name: --login -l
    summary: |-
      This command supports an entity connection string with rights to perform action. Use to avoid session login via "az login". If both an entity connection string and name are provided the connection string takes priority. Required if --hub-name is not provided.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_iot_hub_device-identity_show
  name: az iot hub device-identity show
  summary: |-
    Get the details of an IoT Hub device.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot hub device-identity show --device-id
                                    [--auth-type {key, login}]
                                    [--hub-name]
                                    [--login]
                                    [--resource-group]
  requiredParameters:
  - isRequired: true
    name: --device-id -d
    summary: |-
      Target Device Id.
  optionalParameters:
  - name: --auth-type
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      Indicates whether the operation should auto-derive a policy key or use the current Azure AD session. If the authentication type is login and the resource hostname is provided, resource lookup will be skipped unless needed.You can configure the default using `az configure --defaults iothub-data-auth-type=<auth-type-value>`.
  - name: --hub-name -n
    summary: |-
      IoT Hub name or hostname. Required if --login is not provided.
  - name: --login -l
    summary: |-
      This command supports an entity connection string with rights to perform action. Use to avoid session login via "az login". If both an entity connection string and name are provided the connection string takes priority. Required if --hub-name is not provided.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_iot_hub_device-identity_update
  name: az iot hub device-identity update
  summary: |-
    Update an IoT Hub device.
  description: |-
    Use --set followed by property assignments for updating a device. Leverage parameters returned from 'iot hub device-identity show'.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot hub device-identity update --device-id
                                      [--add]
                                      [--am {shared_private_key, x509_ca, x509_thumbprint}]
                                      [--auth-type {key, login}]
                                      [--edge-enabled {false, true}]
                                      [--etag]
                                      [--force-string]
                                      [--hub-name]
                                      [--login]
                                      [--pk]
                                      [--primary-thumbprint]
                                      [--remove]
                                      [--resource-group]
                                      [--secondary-key]
                                      [--secondary-thumbprint]
                                      [--set]
                                      [--sta {disabled, enabled}]
                                      [--star]
  examples:
  - summary: |-
      Turn on edge capabilities for device
    syntax: az iot hub device-identity update -d {device_id} -n {iothub_name} --set capabilities.iotEdge=true
  - summary: |-
      Turn on edge capabilities for device using convenience argument.
    syntax: az iot hub device-identity update -d {device_id} -n {iothub_name} --ee
  - summary: |-
      Disable device status
    syntax: az iot hub device-identity update -d {device_id} -n {iothub_name} --set status=disabled
  - summary: |-
      Disable device status using convenience argument.
    syntax: az iot hub device-identity update -d {device_id} -n {iothub_name} --status disabled
  - summary: |-
      In one command
    syntax: az iot hub device-identity update -d {device_id} -n {iothub_name} --set status=disabled capabilities.iotEdge=true
  requiredParameters:
  - isRequired: true
    name: --device-id -d
    summary: |-
      Target Device Id.
  optionalParameters:
  - name: --add
    defaultValue: "[]"
    summary: |-
      Add an object to a list of objects by specifying a path and key value pairs.  Example: `--add property.listProperty <key=value, string or JSON string>`.
  - name: --am --auth-method
    parameterValueGroup: "shared_private_key, x509_ca, x509_thumbprint"
    summary: |-
      The authorization method an entity is to be created with.
  - name: --auth-type
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      Indicates whether the operation should auto-derive a policy key or use the current Azure AD session. If the authentication type is login and the resource hostname is provided, resource lookup will be skipped unless needed.You can configure the default using `az configure --defaults iothub-data-auth-type=<auth-type-value>`.
  - name: --edge-enabled --ee
    parameterValueGroup: "false, true"
    summary: |-
      Flag indicating edge enablement.
  - name: --etag -e
    summary: |-
      Etag or entity tag corresponding to the last state of the resource. If no etag is provided the value '*' is used.
  - name: --force-string
    defaultValue: "False"
    summary: |-
      When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.
  - name: --hub-name -n
    summary: |-
      IoT Hub name or hostname. Required if --login is not provided.
  - name: --login -l
    summary: |-
      This command supports an entity connection string with rights to perform action. Use to avoid session login via "az login". If both an entity connection string and name are provided the connection string takes priority. Required if --hub-name is not provided.
  - name: --pk --primary-key
    summary: |-
      The primary symmetric shared access key stored in base64 format.
  - name: --primary-thumbprint --ptp
    summary: |-
      Self-signed certificate thumbprint to use for the primary thumbprint.
  - name: --remove
    defaultValue: "[]"
    summary: |-
      Remove a property or an element from a list.  Example: `--remove property.list <indexToRemove>` OR `--remove propertyToRemove`.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --secondary-key --sk
    summary: |-
      The secondary symmetric shared access key stored in base64 format.
  - name: --secondary-thumbprint --stp
    summary: |-
      Self-signed certificate thumbprint to use for the secondary thumbprint.
  - name: --set
    defaultValue: "[]"
    summary: |-
      Update an object by specifying a property path and value to set.  Example: `--set property1.property2=<value>`.
  - name: --sta --status
    parameterValueGroup: "disabled, enabled"
    summary: |-
      Set device status upon creation.
  - name: --star --status-reason
    summary: |-
      Description for device status.
commands:
- az_iot_hub_device-identity_children
- az_iot_hub_device-identity_children_add
- az_iot_hub_device-identity_children_list
- az_iot_hub_device-identity_children_remove
- az_iot_hub_device-identity_connection-string
- az_iot_hub_device-identity_connection-string_show
- az_iot_hub_device-identity_create
- az_iot_hub_device-identity_delete
- az_iot_hub_device-identity_export
- az_iot_hub_device-identity_import
- az_iot_hub_device-identity_list
- az_iot_hub_device-identity_parent
- az_iot_hub_device-identity_parent_set
- az_iot_hub_device-identity_parent_show
- az_iot_hub_device-identity_renew-key
- az_iot_hub_device-identity_show
- az_iot_hub_device-identity_update
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: Manage IoT devices.
