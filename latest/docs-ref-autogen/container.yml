### YamlMime:AzureCLIGroup
uid: az_container
name: az container
importantNote: >-
  > [!NOTE]

  > This command group has commands that are defined in both Azure CLI and at least one extension. Install each extension to benefit from its extended capabilities. [Learn more](https://learn.microsoft.com/cli/azure/azure-cli-extensions-overview) about extensions.
summary: |-
  Manage Azure Container Instances.
status: GA
sourceType: Core and Extension
directCommands:
- uid: az_container_attach
  name: az container attach
  summary: |-
    Attach local standard output and error streams to a container in a container group. This command provides diagnostic information during container startup. Once the container has started, it streams STDOUT and STDERR to your local console.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/container/_help.py
  syntax: >-
    az container attach [--container-name]
                        [--ids]
                        [--name]
                        [--resource-group]
                        [--subscription]
  examples:
  - summary: |-
      Attach local standard output and error streams to a container in a container group. (autogenerated)
    syntax: az container attach --name MyContainerGroup --resource-group MyResourceGroup
  optionalParameters:
  - name: --container-name
    summary: |-
      The container to attach to. If omitted, the first container in the container group will be chosen.
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      The name of the container group.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_container_create
  name: az container create
  summary: |-
    Create a container group.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/container/_help.py
  syntax: >-
    az container create --resource-group
                        [--acr-identity]
                        [--add-capabilities]
                        [--allow-escalation]
                        [--assign-identity]
                        [--azure-file-volume-account-key]
                        [--azure-file-volume-account-name]
                        [--azure-file-volume-mount-path]
                        [--azure-file-volume-share-name]
                        [--cce-policy]
                        [--command-line]
                        [--cpu]
                        [--dns-name-label]
                        [--drop-capabilities]
                        [--environment-variables]
                        [--file]
                        [--gitrepo-dir]
                        [--gitrepo-mount-path]
                        [--gitrepo-revision]
                        [--gitrepo-url]
                        [--image]
                        [--ip-address {Private, Public}]
                        [--location]
                        [--log-analytics-workspace]
                        [--log-analytics-workspace-key]
                        [--memory]
                        [--name]
                        [--no-wait]
                        [--os-type {Linux, Windows}]
                        [--ports]
                        [--priority]
                        [--privileged]
                        [--protocol {TCP, UDP}]
                        [--registry-login-server]
                        [--registry-password]
                        [--registry-username]
                        [--restart-policy {Always, Never, OnFailure}]
                        [--role]
                        [--run-as-group]
                        [--run-as-user]
                        [--scope]
                        [--seccomp-profile]
                        [--secrets]
                        [--secrets-mount-path]
                        [--secure-environment-variables]
                        [--sku]
                        [--subnet]
                        [--subnet-address-prefix]
                        [--vnet]
                        [--vnet-address-prefix]
                        [--vnet-name]
                        [--zone]
  examples:
  - summary: |-
      Create a container in a container group with 1 core and 1Gb of memory.
    syntax: az container create -g MyResourceGroup --name myapp --image myimage:latest --cpu 1 --memory 1
  - summary: |-
      Create a container in a container group that runs Windows, with 2 cores and 3.5Gb of memory.
    syntax: az container create -g MyResourceGroup --name mywinapp --image winappimage:latest --os-type Windows --cpu 2 --memory 3.5
  - summary: |-
      Create a container in a container group with public IP address, ports and DNS name label.
    syntax: az container create -g MyResourceGroup --name myapp --image myimage:latest --ports 80 443 --dns-name-label contoso
  - summary: |-
      Create a container in a container group that invokes a script upon start.
    syntax: az container create -g MyResourceGroup --name myapp --image myimage:latest --command-line "/bin/sh -c '/path to/myscript.sh'"
  - summary: |-
      Create a container in a container group that runs a command and stop the container afterwards.
    syntax: az container create -g MyResourceGroup --name myapp --image myimage:latest --command-line "echo hello" --restart-policy Never
  - summary: |-
      Create a container in a container group with environment variables.
    syntax: az container create -g MyResourceGroup --name myapp --image myimage:latest --environment-variables key1=value1 key2=value2
  - summary: |-
      Create a container in a container group using container image from Azure Container Registry.
    syntax: az container create -g MyResourceGroup --name myapp --image myAcrRegistry.azurecr.io/myimage:latest --registry-password password
  - summary: |-
      Create a container in a container group that mounts an Azure File share as volume.
    syntax: az container create -g MyResourceGroup --name myapp --image myimage:latest --command-line "cat /mnt/azfile/myfile" --azure-file-volume-share-name myshare --azure-file-volume-account-name mystorageaccount --azure-file-volume-account-key mystoragekey --azure-file-volume-mount-path /mnt/azfile
  - summary: |-
      Create a container in a container group that mounts a git repo as volume.
    syntax: az container create -g MyResourceGroup --name myapp --image myimage:latest --command-line "cat /mnt/gitrepo" --gitrepo-url https://github.com/user/myrepo.git --gitrepo-dir ./dir1 --gitrepo-mount-path /mnt/gitrepo
  - summary: |-
      Create a container in a container group using a yaml file.
    syntax: az container create -g MyResourceGroup -f containerGroup.yaml
  - summary: |-
      Create a container group using Log Analytics from a workspace name.
    syntax: az container create -g MyResourceGroup --name myapp --log-analytics-workspace myworkspace
  - summary: |-
      Create a container group with a system assigned identity.
    syntax: az container create -g MyResourceGroup --name myapp --image myimage:latest --assign-identity
  - summary: |-
      Create a container group with a system assigned identity. The group will have a 'Contributor' role with access to a storage account.
    syntax: az container create -g MyResourceGroup --name myapp --image myimage:latest --assign-identity --scope /subscriptions/99999999-1bf0-4dda-aec3-cb9272f09590/MyResourceGroup/myRG/providers/Microsoft.Storage/storageAccounts/storage1
  - summary: |-
      Create a container group with a user assigned identity.
    syntax: az container create -g MyResourceGroup --name myapp --image myimage:latest --assign-identity  /subscriptions/mySubscriptionId/resourcegroups/myRG/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myID
  - summary: |-
      Create a container group with both system and user assigned identity.
    syntax: az container create -g MyResourceGroup --name myapp --image myimage:latest --assign-identity [system] /subscriptions/mySubscriptionId/resourcegroups/myRG/providers/Microsoft.ManagedIdentity/userAssignedIdentities/myID
  requiredParameters:
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  optionalParameters:
  - name: --acr-identity
    summary: |-
      The identity with access to the container registry.
  - name: --add-capabilities
    summary: |-
      A List of security context capabilities to be added.
  - name: --allow-escalation
    defaultValue: "False"
    summary: |-
      Allow whether a process can gain more privileges than its parent process.
  - name: --assign-identity
    summary: |-
      Space-separated list of assigned identities. Assigned identities are either user assigned identities (resource IDs) and / or the system assigned identity ('[system]'). See examples for more info.
  - name: --azure-file-volume-account-key
    summary: |-
      The storage account access key used to access the Azure File share.
  - name: --azure-file-volume-account-name
    summary: |-
      The name of the storage account that contains the Azure File share.
  - name: --azure-file-volume-mount-path
    summary: |-
      The path within the container where the azure file volume should be mounted. Must not contain colon ':'.
  - name: --azure-file-volume-share-name
    summary: |-
      The name of the Azure File share to be mounted as a volume.
  - name: --cce-policy
    summary: |-
      The CCE policy for the confidential container group.
  - name: --command-line
    summary: |-
      The command line to run when the container is started, e.g. '/bin/bash -c myscript.sh'.
  - name: --cpu
    defaultValue: "1"
    summary: |-
      The required number of CPU cores of the containers, accurate to one decimal place.
  - name: --dns-name-label
    summary: |-
      The dns name label for container group with public IP.
  - name: --drop-capabilities
    summary: |-
      A List of security context capabilities to be dropped.
  - name: --environment-variables -e
    summary: |-
      A list of environment variable for the container. Space-separated values in 'key=value' format.
  - name: --file -f
    summary: |-
      The path to the input file.
  - name: --gitrepo-dir
    defaultValue: "."
    summary: |-
      The target directory path in the git repository. Must not contain '..'.
  - name: --gitrepo-mount-path
    summary: |-
      The path within the container where the git repo volume should be mounted. Must not contain colon ':'.
  - name: --gitrepo-revision
    summary: |-
      The commit hash for the specified revision.
  - name: --gitrepo-url
    summary: |-
      The URL of a git repository to be mounted as a volume.
  - name: --image
    summary: |-
      The container image name.
  - name: --ip-address
    parameterValueGroup: "Private, Public"
    summary: |-
      The IP address type of the container group.
  - name: --location -l
    summary: |-
      Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
  - name: --log-analytics-workspace
    summary: |-
      The Log Analytics workspace name or id. Use the current subscription or use --subscription flag to set the desired subscription.
  - name: --log-analytics-workspace-key
    summary: |-
      The Log Analytics workspace key.
  - name: --memory
    defaultValue: "1.5"
    summary: |-
      The required memory of the containers in GB, accurate to one decimal place.
  - name: --name -n
    summary: |-
      The name of the container group.
  - name: --no-wait
    defaultValue: "False"
    summary: |-
      Do not wait for the long-running operation to finish.
  - name: --os-type
    defaultValue: "Linux"
    parameterValueGroup: "Linux, Windows"
    summary: |-
      The OS type of the containers.
  - name: --ports
    defaultValue: "[80]"
    summary: |-
      A list of ports to open. Space-separated list of ports.
  - name: --priority
    summary: |-
      The priority of the container group.
  - name: --privileged
    defaultValue: "False"
    summary: |-
      The flag to determine if the container permissions is elevated to Privileged.
  - name: --protocol
    parameterValueGroup: "TCP, UDP"
    summary: |-
      The network protocol to use.
  - name: --registry-login-server
    summary: |-
      The container image registry login server.
  - name: --registry-password
    summary: |-
      The password to log in container image registry server.
  - name: --registry-username
    summary: |-
      The username to log in container image registry server.
  - name: --restart-policy
    defaultValue: "Always"
    parameterValueGroup: "Always, Never, OnFailure"
    summary: |-
      Restart policy for all containers within the container group.
  - name: --role
    defaultValue: "Contributor"
    summary: |-
      Role name or id the system assigned identity will have.
  - name: --run-as-group
    summary: |-
      Set the User UID for the container.
  - name: --run-as-user
    summary: |-
      Set the User GID for the container.
  - name: --scope
    summary: |-
      Scope that the system assigned identity can access.
  - name: --seccomp-profile
    summary: |-
      A base64 encoded string containing the contents of the JSON in the seccomp profile.
  - name: --secrets
    summary: |-
      Space-separated secrets in 'key=value' format.
  - name: --secrets-mount-path
    summary: |-
      The path within the container where the secrets volume should be mounted. Must not contain colon ':'.
  - name: --secure-environment-variables
    summary: |-
      A list of secure environment variable for the container. Space-separated values in 'key=value' format.
  - name: --sku
    summary: |-
      The SKU of the container group.
  - name: --subnet
    summary: |-
      The name of the subnet when creating a new VNET or referencing an existing one. Can also reference an existing subnet by ID.
  - name: --subnet-address-prefix
    defaultValue: "10.0.0.0/24"
    summary: |-
      The subnet IP address prefix to use when creating a new VNET in CIDR format.
  - name: --vnet
    summary: |-
      The name of the VNET when creating a new one or referencing an existing one. Can also reference an existing vnet by ID. This allows using vnets from other resource groups.
  - name: --vnet-address-prefix
    defaultValue: "10.0.0.0/16"
    summary: |-
      The IP address prefix to use when creating a new VNET in CIDR format.
  - name: --vnet-name
    summary: |-
      The name of the VNET when creating a new one or referencing an existing one.
    isDeprecated: true
    deprecateInfo: Argument 'vnet_name' has been deprecated and will be removed in a future release. Use '--vnet' instead.
  - name: --zone
    summary: |-
      The zone to place the container group.
- uid: az_container_delete
  name: az container delete
  summary: |-
    Delete a container group.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/container/_help.py
  syntax: >-
    az container delete [--ids]
                        [--name]
                        [--resource-group]
                        [--subscription]
                        [--yes]
  examples:
  - summary: |-
      Delete a container group. (autogenerated)
    syntax: az container delete --name MyContainerGroup --resource-group MyResourceGroup
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      The name of the container group.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --yes -y
    defaultValue: "False"
    summary: |-
      Do not prompt for confirmation.
- uid: az_container_exec
  name: az container exec
  summary: |-
    Execute a command from within a running container of a container group.
  description: |-
    The most common use case is to open an interactive bash shell. See examples below.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/container/_help.py
  syntax: >-
    az container exec --exec-command
                      [--container-name]
                      [--ids]
                      [--name]
                      [--resource-group]
                      [--subscription]
  examples:
  - summary: |-
      Stream a shell from within an nginx container.
    syntax: az container exec -g MyResourceGroup --name mynginx --container-name nginx --exec-command "/bin/bash"
  requiredParameters:
  - isRequired: true
    name: --exec-command
    summary: |-
      The command to run from within the container.
  optionalParameters:
  - name: --container-name
    summary: |-
      The container name where to execute the command. Can be ommitted for container groups with only one container.
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      The name of the container group.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_container_export
  name: az container export
  summary: |-
    Export a container group in yaml format.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/container/_help.py
  syntax: >-
    az container export --file
                        [--ids]
                        [--name]
                        [--resource-group]
                        [--subscription]
  examples:
  - summary: |-
      Export a container group in yaml.
    syntax: az container export -g MyResourceGroup --name mynginx -f output.yaml
  requiredParameters:
  - isRequired: true
    name: --file -f
    summary: |-
      The file path to export the container group.
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      The name of the container group.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_container_list
  name: az container list
  summary: |-
    List container groups.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/container/_help.py
  syntax: az container list [--resource-group]
  optionalParameters:
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_container_logs
  name: az container logs
  summary: |-
    Examine the logs for a container in a container group.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/container/_help.py
  syntax: >-
    az container logs [--container-name]
                      [--follow]
                      [--ids]
                      [--name]
                      [--resource-group]
                      [--subscription]
  examples:
  - summary: |-
      Examine the logs for a container in a container group. (autogenerated)
    syntax: az container logs --name MyContainerGroup --resource-group MyResourceGroup
  optionalParameters:
  - name: --container-name
    summary: |-
      The container name to tail the logs. If omitted, the first container in the container group will be chosen.
  - name: --follow
    defaultValue: "False"
    summary: |-
      Indicate to stream the tailing logs.
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      The name of the container group.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_container_restart
  name: az container restart
  summary: |-
    Restarts all containers in a container group.
  description: |-
    Restarts all containers in a container group in place. If container image has updates, new image will be downloaded.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/container/_help.py
  syntax: >-
    az container restart --name
                         --resource-group
                         [--no-wait]
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      The name of the container group.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  optionalParameters:
  - name: --no-wait
    defaultValue: "False"
    summary: |-
      Do not wait for the long-running operation to finish.
- uid: az_container_show
  name: az container show
  summary: |-
    Get the details of a container group.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/container/_help.py
  syntax: >-
    az container show [--ids]
                      [--name]
                      [--resource-group]
                      [--subscription]
  examples:
  - summary: |-
      Get the details of a container group. (autogenerated)
    syntax: az container show --name MyContainerGroup --resource-group MyResourceGroup
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      The name of the container group.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_container_start
  name: az container start
  summary: |-
    Starts all containers in a container group.
  description: |-
    Starts all containers in a container group. Compute resources will be allocated and billing will start.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/container/_help.py
  syntax: >-
    az container start --name
                       --resource-group
                       [--no-wait]
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      The name of the container group.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  optionalParameters:
  - name: --no-wait
    defaultValue: "False"
    summary: |-
      Do not wait for the long-running operation to finish.
- uid: az_container_stop
  name: az container stop
  summary: |-
    Stops all containers in a container group.
  description: |-
    Stops all containers in a container group. Compute resources will be deallocated and billing will stop.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/container/_help.py
  syntax: >-
    az container stop --name
                      --resource-group
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      The name of the container group.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
commands:
- az_container_app
- az_container_app_up
- az_container_attach
- az_container_create
- az_container_delete
- az_container_exec
- az_container_export
- az_container_list
- az_container_logs
- az_container_restart
- az_container_show
- az_container_start
- az_container_stop
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: Manage Azure Container Instances.
