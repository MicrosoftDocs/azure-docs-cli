### YamlMime:AzureCLIGroup
uid: az_appconfig_feature_filter
name: az appconfig feature filter
summary: |-
  Manage filters associated with feature flags stored in an App Configuration.
status: GA
sourceType: Core
directCommands:
- uid: az_appconfig_feature_filter_add
  name: az appconfig feature filter add
  summary: |-
    Add a filter to a feature flag.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appconfig/_help.py
  syntax: >-
    az appconfig feature filter add --filter-name
                                    [--auth-mode {key, login}]
                                    [--connection-string]
                                    [--endpoint]
                                    [--feature]
                                    [--filter-parameters]
                                    [--index]
                                    [--key]
                                    [--label]
                                    [--name]
                                    [--yes]
  examples:
  - summary: |-
      Add a filter for feature 'color' with label MyLabel with name 'MyFilter' and 2 parameters.
    syntax: az appconfig feature filter add -n MyAppConfiguration --feature color --label MyLabel --filter-name MyFilter --filter-parameters Name=\"Value\" Name2=\"Value2\"
  - summary: |-
      Insert a filter at index 2 (zero-based index) for feature 'color' with label MyLabel and filter name 'MyFilter' with no parameters
    syntax: az appconfig feature filter add -n MyAppConfiguration --feature color --label MyLabel --filter-name MyFilter --index 2
  - summary: |-
      Add a filter with name 'MyFilter' using connection string.
    syntax: az appconfig feature filter add --connection-string Endpoint=https://contoso.azconfig.io;Id=xxx;Secret=xxx --feature color --filter-name MyFilter
  - summary: |-
      Add a filter with name 'MyFilter' using App Configuration endpoint and your 'az login' credentials.
    syntax: az appconfig feature filter add --endpoint=https://contoso.azconfig.io --feature color --filter-name MyFilter --auth-mode login
  - summary: |-
      Add a filter for feature 'color' with label MyLabel with name 'MyFilter' and array parameters.
    syntax: az appconfig feature filter add -n MyAppConfiguration --feature color --label MyLabel --filter-name MyFilter --filter-parameters ArrayParam=[1,2,3]
  requiredParameters:
  - isRequired: true
    name: --filter-name
    summary: |-
      Name of the filter to be added.
  optionalParameters:
  - name: --auth-mode
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      This parameter can be used for indicating how a data operation is to be authorized. If the auth mode is "key", provide connection string or store name and your account access keys will be retrieved for authorization. If the auth mode is "login", provide the store endpoint or store name and your "az login" credentials will be used for authorization. You can configure the default auth mode using `az configure --defaults appconfig_auth_mode=<auth_mode>`. For more information, see https://docs.microsoft.com/azure/azure-app-configuration/concept-enable-rbac.
  - name: --connection-string
    summary: |-
      Combination of access key and endpoint of App Configuration. Can be found using 'az appconfig credential list'. Users can preset it using `az configure --defaults appconfig_connection_string=<connection_string>` or environment variable with the name AZURE_APPCONFIG_CONNECTION_STRING.
  - name: --endpoint
    summary: |-
      If auth mode is "login", provide endpoint URL of the App Configuration. The endpoint can be retrieved using "az appconfig show" command. You can configure the default endpoint using `az configure --defaults appconfig_endpoint=<endpoint>`.
  - name: --feature
    summary: |-
      Name of the feature to which you want to add the filter. If the feature flag key is different from the default key, provide the `--key` argument instead.
  - name: --filter-parameters
    summary: |-
      Space-separated filter parameters in 'name[=value]' format. The value must be an escaped JSON string.
  - name: --index
    summary: |-
      Zero-based index in the list of filters where you want to insert the new filter. If no index is specified or index is invalid, filter will be added to the end of the list.
  - name: --key
    summary: |-
      Key of the feature flag. Key must start with the ".appconfig.featureflag/" prefix. Key cannot contain the "%" character. If both key and feature arguments are provided, only key will be used. Default key is the reserved prefix ".appconfig.featureflag/" + feature name.
  - name: --label
    summary: |-
      If no label specified, add to the feature flag with null label by default.
  - name: --name -n
    summary: |-
      Name of the App Configuration. You can configure the default name using `az configure --defaults app_configuration_store=<name>`.
  - name: --yes -y
    defaultValue: "False"
    summary: |-
      Do not prompt for confirmation.
- uid: az_appconfig_feature_filter_delete
  name: az appconfig feature filter delete
  summary: |-
    Delete a filter from a feature flag.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appconfig/_help.py
  syntax: >-
    az appconfig feature filter delete [--all]
                                       [--auth-mode {key, login}]
                                       [--connection-string]
                                       [--endpoint]
                                       [--feature]
                                       [--filter-name]
                                       [--index]
                                       [--key]
                                       [--label]
                                       [--name]
                                       [--yes]
  examples:
  - summary: |-
      Delete a filter from a feature using App Configuration name without confirmation.
    syntax: az appconfig feature filter delete -n MyAppConfiguration --feature color --filter-name MyFilter --yes
  - summary: |-
      Delete a filter from a feature when you have multiple filters with that same name.
    syntax: az appconfig feature filter delete --feature color --filter-name MyFilter --index 2 --connection-string Endpoint=https://contoso.azconfig.io;Id=xxx;Secret=xxx
  - summary: |-
      Delete all filters of a feature using App Configuration name without confirmation.
    syntax: az appconfig feature filter delete -n MyAppConfiguration --feature color --label MyLabel --all --yes
  optionalParameters:
  - name: --all
    defaultValue: "False"
    summary: |-
      Delete all filters associated with a feature flag.
  - name: --auth-mode
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      This parameter can be used for indicating how a data operation is to be authorized. If the auth mode is "key", provide connection string or store name and your account access keys will be retrieved for authorization. If the auth mode is "login", provide the store endpoint or store name and your "az login" credentials will be used for authorization. You can configure the default auth mode using `az configure --defaults appconfig_auth_mode=<auth_mode>`. For more information, see https://docs.microsoft.com/azure/azure-app-configuration/concept-enable-rbac.
  - name: --connection-string
    summary: |-
      Combination of access key and endpoint of App Configuration. Can be found using 'az appconfig credential list'. Users can preset it using `az configure --defaults appconfig_connection_string=<connection_string>` or environment variable with the name AZURE_APPCONFIG_CONNECTION_STRING.
  - name: --endpoint
    summary: |-
      If auth mode is "login", provide endpoint URL of the App Configuration. The endpoint can be retrieved using "az appconfig show" command. You can configure the default endpoint using `az configure --defaults appconfig_endpoint=<endpoint>`.
  - name: --feature
    summary: |-
      Name of the feature from which you want to delete the filter. If the feature flag key is different from the default key, provide the `--key` argument instead.
  - name: --filter-name
    summary: |-
      Name of the filter to be deleted.
  - name: --index
    summary: |-
      Zero-based index of the filter to be deleted in case there are multiple instances with same filter name.
  - name: --key
    summary: |-
      Key of the feature flag. Key must start with the ".appconfig.featureflag/" prefix. Key cannot contain the "%" character. If both key and feature arguments are provided, only key will be used. Default key is the reserved prefix ".appconfig.featureflag/" + feature name.
  - name: --label
    summary: |-
      If no label specified, delete from the feature flag with null label by default.
  - name: --name -n
    summary: |-
      Name of the App Configuration. You can configure the default name using `az configure --defaults app_configuration_store=<name>`.
  - name: --yes -y
    defaultValue: "False"
    summary: |-
      Do not prompt for confirmation.
- uid: az_appconfig_feature_filter_list
  name: az appconfig feature filter list
  summary: |-
    List all filters for a feature flag.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appconfig/_help.py
  syntax: >-
    az appconfig feature filter list [--all]
                                     [--auth-mode {key, login}]
                                     [--connection-string]
                                     [--endpoint]
                                     [--feature]
                                     [--key]
                                     [--label]
                                     [--name]
                                     [--top]
  examples:
  - summary: |-
      List all filters for feature flag 'color'.
    syntax: az appconfig feature filter list -n MyAppConfiguration --feature color --all
  - summary: |-
      List 150 filters for feature flag 'color'
    syntax: az appconfig feature filter list --connection-string Endpoint=https://contoso.azconfig.io;Id=xxx;Secret=xxx  --feature color --top 150
  - summary: |-
      List all filters for feature flag 'color' using your 'az login' credentials.
    syntax: az appconfig feature filter list --endpoint https://myappconfiguration.azconfig.io --feature color --all --auth-mode login
  optionalParameters:
  - name: --all
    defaultValue: "False"
    summary: |-
      List all filters associated with a feature flag.
  - name: --auth-mode
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      This parameter can be used for indicating how a data operation is to be authorized. If the auth mode is "key", provide connection string or store name and your account access keys will be retrieved for authorization. If the auth mode is "login", provide the store endpoint or store name and your "az login" credentials will be used for authorization. You can configure the default auth mode using `az configure --defaults appconfig_auth_mode=<auth_mode>`. For more information, see https://docs.microsoft.com/azure/azure-app-configuration/concept-enable-rbac.
  - name: --connection-string
    summary: |-
      Combination of access key and endpoint of App Configuration. Can be found using 'az appconfig credential list'. Users can preset it using `az configure --defaults appconfig_connection_string=<connection_string>` or environment variable with the name AZURE_APPCONFIG_CONNECTION_STRING.
  - name: --endpoint
    summary: |-
      If auth mode is "login", provide endpoint URL of the App Configuration. The endpoint can be retrieved using "az appconfig show" command. You can configure the default endpoint using `az configure --defaults appconfig_endpoint=<endpoint>`.
  - name: --feature
    summary: |-
      Name of the feature whose filters you want to be displayed. If the feature flag key is different from the default key, provide the `--key` argument instead.
  - name: --key
    summary: |-
      Key of the feature flag. Key must start with the ".appconfig.featureflag/" prefix. Key cannot contain the "%" character. If both key and feature arguments are provided, only key will be used. Default key is the reserved prefix ".appconfig.featureflag/" + feature name.
  - name: --label
    summary: |-
      If no label specified, display filters from the feature flag with null label by default.
  - name: --name -n
    summary: |-
      Name of the App Configuration. You can configure the default name using `az configure --defaults app_configuration_store=<name>`.
  - name: --top -t
    summary: |-
      Maximum number of items to return. Must be a positive integer. Default to 100.
- uid: az_appconfig_feature_filter_show
  name: az appconfig feature filter show
  summary: |-
    Show filters of a feature flag.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appconfig/_help.py
  syntax: >-
    az appconfig feature filter show --filter-name
                                     [--auth-mode {key, login}]
                                     [--connection-string]
                                     [--endpoint]
                                     [--feature]
                                     [--index]
                                     [--key]
                                     [--label]
                                     [--name]
  examples:
  - summary: |-
      Show one unique feature filter when you have multiple filters with that same name.
    syntax: az appconfig feature filter show -n MyAppConfiguration --feature color --filter-name MyFilter --index 2
  - summary: |-
      Show all instances of a feature filter when you have multiple filters with that same name.
    syntax: az appconfig feature filter show --connection-string Endpoint=https://contoso.azconfig.io;Id=xxx;Secret=xxx --feature color --filter-name MyFilter
  requiredParameters:
  - isRequired: true
    name: --filter-name
    summary: |-
      Name of the filter to be displayed.
  optionalParameters:
  - name: --auth-mode
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      This parameter can be used for indicating how a data operation is to be authorized. If the auth mode is "key", provide connection string or store name and your account access keys will be retrieved for authorization. If the auth mode is "login", provide the store endpoint or store name and your "az login" credentials will be used for authorization. You can configure the default auth mode using `az configure --defaults appconfig_auth_mode=<auth_mode>`. For more information, see https://docs.microsoft.com/azure/azure-app-configuration/concept-enable-rbac.
  - name: --connection-string
    summary: |-
      Combination of access key and endpoint of App Configuration. Can be found using 'az appconfig credential list'. Users can preset it using `az configure --defaults appconfig_connection_string=<connection_string>` or environment variable with the name AZURE_APPCONFIG_CONNECTION_STRING.
  - name: --endpoint
    summary: |-
      If auth mode is "login", provide endpoint URL of the App Configuration. The endpoint can be retrieved using "az appconfig show" command. You can configure the default endpoint using `az configure --defaults appconfig_endpoint=<endpoint>`.
  - name: --feature
    summary: |-
      Name of the feature which contains the filter. If the feature flag key is different from the default key, provide the `--key` argument instead.
  - name: --index
    summary: |-
      Zero-based index of the filter to be displayed in case there are multiple instances with same filter name.
  - name: --key
    summary: |-
      Key of the feature flag. Key must start with the ".appconfig.featureflag/" prefix. Key cannot contain the "%" character. If both key and feature arguments are provided, only key will be used. Default key is the reserved prefix ".appconfig.featureflag/" + feature name.
  - name: --label
    summary: |-
      If no label specified, show the feature flag with null label by default.
  - name: --name -n
    summary: |-
      Name of the App Configuration. You can configure the default name using `az configure --defaults app_configuration_store=<name>`.
- uid: az_appconfig_feature_filter_update
  name: az appconfig feature filter update
  summary: |-
    Update a filter in a feature flag.
  status: Preview
  isPreview: true
  previewOrExperimentalInfo: 'This command is in preview and under development. Reference and support levels: https://aka.ms/CLI_refstatus'
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appconfig/_help.py
  syntax: >-
    az appconfig feature filter update --filter-name
                                       [--auth-mode {key, login}]
                                       [--connection-string]
                                       [--endpoint]
                                       [--feature]
                                       [--filter-parameters]
                                       [--index]
                                       [--key]
                                       [--label]
                                       [--name]
                                       [--yes]
  examples:
  - summary: |-
      Update the filter for feature 'color' with label MyLabel with name 'MyFilter' and 2 parameters.
    syntax: az appconfig feature filter update -n MyAppConfiguration --feature color --label MyLabel --filter-name MyFilter --filter-parameters Name=\"Value\" Name2=\"Value2\"
  - summary: |-
      Update the filter at index 2 (zero-based index) for feature 'color' with label MyLabel with name 'MyFilter' and 2 parameters.
    syntax: az appconfig feature filter update -n MyAppConfiguration --feature color --label MyLabel --filter-name MyFilter --filter-parameters Name=\"Value\" Name2=\"Value2\" --index 2
  - summary: |-
      Update a filter for feature 'color' with label MyLabel and filter name 'MyFilter' with no parameters
    syntax: az appconfig feature filter update -n MyAppConfiguration --feature color --label MyLabel --filter-name MyFilter
  - summary: |-
      Update the filter for feature 'color' with label MyLabel with name 'MyFilter' and array parameters.
    syntax: az appconfig feature filter update -n MyAppConfiguration --feature color --label MyLabel --filter-name MyFilter --filter-parameters ArrayParam=[1,2,3]
  requiredParameters:
  - isRequired: true
    name: --filter-name
    summary: |-
      Name of the filter to be updated.
  optionalParameters:
  - name: --auth-mode
    parameterValueGroup: "key, login"
    summary: |-
      This parameter can be used for indicating how a data operation is to be authorized. If the auth mode is "key", provide connection string or store name and your account access keys will be retrieved for authorization. If the auth mode is "login", provide the store endpoint or store name and your "az login" credentials will be used for authorization. You can configure the default auth mode using `az configure --defaults appconfig_auth_mode=<auth_mode>`. For more information, see https://docs.microsoft.com/azure/azure-app-configuration/concept-enable-rbac.
  - name: --connection-string
    summary: |-
      Combination of access key and endpoint of App Configuration. Can be found using 'az appconfig credential list'. Users can preset it using `az configure --defaults appconfig_connection_string=<connection_string>` or environment variable with the name AZURE_APPCONFIG_CONNECTION_STRING.
  - name: --endpoint
    summary: |-
      If auth mode is "login", provide endpoint URL of the App Configuration. The endpoint can be retrieved using "az appconfig show" command. You can configure the default endpoint using `az configure --defaults appconfig_endpoint=<endpoint>`.
  - name: --feature
    summary: |-
      Name of the feature whose filter you want to update. If the feature flag key is different from the default key, provide the `--key` argument instead.
  - name: --filter-parameters
    summary: |-
      Space-separated filter parameters in 'name[=value]' format. The value must be an escaped JSON string.
  - name: --index
    summary: |-
      Zero-based index of the filter to be updated in case there are multiple instances with same filter name.
  - name: --key
    summary: |-
      Key of the feature flag. Key must start with the ".appconfig.featureflag/" prefix. Key cannot contain the "%" character. If both key and feature arguments are provided, only key will be used. Default key is the reserved prefix ".appconfig.featureflag/" + feature name.
  - name: --label
    summary: |-
      If no label specified, update the feature flag with null label by default.
  - name: --name -n
    summary: |-
      Name of the App Configuration. You can configure the default name using `az configure --defaults app_configuration_store=<name>`.
  - name: --yes -y
    defaultValue: "False"
    summary: |-
      Do not prompt for confirmation.
commands:
- az_appconfig_feature_filter_add
- az_appconfig_feature_filter_delete
- az_appconfig_feature_filter_list
- az_appconfig_feature_filter_show
- az_appconfig_feature_filter_update
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  ms.date: 08/16/2023
  description: Manage filters associated with feature flags stored in an App Configuration.
