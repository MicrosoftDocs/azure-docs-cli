### YamlMime:AzureCLIGroup
uid: az_iot_du_update
name: az iot du update
extensionInformation: >-
  > [!NOTE]

  > This reference is part of the **azure-iot** extension for the Azure CLI (version 2.37.0 or higher). The extension will automatically install the first time you run an **az iot du update** command. [Learn more](https://learn.microsoft.com/cli/azure/azure-cli-extensions-overview) about extensions.
summary: |-
  Device Update update management.
status: GA
sourceType: Extension
directCommands:
- uid: az_iot_du_update_calculate-hash
  name: az iot du update calculate-hash
  summary: |-
    Calculate the base64 hashed representation of a file.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot du update calculate-hash --file-path
                                    [--hash-algo {sha256}]
  examples:
  - summary: |-
      Calculate the base64 representation of a sha256 digest for a target update file.
    syntax: az iot du update calculate-hash --file-path /path/to/file
  - summary: |-
      Calculate the base64 representation of a sha256 digest for multiple target update files.
    syntax: az iot du update calculate-hash --file-path /path/to/file1 --file-path /path/to/file2 --file-path /path/to/file3
  requiredParameters:
  - isRequired: true
    name: --file-path -f
    summary: |-
      Local path to target file for hash calculation. --file-path can be used 1 or more times.
  optionalParameters:
  - name: --hash-algo
    defaultValue: "sha256"
    parameterValueGroup: "sha256"
    summary: |-
      Cryptographic algorithm to use for hashing.
- uid: az_iot_du_update_delete
  name: az iot du update delete
  summary: |-
    Delete a specific update version.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot du update delete --account
                            --instance
                            --un
                            --up
                            --update-version
                            [--no-wait]
                            [--resource-group]
                            [--yes {false, true}]
  examples:
  - summary: |-
      Delete a target update with respect to update provider, name and version.
    syntax: az iot du update delete -n {account_name} -i {instance_name} --update-provider {provider_name} --update-name {update_name} --update-version {update_version}
  requiredParameters:
  - isRequired: true
    name: --account -n
    summary: |-
      Device Update account name. You can configure the default account name using `az config set defaults.adu_account=<name>`.
  - isRequired: true
    name: --instance -i
    summary: |-
      Device Update instance name. You can configure the default instance name using `az config set defaults.adu_instance=<name>`.
  - isRequired: true
    name: --un --update-name
    summary: |-
      The update name.
  - isRequired: true
    name: --up --update-provider
    summary: |-
      The update provider.
  - isRequired: true
    name: --update-version --uv
    summary: |-
      The update version.
  optionalParameters:
  - name: --no-wait
    defaultValue: "False"
    summary: |-
      Do not wait for the long-running operation to finish.
  - name: --resource-group -g
    summary: |-
      Device Update account resource group name. You can configure the default group using `az config set defaults.adu_group=<name>`.
  - name: --yes -y
    parameterValueGroup: "false, true"
    summary: |-
      Skip user prompts. Indicates acceptance of action. Used primarily for automation scenarios. Default: false.
- uid: az_iot_du_update_import
  name: az iot du update import
  summary: |-
    Import a new update version into the Device Update instance.
  description: |-
    This command supports the `--defer` capability. When used the command will store the
    object payload intended to be sent to Azure in a local cache. The next usage of this command
    without `--defer` will combine the new request payload with the cached objects sending them together.

    Upon success the corresponding local cache entry will be purged. If failure occurs cached
    contents will not be removed. Use `az cache` commands to manage local cache entries independently.

    Defer support is intended primarily for updates with multiple reference steps, such that
    parent and child updates can be submitted together.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot du update import --account
                            --instance
                            --url
                            [--defer]
                            [--file]
                            [--friendly-name]
                            [--hashes]
                            [--no-wait]
                            [--resource-group]
                            [--size]
  examples:
  - summary: |-
      Import an update with two related files and no reference steps, explicitly providing manifest hash value and manifest size in bytes.
    syntax: az iot du update import -n {account_name} -i {instance_name} --hashes sha256={hash_value} --size {size_in_bytes} --url {manifest_location} --file filename={file1_name} url={file1_url} --file filename={file2_name} url={file2_url}
  - summary: |-
      Import an update with two related files and no reference steps, letting the CLI calculate the import manifest hash value and size in bytes.
    syntax: az iot du update import -n {account_name} -i {instance_name} --url {manifest_location} --file filename={file1_name} url={file1_url} --file filename={file2_name} url={file2_url}
  - summary: |-
      Import a parent update with two child update reference steps, where all three import manifests have one related file. Let the CLI calculate hash value and size in bytes for all. This operation will rely on the `--defer` capability.
    syntax: >-
      az iot du update import -n {account_name} -i {instance_name} --url {parent_manifest_location} --file filename={parent_file_name} url={parent_file_url} --defer


      az iot du update import -n {account_name} -i {instance_name} --url {child1_manifest_location} --file filename={child1_file_name} url={child1_file_url} --defer


      az iot du update import -n {account_name} -i {instance_name} --url {child2_manifest_location} --file filename={child2_file_name} url={child2_file_url}
  requiredParameters:
  - isRequired: true
    name: --account -n
    summary: |-
      Device Update account name. You can configure the default account name using `az config set defaults.adu_account=<name>`.
  - isRequired: true
    name: --instance -i
    summary: |-
      Device Update instance name. You can configure the default instance name using `az config set defaults.adu_instance=<name>`.
  - isRequired: true
    name: --url
    summary: |-
      Routable location from which the import manifest can be downloaded by Device Update for IoT Hub. This is typically a read-only SAS-protected blob URL with an expiration set to at least 3 hours.
  optionalParameters:
  - name: --defer
    summary: |-
      Temporarily store the object in the local cache instead of sending to Azure. Use `az cache` commands to view/clear.
  - name: --file
    summary: |-
      Space-separated key=value pairs corresponding to import manifest metadata file properties. Required keys include filename and url. --file can be used 1 or more times.
  - name: --friendly-name
    summary: |-
      Friendly name associated with the update definition.
  - name: --hashes
    summary: |-
      Space-separated key=value pairs where the key is the hash algorithm used and the value is the base64 encoded import manifest file hash. At least a sha256 entry is required. If not provided it will by calculated from the provided url.
  - name: --no-wait
    defaultValue: "False"
    summary: |-
      Do not wait for the long-running operation to finish.
  - name: --resource-group -g
    summary: |-
      Device Update account resource group name. You can configure the default group using `az config set defaults.adu_group=<name>`.
  - name: --size
    summary: |-
      File size in number of bytes. If not provided it will by calculated from the provided url.
- uid: az_iot_du_update_list
  name: az iot du update list
  summary: |-
    List updates that have been imported to the Device Update instance.
  description: |-
    When listing update providers only the --by-provider flag needs to be supplied in addition to the common instance look up arguments. When listing update names the update provider must be supplied. When listing update versions the update provider and update name must be supplied.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot du update list --account
                          --instance
                          [--by-provider {false, true}]
                          [--filter]
                          [--resource-group]
                          [--search]
                          [--un]
                          [--up]
  examples:
  - summary: |-
      List all updates.
    syntax: az iot du update list -n {account_name} -i {instance_name}
  - summary: |-
      List all updates satisfying a free-text search criteria, in this case the update provider of Contoso.
    syntax: az iot du update list -n {account_name} -i {instance_name} --search 'Contoso'
  - summary: |-
      List all updates satisfying an odata filter, in this case filtering for non-deployable updates.
    syntax: az iot du update list -n {account_name} -i {instance_name} --filter 'isDeployable eq false'
  - summary: |-
      List all update providers.
    syntax: az iot du update list -n {account_name} -i {instance_name} --by-provider
  - summary: |-
      List all update names by update provider.
    syntax: az iot du update list -n {account_name} -i {instance_name} --update-provider {provider_name}
  - summary: |-
      List all update versions by update provider and update name.
    syntax: az iot du update list -n {account_name} -i {instance_name} --update-provider {provider_name} --update-name {update_name}
  requiredParameters:
  - isRequired: true
    name: --account -n
    summary: |-
      Device Update account name. You can configure the default account name using `az config set defaults.adu_account=<name>`.
  - isRequired: true
    name: --instance -i
    summary: |-
      Device Update instance name. You can configure the default instance name using `az config set defaults.adu_instance=<name>`.
  optionalParameters:
  - name: --by-provider
    parameterValueGroup: "false, true"
    summary: |-
      Flag indicating the result set should be constrained to update providers.
  - name: --filter
    summary: |-
      Restricts the set of updates returned by property values. Supported when listing updates with no constraints or when listing by version.
  - name: --resource-group -g
    summary: |-
      Device Update account resource group name. You can configure the default group using `az config set defaults.adu_group=<name>`.
  - name: --search
    summary: |-
      Request updates matching a free-text search expression. Supported when listing updates with no constraints.
  - name: --un --update-name
    summary: |-
      The update name.
  - name: --up --update-provider
    summary: |-
      The update provider.
- uid: az_iot_du_update_show
  name: az iot du update show
  summary: |-
    Show a specific update version.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot du update show --account
                          --instance
                          --un
                          --up
                          --update-version
                          [--resource-group]
  examples:
  - summary: |-
      Show a specific update with respect to update provider, name and version.
    syntax: az iot du update show -n {account_name} -i {instance_name} --update-provider {provider_name} --update-name {update_name} --update-version {update_version}
  requiredParameters:
  - isRequired: true
    name: --account -n
    summary: |-
      Device Update account name. You can configure the default account name using `az config set defaults.adu_account=<name>`.
  - isRequired: true
    name: --instance -i
    summary: |-
      Device Update instance name. You can configure the default instance name using `az config set defaults.adu_instance=<name>`.
  - isRequired: true
    name: --un --update-name
    summary: |-
      The update name.
  - isRequired: true
    name: --up --update-provider
    summary: |-
      The update provider.
  - isRequired: true
    name: --update-version --uv
    summary: |-
      The update version.
  optionalParameters:
  - name: --resource-group -g
    summary: |-
      Device Update account resource group name. You can configure the default group using `az config set defaults.adu_group=<name>`.
- uid: az_iot_du_update_stage
  name: az iot du update stage
  summary: |-
    Stage an update for import to a target instance.
  description: |-
    Staging an update refers to accelerating the pre-requisite steps
    of importing an update to a target instance. For a given import manifest, the process
    will determine relevant files, push them to a desired storage container,
    generate SAS URIs and cover other preparation steps for a succesful import.

    This command depends on a convention based organization of update files. All update files
    for a target manifest are expected to be in the same directory the import manifest resides in.

    Key based access is used to upload blob artifacts and to generate 3 hour duration SAS URIs with read access.

    If `--then-import` flag is provided, the command will import the staged update. Otherwise
    the result of this operation is an import command to run to achieve the same result at a later time.

    This command will purge and refresh any local cache entry for the target instance.
  status: Preview
  isPreview: true
  previewOrExperimentalInfo: 'This command is in preview and under development. Reference and support levels: https://aka.ms/CLI_refstatus'
  sourceType: Extension
  syntax: >-
    az iot du update stage --account
                           --instance
                           --manifest-path
                           --storage-account
                           --storage-container
                           [--friendly-name]
                           [--overwrite {false, true}]
                           [--resource-group]
                           [--storage-subscription]
                           [--then-import {false, true}]
  examples:
  - summary: |-
      Stage a stand-alone update. Update files are expected to reside in the same directory as the manifest. The resultant import command can be executed at a later time to initiate the import of the staged update prior to SAS token expiration.
    syntax: az iot du update stage -n {account_name} -i {instance_name} --storage-account {storage_account_name} --storage-container {storage_container_name} --manifest-path /path/to/manifest.json
  - summary: |-
      Stage a stand-alone update. After staging, import the update to the instance using a desired friendly name.
    syntax: az iot du update stage -n {account_name} -i {instance_name} --storage-account {storage_account_name} --storage-container {storage_container_name} --manifest-path /path/to/manifest.json --then-import --friendly-name myAptUpdate
  - summary: |-
      Stage a multi-reference update. Update files will be uploaded to a storage blob container residing in a different subscription to the update account.
    syntax: az iot du update stage -n {account_name} -i {instance_name} --storage-account {storage_account_name} --storage-container {storage_container_name} --storage-subscription {storage_account_subscription} --manifest-path /path/to/parent/parent.manifest.json --manifest-path /path/to/leaf1/leaf1.manifest.json --manifest-path /path/to/leaf2/leaf2.manifest.json
  - summary: |-
      Stage a multi-reference update, overwriting existing blobs if they exist. After staging, import the update to the instance.
    syntax: az iot du update stage -n {account_name} -i {instance_name} --storage-account {storage_account_name} --storage-container {storage_container_name} --manifest-path /path/to/parent/parent.manifest.json --manifest-path /path/to/leaf1/leaf1.manifest.json --manifest-path /path/to/leaf2/leaf2.manifest.json --then-import --overwrite
  requiredParameters:
  - isRequired: true
    name: --account -n
    summary: |-
      Device Update account name. You can configure the default account name using `az config set defaults.adu_account=<name>`.
  - isRequired: true
    name: --instance -i
    summary: |-
      Device Update instance name. You can configure the default instance name using `az config set defaults.adu_instance=<name>`.
  - isRequired: true
    name: --manifest-path
    summary: |-
      Local file path to the import manifest that should be staged. Can be used 1 or more times.
  - isRequired: true
    name: --storage-account
    summary: |-
      Desired storage account name to stage import manifest artifacts.
  - isRequired: true
    name: --storage-container
    summary: |-
      Desired storage container name to stage import manifest artifacts.
  optionalParameters:
  - name: --friendly-name
    summary: |-
      Friendly name associated with the update definition.
  - name: --overwrite
    defaultValue: "False"
    parameterValueGroup: "false, true"
    summary: |-
      Flag indicating whether existing blobs should be overwritten if a conflict exists.
  - name: --resource-group -g
    summary: |-
      Device Update account resource group name. You can configure the default group using `az config set defaults.adu_group=<name>`.
  - name: --storage-subscription
    summary: |-
      Desired storage account subscription to stage import manifest artifacts. Applicable when the storage and device update accounts are in different subscriptions.
  - name: --then-import
    parameterValueGroup: "false, true"
    summary: |-
      Flag indicating whether the update should be imported after staging.
commands:
- az_iot_du_update_calculate-hash
- az_iot_du_update_delete
- az_iot_du_update_file
- az_iot_du_update_file_list
- az_iot_du_update_file_show
- az_iot_du_update_import
- az_iot_du_update_init
- az_iot_du_update_init_v5
- az_iot_du_update_list
- az_iot_du_update_show
- az_iot_du_update_stage
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: Device Update update management.
