### YamlMime:AzureCLIGroup
uid: az_iot_edge_devices
name: az iot edge devices
extensionInformation: >-
  > [!NOTE]

  > This reference is part of the **azure-iot** extension for the Azure CLI (version 2.37.0 or higher). The extension will automatically install the first time you run an **az iot edge devices** command. [Learn more](https://learn.microsoft.com/cli/azure/azure-cli-extensions-overview) about extensions.
summary: |-
  Commands to manage IoT Edge devices.
status: GA
sourceType: Extension
directCommands:
- uid: az_iot_edge_devices_create
  name: az iot edge devices create
  summary: |-
    Create and configure multiple edge devices in an IoT Hub.
  description: |-
    This operation accepts inline device arguments or an edge devices configuration file in YAML or JSON format.
    Inline command args (like '--device-auth') will take precedence and override configuration file properties if they are provided.
    A sample configuration file can be found here: https://aka.ms/aziotcli-edge-devices-config
    Review examples and parameter descriptions for details on how to fully utilize this operation.
  status: Experimental
  isExperimental: true
  previewOrExperimentalInfo: 'This command is experimental and under development. Reference and support levels: https://aka.ms/CLI_refstatus'
  sourceType: Extension
  syntax: >-
    az iot edge devices create [--auth-type {key, login}]
                               [--cfg]
                               [--clean {false, true}]
                               [--dct]
                               [--dea]
                               [--device]
                               [--device-auth {shared_private_key, x509_thumbprint}]
                               [--hub-name]
                               [--login]
                               [--out]
                               [--rc]
                               [--resource-group]
                               [--rk]
                               [--root-pass]
                               [--vis {false, true}]
                               [--yes {false, true}]
  examples:
  - summary: |-
      Create a couple of edge devices using symmetric key auth (default)
    syntax: az iot edge devices create -n {hub_name} --device id=device_1 --device id=device_2
  - summary: |-
      Create a flat list of edge devices using self-signed certificate authentication with various edge property configurations, using inline arguments.
    syntax: >-
      az iot edge devices create -n {hub_name} --device-auth x509_thumbprint --default-edge-agent "mcr.microsoft.com/azureiotedge-agent:1.4"

      --device id=device_1 hostname={FQDN}

      --device id=device_2 edge_agent={agent_image}

      --device id=parent hostname={FQDN} edge_agent={agent_image} container_auth={path_or_json_string}
  - summary: |-
      Delete all existing device-identities on a hub and create new devices based on a configuration file (with progress bars and visualization output).
    syntax: az iot edge devices create -n {hub_name} --cfg path/to/config_yml_or_json -c -v
  - summary: |-
      Create a group of nested edge devices with custom module deployments - containing 2 parent devices with 1 child device each, using inline arguments. Also specifies output path for device certificate bundles.
    syntax: >-
      az iot edge devices create -n {hub_name} --out {device_bundle_path}

      --device id=parent_1 deployment=/path/to/parentDeployment_1.json

      --device id=child_1 parent=parent_1 deployment=/path/to/child_deployment_1.json

      --device id=parent_2 deployment=/path/to/parentDeployment_2.json

      --device id=child_2 parent=parent_2 deployment=/path/to/child_deployment_2.json
  - summary: |-
      Create a simple nested edge device configuration with an existing root CA, using x509 auth, and specify a custom device bundle output path.
    syntax: >-
      az iot edge devices create -n {hub_name} --out {device_bundle_path}

      --root-cert "root_cert.pem" --root-key "root_key.pem" --device-auth x509_thumbprint

      --device id=parent1

      --device id=child1 parent=parent1
  optionalParameters:
  - name: --auth-type
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      Indicates whether the operation should auto-derive a policy key or use the current Azure AD session. If the authentication type is login and the resource hostname is provided, resource lookup will be skipped unless needed.You can configure the default using `az configure --defaults iothub-data-auth-type=<auth-type-value>`.
  - name: --cfg --config --config-file
    summary: |-
      Path to devices configuration file. Sample configuration file: https://aka.ms/aziotcli-edge-devices-config.
  - name: --clean -c
    defaultValue: "False"
    parameterValueGroup: "false, true"
    summary: |-
      Deletes all devices in target hub before creating new devices.
  - name: --dct --device-config-template
    summary: |-
      Path to IoT Edge config.toml file to use as a basis for edge device configs.
  - name: --dea --default-agent --default-edge-agent
    summary: |-
      Default edge agent for created Edge devices if not specified individually.
  - name: --device -d
    summary: |-
      Space-separated key=value pairs corresponding to properties of the edge device to create. The following key values are supported: `id` (device_id), `deployment` (inline json or path to file), `hostname`, `parent` (device_id), `edge_agent` (image URL), and `container_auth` (inline json or path to file). --device can be used 1 or more times. Review help examples for full parameter usage  - these parameters also refer to their corresponding values in our sample configuration file: https://aka.ms/aziotcli-edge-devices-config.
  - name: --device-auth --device-auth-type
    parameterValueGroup: "shared_private_key, x509_thumbprint"
    summary: |-
      Device to hub authorization mechanism.
  - name: --hub-name -n
    summary: |-
      IoT Hub name or hostname. Required if --login is not provided.
  - name: --login -l
    summary: |-
      This command supports an entity connection string with rights to perform action. Use to avoid session login via "az login". If both an entity connection string and name are provided the connection string takes priority. Required if --hub-name is not provided.
  - name: --out --output-path
    summary: |-
      Directory path to output device configuration bundles. If this value is not specified, no file output will be created.
  - name: --rc --root-cert
    summary: |-
      Path to root public key certificate to sign nested edge device certs.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --rk --root-key
    summary: |-
      Path to root private key to sign nested edge device certs.
  - name: --root-pass --rp
    summary: |-
      Root key password.
  - name: --vis --visualize -v
    defaultValue: "False"
    parameterValueGroup: "false, true"
    summary: |-
      Shows visualizations of devices and progress of various tasks (device creation, setting parents, updating configs, etc).
  - name: --yes -y
    defaultValue: "False"
    parameterValueGroup: "false, true"
    summary: |-
      Do not prompt for confirmation when --clean switch is used to delete existing hub devices.
commands:
- az_iot_edge_devices_create
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: Commands to manage IoT Edge devices.
