### YamlMime:AzureCLIGroup
uid: az_acr
name: az acr
importantNote: >-
  > [!NOTE]

  > This command group has commands that are defined in both Azure CLI and at least one extension. Install each extension to benefit from its extended capabilities. [Learn more](https://learn.microsoft.com/cli/azure/azure-cli-extensions-overview) about extensions.
summary: |-
  Manage private registries with Azure Container Registries.
status: GA
sourceType: Core and Extension
directCommands:
- uid: az_acr_build
  name: az acr build
  summary: |-
    Queues a quick build, providing streaming logs for an Azure Container Registry.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/acr/_help.py
  syntax: >-
    az acr build --registry
                 [--agent-pool]
                 [--auth-mode {Default, None}]
                 [--build-arg]
                 [--file]
                 [--image]
                 [--log-template]
                 [--no-format]
                 [--no-logs]
                 [--no-push]
                 [--no-wait]
                 [--platform]
                 [--resource-group]
                 [--secret-build-arg]
                 [--target]
                 [--timeout]
                 [<SOURCE_LOCATION>]
  examples:
  - summary: |-
      Queue a local context as a Linux build, tag it, and push it to the registry.
    syntax: az acr build -t sample/hello-world:{{.Run.ID}} -r MyRegistry .
  - summary: |-
      Queue a local context as a Linux build, tag it, and push it to the registry without streaming logs.
    syntax: az acr build -t sample/hello-world:{{.Run.ID}} -r MyRegistry --no-logs .
  - summary: |-
      Queue a local context as a Linux build without pushing it to the registry.
    syntax: az acr build -t sample/hello-world:{{.Run.ID}} -r MyRegistry --no-push .
  - summary: |-
      Queue a local context as a Linux build without pushing it to the registry.
    syntax: az acr build -r MyRegistry .
  - summary: |-
      Queue a remote GitHub context as a Windows build, tag it, and push it to the registry.
    syntax: az acr build -r MyRegistry https://github.com/Azure/acr-builder.git -f Windows.Dockerfile --platform windows
  - summary: |-
      Queue a remote OCI Artifact context build.
    syntax: az acr build -r MyRegistry oci://myregistry.azurecr.io/myartifact:mytag
  - summary: |-
      Queue a local context as a Linux build on arm/v7 architecture, tag it, and push it to the registry.
    syntax: az acr build -t sample/hello-world:{{.Run.ID}} -r MyRegistry . --platform linux/arm/v7
  requiredParameters:
  - isRequired: true
    name: --registry -r
    summary: |-
      The name of the container registry. It should be specified in lower case. You can configure the default registry name using `az configure --defaults acr=<registry name>`.
  optionalParameters:
  - name: --agent-pool
    summary: |-
      The name of the agent pool.
    isPreview: true
  - name: --auth-mode
    parameterValueGroup: "Default, None"
    summary: |-
      Auth mode of the source registry.
  - name: --build-arg
    summary: |-
      Build argument in '--build-arg name[=value]' format. Multiples supported by passing --build-arg multiple times.
  - name: --file -f
    summary: |-
      The relative path of the the docker file to the source code root folder. Default to 'Dockerfile'.
  - name: --image -t
    summary: |-
      The name and tag of the image using the format: '-t repo/image:tag'. Multiple tags are supported by passing -t multiple times.
  - name: --log-template
    summary: |-
      The repository and tag template for run log artifact using the format: 'log/repo:tag' (e.g., 'acr/logs:{{.Run.ID}}'). Only applicable to CMK enabled registry.
    isPreview: true
  - name: --no-format
    defaultValue: "False"
    summary: |-
      Indicates whether the logs should be displayed in raw format.
  - name: --no-logs
    defaultValue: "False"
    summary: |-
      Do not show logs after successfully queuing the build.
  - name: --no-push
    defaultValue: "False"
    summary: |-
      Indicates whether the image built should be pushed to the registry.
  - name: --no-wait
    defaultValue: "False"
    summary: |-
      Do not wait for the build to complete and return immediately after queuing the build.
  - name: --platform
    summary: |-
      The platform where build/task is run, Eg, 'windows' and 'linux'. When it's used in build commands, it also can be specified in 'os/arch/variant' format for the resulting image. Eg, linux/arm/v7. The 'arch' and 'variant' parts are optional.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --secret-build-arg
    summary: |-
      Secret build argument in '--secret-build-arg name[=value]' format. Multiples supported by passing '--secret-build-arg name[=value]' multiple times.
  - name: --target
    summary: |-
      The name of the target build stage.
  - name: --timeout
    summary: |-
      The timeout in seconds.
  - name: <SOURCE_LOCATION>
    summary: |-
      The local source code directory path (e.g., './src'), or the URL to a git repository (e.g., 'https://github.com/Azure-Samples/acr-build-helloworld-node.git') or a remote tarball (e.g., 'http://server/context.tar.gz'), or the repository of an OCI artifact in an Azure container registry (e.g., 'oci://myregistry.azurecr.io/myartifact:mytag').
- uid: az_acr_check-health
  name: az acr check-health
  summary: |-
    Gets health information on the environment and optionally a target registry.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/acr/_help.py
  syntax: >-
    az acr check-health [--ignore-errors]
                        [--name]
                        [--vnet]
                        [--yes]
  examples:
  - summary: |-
      Gets health state with target registry 'MyRegistry', skipping confirmation for pulling image.
    syntax: az acr check-health -n MyRegistry -y
  - summary: |-
      Gets health state of the environment, without stopping on first error.
    syntax: az acr check-health --ignore-errors
  optionalParameters:
  - name: --ignore-errors
    defaultValue: "False"
    summary: |-
      Provide all health checks, even if errors are found.
  - name: --name -n
    summary: |-
      The name of the container registry. It should be specified in lower case. You can configure the default registry name using `az configure --defaults acr=<registry name>`.
  - name: --vnet
    summary: |-
      Virtual network ID so to run this command inside a VNET to verify the DNS routing to private endpoints.
  - name: --yes -y
    defaultValue: "False"
    summary: |-
      Do not prompt for confirmation.
- uid: az_acr_check-name
  name: az acr check-name
  summary: |-
    Checks if an Azure Container Registry name is valid and available for use.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/acr/_help.py
  syntax: az acr check-name --name
  examples:
  - summary: |-
      Check if a registry name already exists.
    syntax: az acr check-name -n doesthisnameexist
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      The name of the container registry. It should be specified in lower case. You can configure the default registry name using `az configure --defaults acr=<registry name>`.
- uid: az_acr_create
  name: az acr create
  summary: |-
    Create an Azure Container Registry.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/acr/_help.py
  syntax: >-
    az acr create --name
                  --resource-group
                  --sku {Basic, Premium, Standard}
                  [--admin-enabled {false, true}]
                  [--allow-exports {false, true}]
                  [--allow-trusted-services {false, true}]
                  [--default-action {Allow, Deny}]
                  [--identity]
                  [--key-encryption-key]
                  [--location]
                  [--public-network-enabled {false, true}]
                  [--tags]
                  [--workspace]
                  [--zone-redundancy {Disabled, Enabled}]
  examples:
  - summary: |-
      Create a managed container registry with the Standard SKU.
    syntax: az acr create -n MyRegistry -g MyResourceGroup --sku Standard
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      The name of the container registry. It should be specified in lower case. You can configure the default registry name using `az configure --defaults acr=<registry name>`.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - isRequired: true
    name: --sku
    parameterValueGroup: "Basic, Premium, Standard"
    summary: |-
      The SKU of the container registry.
  optionalParameters:
  - name: --admin-enabled
    defaultValue: "False"
    parameterValueGroup: "false, true"
    summary: |-
      Indicates whether the admin user is enabled.
  - name: --allow-exports
    parameterValueGroup: "false, true"
    summary: |-
      Configure exportPolicy to allow/disallow artifacts from being exported from this registry. Artifacts can be exported via import or transfer operations. For more information, please visit https://aka.ms/acr/export-policy.
    isPreview: true
  - name: --allow-trusted-services
    parameterValueGroup: "false, true"
    summary: |-
      Allow trusted Azure Services to access network restricted registries. For more information, please visit https://aka.ms/acr/trusted-services. The Default is to allow.
    isPreview: true
  - name: --default-action
    parameterValueGroup: "Allow, Deny"
    summary: |-
      Default action to apply when no rule matches. Only applicable to Premium SKU.
  - name: --identity
    summary: |-
      Use assigned managed identity resource id or name if in the same resource group.
  - name: --key-encryption-key
    summary: |-
      Key vault key uri. To enable automated rotation, provide a version-less key uri. For manual rotation, provide a versioned key uri.
  - name: --location -l
    summary: |-
      Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
  - name: --public-network-enabled
    parameterValueGroup: "false, true"
    summary: |-
      Allow public network access for the container registry. The Default is to allow.
  - name: --tags
    summary: |-
      Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags.
  - name: --workspace
    summary: |-
      Name or ID of the Log Analytics workspace to send registry diagnostic logs to. All events will be enabled. You can use "az monitor log-analytics workspace create" to create one. Extra billing may apply.
    isPreview: true
  - name: --zone-redundancy
    parameterValueGroup: "Disabled, Enabled"
    summary: |-
      Indicates whether or not zone redundancy should be enabled for this registry or replication. For more information, such as supported locations, please visit https://aka.ms/acr/az. Zone-redundancy cannot be updated. Defaults to 'Disabled'.
    isPreview: true
- uid: az_acr_delete
  name: az acr delete
  summary: |-
    Deletes an Azure Container Registry.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/acr/_help.py
  syntax: >-
    az acr delete --name
                  [--resource-group]
                  [--yes]
  examples:
  - summary: |-
      Delete an Azure Container Registry.
    syntax: az acr delete -n MyRegistry
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      The name of the container registry. It should be specified in lower case. You can configure the default registry name using `az configure --defaults acr=<registry name>`.
  optionalParameters:
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --yes -y
    defaultValue: "False"
    summary: |-
      Do not prompt for confirmation.
- uid: az_acr_import
  name: az acr import
  summary: |-
    Imports an image to an Azure Container Registry from another Container Registry. Import removes the need to docker pull, docker tag, docker push. For larger images consider using `--no-wait`.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/acr/_help.py
  syntax: >-
    az acr import --name
                  --source
                  [--force]
                  [--image]
                  [--no-wait]
                  [--password]
                  [--registry]
                  [--repository]
                  [--resource-group]
                  [--username]
  examples:
  - summary: |-
      Import an image from 'sourceregistry' to 'MyRegistry'. The image inherits its source repository and tag names.
    syntax: az acr import -n MyRegistry --source sourceregistry.azurecr.io/sourcerepository:sourcetag
  - summary: |-
      Import an image from a public repository on Docker Hub. The image uses the specified repository and tag names.
    syntax: az acr import -n MyRegistry --source docker.io/library/hello-world:latest -t targetrepository:targettag
  - summary: |-
      Import an image from a private repository using its username and password. This also applies to registries outside Azure.
    syntax: az acr import -n MyRegistry --source myprivateregistry.azurecr.io/hello-world:latest -u username -p password
  - summary: |-
      Import an image from an Azure container registry in a different subscription.
    syntax: >-
      az acr import -n MyRegistry --source sourcerepository:sourcetag -t targetrepository:targettag \
          -r /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/sourceResourceGroup/providers/Microsoft.ContainerRegistry/registries/sourceRegistry
  - summary: |-
      Import an image without waiting for successful completion. Failures during import will not be reflected. Run `az acr repository show-tags` to confirm that import succeeded.
    syntax: az acr import -n MyRegistry --source sourceregistry.azurecr.io/sourcerepository:sourcetag --no-wait
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      The name of the container registry. It should be specified in lower case. You can configure the default registry name using `az configure --defaults acr=<registry name>`.
  - isRequired: true
    name: --source
    summary: |-
      Source image name or fully qualified source containing the registry login server. If `--registry` is used, `--source` will always be interpreted as a source image, even if it contains the login server.
  optionalParameters:
  - name: --force
    defaultValue: "False"
    summary: |-
      Overwrite the existing tag of the image to be imported.
  - name: --image -t
    summary: |-
      The name and tag of the image using the format: '-t repo/image:tag'. Multiple tags are supported by passing -t multiple times.
  - name: --no-wait
    defaultValue: "False"
    summary: |-
      Do not wait for the import to complete and return immediately after queuing the import.
  - name: --password -p
    summary: |-
      The password of source container registry.
  - name: --registry -r
    summary: |-
      The source Azure container registry. This can be name, login server or resource ID of the source registry.
  - name: --repository
    summary: |-
      The repository name for a manifest-only copy of images. Multiple copies supported by passing --repository multiple times.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --username -u
    summary: |-
      The username of source container registry.
- uid: az_acr_list
  name: az acr list
  summary: |-
    Lists all the container registries under the current subscription.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/acr/_help.py
  syntax: az acr list [--resource-group]
  examples:
  - summary: |-
      List container registries and show the results in a table, across multiple resource groups.
    syntax: az acr list -o table
  - summary: |-
      List container registries in a resource group and show the results in a table.
    syntax: az acr list -g MyResourceGroup -o table
  optionalParameters:
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_acr_login
  name: az acr login
  summary: |-
    Log in to an Azure Container Registry through the Docker CLI.
  description: |-
    Docker must be installed on your machine. Once done, use 'docker logout <registry url>' to log out. (If you only need an access token and do not want to install Docker, specify '--expose-token').
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/acr/_help.py
  syntax: >-
    az acr login --name
                 [--expose-token]
                 [--password]
                 [--suffix]
                 [--username]
  examples:
  - summary: |-
      Log in to an Azure Container Registry
    syntax: az acr login -n MyRegistry
  - summary: |-
      Get an Azure Container Registry access token
    syntax: az acr login -n MyRegistry --expose-token
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      The name of the container registry. It should be specified in lower case. You can configure the default registry name using `az configure --defaults acr=<registry name>`.
  optionalParameters:
  - name: --expose-token -t
    defaultValue: "False"
    summary: |-
      Expose access token instead of automatically logging in through Docker CLI.
  - name: --password -p
    summary: |-
      The password used to log into a container registry.
  - name: --suffix
    summary: |-
      The tenant suffix in registry login server. You may specify '--suffix tenant' if your registry login server is in the format 'registry-tenant.azurecr.io'. Applicable if you're accessing the registry from a different subscription or you have permission to access images but not the permission to manage the registry resource.
  - name: --username -u
    summary: |-
      The username used to log into a container registry.
- uid: az_acr_query
  name: az acr query
  summary: |-
    Query the content in an ACR using Kusto Query Language.
  description: |-
    Query for artifacts and images in an Azure Container Registry using the Kusto Query Language. OCI manifest properties such as digest, subject, annotations, etc. can be used to query, filter, and order search results.
  status: GA
  sourceType: Extension
  syntax: >-
    az acr query --kql-query
                 --name
                 [--password]
                 [--repository]
                 [--skip-token]
                 [--username]
  examples:
  - summary: |-
      Fetch a single manifest
    syntax: az acr query -n $MyRegistry -q "Manifests | limit 1"
  - summary: |-
      Count all manifests in repository $RepositoryName
    syntax: az acr query -n $MyRegistry -q "Manifests" -o table
  - summary: |-
      List all manifests in repository $RepositoryName in order of creation date
    syntax: az acr query -n $MyRegistry --repository $RepositoryName -q "Manifests | order by createdAt desc"
  - summary: |-
      Query for all digests signed by $Signature in the repository $RepositoryName
    syntax: az acr query -n $MyRegistry --repository $RepositoryName -q "Manifests | where annotations['org.cncf.notary.signature.subject'] == $Signature | project createdAt, digest, subject"
  - summary: |-
      Query for the digests in a registry using a skip token and sort by digest (for results with pagination)
    syntax: az acr query -n $MyRegistry -q "Manifests | project digest | order by digest asc" --skip-token eyAibm8iOiAibHVjayIsICJidXQiOiAibmljZSIsICJ0cnkiOiAiISIgfQ==
  requiredParameters:
  - isRequired: true
    name: --kql-query -q
    summary: |-
      The KQL query to execute.
  - isRequired: true
    name: --name -n
    summary: |-
      The name of the container registry that the query is run against.
  optionalParameters:
  - name: --password -p
    summary: |-
      Registry password.
  - name: --repository
    summary: |-
      The repository that the query is run against. If no repository is provided, the query is run at the registry level.
  - name: --skip-token
    summary: |-
      Skip token to get the next page of the query if applicable.
  - name: --username -u
    summary: |-
      Registry username.
- uid: az_acr_run
  name: az acr run
  summary: |-
    Queues a quick run providing streamed logs for an Azure Container Registry.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/acr/_help.py
  syntax: >-
    az acr run --registry
               [--agent-pool]
               [--auth-mode {Default, None}]
               [--cmd]
               [--file]
               [--log-template]
               [--no-format]
               [--no-logs]
               [--no-wait]
               [--platform]
               [--resource-group]
               [--set]
               [--set-secret]
               [--timeout]
               [--values]
               [<SOURCE_LOCATION>]
  examples:
  - summary: |-
      Queue a run to execute a container command.
    syntax: az acr run -r MyRegistry --cmd '$Registry/myimage' /dev/null
  - summary: |-
      Queue a run with the task definition from the standard input. Either 'Ctrl + Z'(Windows) or 'Ctrl + D'(Linux) terminates the input stream.
    syntax: az acr run -r MyRegistry -f - /dev/null
  - summary: |-
      Queue a run to execute the tasks passed through the pipe.
    syntax: cat task.yaml | az acr run -r MyRegistry -f - /dev/null
  - summary: |-
      Queue a local context, pushed to ACR with streaming logs.
    syntax: az acr run -r MyRegistry -f bash-echo.yaml ./workspace
  - summary: |-
      Queue a remote git context with streaming logs.
    syntax: az acr run -r MyRegistry https://github.com/Azure-Samples/acr-tasks.git -f hello-world.yaml
  - summary: |-
      Queue a remote git context with streaming logs and runs the task on Linux platform.
    syntax: az acr run -r MyRegistry https://github.com/Azure-Samples/acr-tasks.git -f build-hello-world.yaml --platform linux
  - summary: |-
      Queue a remote OCI Artifact context and runs the task.
    syntax: az acr run -r MyRegistry oci://myregistry.azurecr.io/myartifact:mytag -f hello-world.yaml
  requiredParameters:
  - isRequired: true
    name: --registry -r
    summary: |-
      The name of the container registry. It should be specified in lower case. You can configure the default registry name using `az configure --defaults acr=<registry name>`.
  optionalParameters:
  - name: --agent-pool
    summary: |-
      The name of the agent pool.
    isPreview: true
  - name: --auth-mode
    parameterValueGroup: "Default, None"
    summary: |-
      Auth mode of the source registry.
  - name: --cmd
    summary: |-
      Commands to execute. This also supports additional docker run parameters (https://docs.docker.com/engine/reference/commandline/run/) or even other docker commands (https://docs.docker.com/engine/reference/commandline/docker/).
  - name: --file -f
    summary: |-
      The task template/definition file path relative to the source context. It can be '-' to pipe a file from the standard input.
  - name: --log-template
    summary: |-
      The repository and tag template for run log artifact using the format: 'log/repo:tag' (e.g., 'acr/logs:{{.Run.ID}}'). Only applicable to CMK enabled registry.
    isPreview: true
  - name: --no-format
    defaultValue: "False"
    summary: |-
      Indicates whether the logs should be displayed in raw format.
  - name: --no-logs
    defaultValue: "False"
    summary: |-
      Do not show logs after successfully queuing the build.
  - name: --no-wait
    defaultValue: "False"
    summary: |-
      Do not wait for the run to complete and return immediately after queuing the run.
  - name: --platform
    summary: |-
      The platform where build/task is run, Eg, 'windows' and 'linux'. When it's used in build commands, it also can be specified in 'os/arch/variant' format for the resulting image. Eg, linux/arm/v7. The 'arch' and 'variant' parts are optional.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --set
    summary: |-
      Value in 'name[=value]' format. Multiples supported by passing --set multiple times.
  - name: --set-secret
    summary: |-
      Secret value in '--set name[=value]' format. Multiples supported by passing --set multiple times.
  - name: --timeout
    summary: |-
      The timeout in seconds.
  - name: --values
    summary: |-
      The task values file path relative to the source context.
  - name: <SOURCE_LOCATION>
    summary: |-
      The local source code directory path (e.g., './src'), or the URL to a git repository (e.g., 'https://github.com/Azure-Samples/acr-build-helloworld-node.git'), or a remote tarball (e.g., 'http://server/context.tar.gz'), or the repository of an OCI artifact in an Azure container registry (e.g., 'oci://myregistry.azurecr.io/myartifact:mytag'). If '/dev/null' is specified, the value will be set to None and ignored.
- uid: az_acr_show
  name: az acr show
  summary: |-
    Get the details of an Azure Container Registry.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/acr/_help.py
  syntax: >-
    az acr show --name
                [--resource-group]
  examples:
  - summary: |-
      Get the login server for an Azure Container Registry.
    syntax: az acr show -n MyRegistry --query loginServer
  - summary: |-
      Get the details of an Azure Container Registry
    syntax: az acr show --name MyRegistry --resource-group MyResourceGroup
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      The name of the container registry. It should be specified in lower case. You can configure the default registry name using `az configure --defaults acr=<registry name>`.
  optionalParameters:
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_acr_show-endpoints
  name: az acr show-endpoints
  summary: |-
    Display registry endpoints.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/acr/_help.py
  syntax: >-
    az acr show-endpoints --name
                          [--resource-group]
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      The name of the container registry. It should be specified in lower case. You can configure the default registry name using `az configure --defaults acr=<registry name>`.
  optionalParameters:
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_acr_show-usage
  name: az acr show-usage
  summary: |-
    Get the storage usage for an Azure Container Registry.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/acr/_help.py
  syntax: >-
    az acr show-usage --name
                      [--resource-group]
  examples:
  - summary: |-
      Get the storage usage for an Azure Container Registry.
    syntax: az acr show-usage -n MyRegistry
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      The name of the container registry. It should be specified in lower case. You can configure the default registry name using `az configure --defaults acr=<registry name>`.
  optionalParameters:
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_acr_update
  name: az acr update
  summary: |-
    Update an Azure Container Registry.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/acr/_help.py
  syntax: >-
    az acr update --name
                  [--add]
                  [--admin-enabled {false, true}]
                  [--allow-exports {false, true}]
                  [--allow-trusted-services {false, true}]
                  [--anonymous-pull-enabled {false, true}]
                  [--data-endpoint-enabled {false, true}]
                  [--default-action {Allow, Deny}]
                  [--force-string]
                  [--public-network-enabled {false, true}]
                  [--remove]
                  [--resource-group]
                  [--set]
                  [--sku {Basic, Premium, Standard}]
                  [--tags]
  examples:
  - summary: |-
      Update tags for an Azure Container Registry.
    syntax: az acr update -n MyRegistry --tags key1=value1 key2=value2
  - summary: |-
      Enable the administrator user account for an Azure Container Registry.
    syntax: az acr update -n MyRegistry --admin-enabled true
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      The name of the container registry. It should be specified in lower case. You can configure the default registry name using `az configure --defaults acr=<registry name>`.
  optionalParameters:
  - name: --add
    defaultValue: "[]"
    summary: |-
      Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>.
  - name: --admin-enabled
    parameterValueGroup: "false, true"
    summary: |-
      Indicates whether the admin user is enabled.
  - name: --allow-exports
    parameterValueGroup: "false, true"
    summary: |-
      Configure exportPolicy to allow/disallow artifacts from being exported from this registry. Artifacts can be exported via import or transfer operations. For more information, please visit https://aka.ms/acr/export-policy.
    isPreview: true
  - name: --allow-trusted-services
    parameterValueGroup: "false, true"
    summary: |-
      Allow trusted Azure Services to access network restricted registries. For more information, please visit https://aka.ms/acr/trusted-services.
    isPreview: true
  - name: --anonymous-pull-enabled
    parameterValueGroup: "false, true"
    summary: |-
      Enable registry-wide pull from unauthenticated clients.
  - name: --data-endpoint-enabled
    parameterValueGroup: "false, true"
    summary: |-
      Enable dedicated data endpoint for client firewall configuration.
  - name: --default-action
    parameterValueGroup: "Allow, Deny"
    summary: |-
      Default action to apply when no rule matches. Only applicable to Premium SKU.
  - name: --force-string
    defaultValue: "False"
    summary: |-
      When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.
  - name: --public-network-enabled
    parameterValueGroup: "false, true"
    summary: |-
      Allow public network access for the container registry.
  - name: --remove
    defaultValue: "[]"
    summary: |-
      Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --set
    defaultValue: "[]"
    summary: |-
      Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>.
  - name: --sku
    parameterValueGroup: "Basic, Premium, Standard"
    summary: |-
      The SKU of the container registry.
  - name: --tags
    summary: |-
      Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags.
commands:
- az_acr_agentpool
- az_acr_agentpool_create
- az_acr_agentpool_delete
- az_acr_agentpool_list
- az_acr_agentpool_show
- az_acr_agentpool_update
- az_acr_artifact-streaming
- az_acr_artifact-streaming_create
- az_acr_artifact-streaming_operation
- az_acr_artifact-streaming_operation_cancel
- az_acr_artifact-streaming_operation_show
- az_acr_artifact-streaming_show
- az_acr_artifact-streaming_update
- az_acr_build
- az_acr_cache
- az_acr_cache_create
- az_acr_cache_delete
- az_acr_cache_list
- az_acr_cache_show
- az_acr_cache_update
- az_acr_check-health
- az_acr_check-name
- az_acr_config
- az_acr_config_authentication-as-arm
- az_acr_config_authentication-as-arm_show
- az_acr_config_authentication-as-arm_update
- az_acr_config_content-trust
- az_acr_config_content-trust_show
- az_acr_config_content-trust_update
- az_acr_config_retention
- az_acr_config_retention_show
- az_acr_config_retention_update
- az_acr_config_soft-delete
- az_acr_config_soft-delete_show
- az_acr_config_soft-delete_update
- az_acr_connected-registry
- az_acr_connected-registry_create
- az_acr_connected-registry_deactivate
- az_acr_connected-registry_delete
- az_acr_connected-registry_get-settings
- az_acr_connected-registry_install
- az_acr_connected-registry_install_info
- az_acr_connected-registry_install_renew-credentials
- az_acr_connected-registry_list
- az_acr_connected-registry_list-client-tokens
- az_acr_connected-registry_permissions
- az_acr_connected-registry_permissions_show
- az_acr_connected-registry_permissions_update
- az_acr_connected-registry_repo
- az_acr_connected-registry_show
- az_acr_connected-registry_update
- az_acr_create
- az_acr_credential
- az_acr_credential-set
- az_acr_credential-set_create
- az_acr_credential-set_delete
- az_acr_credential-set_list
- az_acr_credential-set_show
- az_acr_credential-set_update
- az_acr_credential_renew
- az_acr_credential_show
- az_acr_delete
- az_acr_encryption
- az_acr_encryption_rotate-key
- az_acr_encryption_show
- az_acr_export-pipeline
- az_acr_export-pipeline_create
- az_acr_export-pipeline_delete
- az_acr_export-pipeline_list
- az_acr_export-pipeline_show
- az_acr_helm
- az_acr_helm_delete
- az_acr_helm_install-cli
- az_acr_helm_list
- az_acr_helm_push
- az_acr_helm_repo
- az_acr_helm_repo_add
- az_acr_helm_show
- az_acr_identity
- az_acr_identity_assign
- az_acr_identity_remove
- az_acr_identity_show
- az_acr_import
- az_acr_import-pipeline
- az_acr_import-pipeline_create
- az_acr_import-pipeline_delete
- az_acr_import-pipeline_list
- az_acr_import-pipeline_show
- az_acr_list
- az_acr_login
- az_acr_manifest
- az_acr_manifest_delete
- az_acr_manifest_list
- az_acr_manifest_list-deleted
- az_acr_manifest_list-deleted-tags
- az_acr_manifest_list-metadata
- az_acr_manifest_list-referrers
- az_acr_manifest_metadata
- az_acr_manifest_metadata_list
- az_acr_manifest_metadata_show
- az_acr_manifest_metadata_update
- az_acr_manifest_restore
- az_acr_manifest_show
- az_acr_manifest_show-metadata
- az_acr_manifest_update-metadata
- az_acr_network-rule
- az_acr_network-rule_add
- az_acr_network-rule_list
- az_acr_network-rule_remove
- az_acr_pack
- az_acr_pack_build
- az_acr_pipeline-run
- az_acr_pipeline-run_clean
- az_acr_pipeline-run_create
- az_acr_pipeline-run_delete
- az_acr_pipeline-run_list
- az_acr_pipeline-run_show
- az_acr_private-endpoint-connection
- az_acr_private-endpoint-connection_approve
- az_acr_private-endpoint-connection_delete
- az_acr_private-endpoint-connection_list
- az_acr_private-endpoint-connection_reject
- az_acr_private-endpoint-connection_show
- az_acr_private-link-resource
- az_acr_private-link-resource_list
- az_acr_query
- az_acr_replication
- az_acr_replication_create
- az_acr_replication_delete
- az_acr_replication_list
- az_acr_replication_show
- az_acr_replication_update
- az_acr_repository
- az_acr_repository_delete
- az_acr_repository_list
- az_acr_repository_list-deleted
- az_acr_repository_show
- az_acr_repository_show-manifests
- az_acr_repository_show-tags
- az_acr_repository_untag
- az_acr_repository_update
- az_acr_run
- az_acr_scope-map
- az_acr_scope-map_create
- az_acr_scope-map_delete
- az_acr_scope-map_list
- az_acr_scope-map_show
- az_acr_scope-map_update
- az_acr_show
- az_acr_show-endpoints
- az_acr_show-usage
- az_acr_task
- az_acr_task_cancel-run
- az_acr_task_create
- az_acr_task_credential
- az_acr_task_credential_add
- az_acr_task_credential_list
- az_acr_task_credential_remove
- az_acr_task_credential_update
- az_acr_task_delete
- az_acr_task_identity
- az_acr_task_identity_assign
- az_acr_task_identity_remove
- az_acr_task_identity_show
- az_acr_task_list
- az_acr_task_list-runs
- az_acr_task_logs
- az_acr_task_run
- az_acr_task_show
- az_acr_task_show-run
- az_acr_task_timer
- az_acr_task_timer_add
- az_acr_task_timer_list
- az_acr_task_timer_remove
- az_acr_task_timer_update
- az_acr_task_update
- az_acr_task_update-run
- az_acr_taskrun
- az_acr_taskrun_delete
- az_acr_taskrun_list
- az_acr_taskrun_logs
- az_acr_taskrun_show
- az_acr_token
- az_acr_token_create
- az_acr_token_credential
- az_acr_token_credential_delete
- az_acr_token_credential_generate
- az_acr_token_delete
- az_acr_token_list
- az_acr_token_show
- az_acr_token_update
- az_acr_update
- az_acr_webhook
- az_acr_webhook_create
- az_acr_webhook_delete
- az_acr_webhook_get-config
- az_acr_webhook_list
- az_acr_webhook_list-events
- az_acr_webhook_ping
- az_acr_webhook_show
- az_acr_webhook_update
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: Manage private registries with Azure Container Registries.
