### YamlMime:AzureCLIGroup
uid: az_synapse_sql-script
name: az synapse sql-script
summary: |-
  Manage SQL scripts in a synapse workspace.
status: GA
sourceType: Core
directCommands:
- uid: az_synapse_sql-script_create
  name: az synapse sql-script create
  summary: |-
    Create or update a SQL script.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/synapse/_help.py
  syntax: >-
    az synapse sql-script create --file
                                 --name
                                 --workspace-name
                                 [--additional-properties]
                                 [--description]
                                 [--folder-name]
                                 [--no-wait]
                                 [--result-limit {-1, 5000}]
                                 [--sql-database-name]
                                 [--sql-pool-name]
  examples:
  - summary: |-
      Create a SQL script.
    syntax: >-
      az synapse sql-script create --workspace-name testsynapseworkspace \
        --name testsqlscriptname \
        --file 'path/test.sql'
  requiredParameters:
  - isRequired: true
    name: --file -f
    summary: |-
      The SQL query file path.
  - isRequired: true
    name: --name -n
    summary: |-
      The SQL script name.
  - isRequired: true
    name: --workspace-name
    summary: |-
      The workspace name.
  optionalParameters:
  - name: --additional-properties
    summary: |-
      The SQL script additional properties.
  - name: --description
    summary: |-
      The SQL script description.
  - name: --folder-name
    summary: |-
      The folder that this SQL script is in. If not specified, this SQL script will appear at the root level. Eg: folder/subfolder1.
  - name: --no-wait
    defaultValue: "False"
    summary: |-
      Do not wait for the long-running operation to finish.
  - name: --result-limit
    defaultValue: "5000"
    parameterValueGroup: "-1, 5000"
    summary: |-
      The SQL query results limit. Default is 5000. '-1' is no limit.
  - name: --sql-database-name
    summary: |-
      The SQL database name.
  - name: --sql-pool-name
    summary: |-
      The SQL pool name.
- uid: az_synapse_sql-script_delete
  name: az synapse sql-script delete
  summary: |-
    Delete a SQL script.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/synapse/_help.py
  syntax: >-
    az synapse sql-script delete --name
                                 --workspace-name
                                 [--no-wait]
  examples:
  - summary: |-
      Delete a SQL script.
    syntax: >-
      az synapse sql-script delete --workspace-name testsynapseworkspace \
        --name testsqlscriptname
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      The SQL script name.
  - isRequired: true
    name: --workspace-name
    summary: |-
      The workspace name.
  optionalParameters:
  - name: --no-wait
    defaultValue: "False"
    summary: |-
      Do not wait for the long-running operation to finish.
- uid: az_synapse_sql-script_export
  name: az synapse sql-script export
  summary: |-
    Export a SQL script.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/synapse/_help.py
  syntax: >-
    az synapse sql-script export --output-folder
                                 --workspace-name
                                 [--name]
  examples:
  - summary: |-
      Export a SQL script.
    syntax: >-
      az synapse sql-script export --workspace-name testsynapseworkspace \
        --name testsqlscriptname \
        --output-folder 'path/folder'
  requiredParameters:
  - isRequired: true
    name: --output-folder
    summary: |-
      The SQL script export path.
  - isRequired: true
    name: --workspace-name
    summary: |-
      The workspace name.
  optionalParameters:
  - name: --name -n
    summary: |-
      The SQL script name.
- uid: az_synapse_sql-script_import
  name: az synapse sql-script import
  summary: |-
    Import a SQL script.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/synapse/_help.py
  syntax: >-
    az synapse sql-script import --file
                                 --name
                                 --workspace-name
                                 [--additional-properties]
                                 [--description]
                                 [--folder-name]
                                 [--no-wait]
                                 [--result-limit {-1, 5000}]
                                 [--sql-database-name]
                                 [--sql-pool-name]
  examples:
  - summary: |-
      Import a SQL script.
    syntax: >-
      az synapse sql-script import --workspace-name testsynapseworkspace \
        --name testsqlscriptname \
        --file 'path/test.sql'
  requiredParameters:
  - isRequired: true
    name: --file -f
    summary: |-
      The SQL query file path.
  - isRequired: true
    name: --name -n
    summary: |-
      The SQL script name.
  - isRequired: true
    name: --workspace-name
    summary: |-
      The workspace name.
  optionalParameters:
  - name: --additional-properties
    summary: |-
      The SQL script additional properties.
  - name: --description
    summary: |-
      The SQL script description.
  - name: --folder-name
    summary: |-
      The folder that this SQL script is in. If not specified, this SQL script will appear at the root level. Eg: folder/subfolder1.
  - name: --no-wait
    defaultValue: "False"
    summary: |-
      Do not wait for the long-running operation to finish.
  - name: --result-limit
    defaultValue: "5000"
    parameterValueGroup: "-1, 5000"
    summary: |-
      The SQL query results limit. Default is 5000. '-1' is no limit.
  - name: --sql-database-name
    summary: |-
      The SQL database name.
  - name: --sql-pool-name
    summary: |-
      The SQL pool name.
- uid: az_synapse_sql-script_list
  name: az synapse sql-script list
  summary: |-
    List SQL scripts in a synapse workspace.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/synapse/_help.py
  syntax: az synapse sql-script list --workspace-name
  examples:
  - summary: |-
      List SQL scripts.
    syntax: az synapse sql-script list --workspace-name testsynapseworkspace
  requiredParameters:
  - isRequired: true
    name: --workspace-name
    summary: |-
      The workspace name.
- uid: az_synapse_sql-script_show
  name: az synapse sql-script show
  summary: |-
    Get a SQL script.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/synapse/_help.py
  syntax: >-
    az synapse sql-script show --name
                               --workspace-name
  examples:
  - summary: |-
      Get a SQL script.
    syntax: >-
      az synapse sql-script show --workspace-name testsynapseworkspace \
        --name testsqlscriptname
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      The SQL script name.
  - isRequired: true
    name: --workspace-name
    summary: |-
      The workspace name.
- uid: az_synapse_sql-script_wait
  name: az synapse sql-script wait
  summary: |-
    Place the CLI in a waiting state until a condition of a sql script is met.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/synapse/_help.py
  syntax: >-
    az synapse sql-script wait --name
                               --workspace-name
                               [--created]
                               [--custom]
                               [--deleted]
                               [--exists]
                               [--interval]
                               [--timeout]
                               [--updated]
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      The SQL script name.
  - isRequired: true
    name: --workspace-name
    summary: |-
      The workspace name.
  optionalParameters:
  - name: --created
    defaultValue: "False"
    summary: |-
      Wait until created with 'provisioningState' at 'Succeeded'.
  - name: --custom
    summary: |-
      Wait until the condition satisfies a custom JMESPath query. E.g. provisioningState!='InProgress', instanceView.statuses[?code=='PowerState/running'].
  - name: --deleted
    defaultValue: "False"
    summary: |-
      Wait until deleted.
  - name: --exists
    defaultValue: "False"
    summary: |-
      Wait until the resource exists.
  - name: --interval
    defaultValue: "30"
    summary: |-
      Polling interval in seconds.
  - name: --timeout
    defaultValue: "3600"
    summary: |-
      Maximum wait in seconds.
  - name: --updated
    defaultValue: "False"
    summary: |-
      Wait until updated with provisioningState at 'Succeeded'.
commands:
- az_synapse_sql-script_create
- az_synapse_sql-script_delete
- az_synapse_sql-script_export
- az_synapse_sql-script_import
- az_synapse_sql-script_list
- az_synapse_sql-script_show
- az_synapse_sql-script_wait
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  ms.date: 10/27/2021
  description: Manage SQL scripts in a synapse workspace.
