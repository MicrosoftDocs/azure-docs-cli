### YamlMime:AzureCLIGroup
uid: az_cosmosdb
name: az cosmosdb
importantNote: >-
  > [!NOTE]

  > This command group has commands that are defined in both Azure CLI and at least one extension. Install each extension to benefit from its extended capabilities. [Learn more](https://learn.microsoft.com/cli/azure/azure-cli-extensions-overview) about extensions.
summary: |-
  Manage Azure Cosmos DB database accounts.
status: GA
sourceType: Core and Extension
directCommands:
- uid: az_cosmosdb_check-name-exists
  name: az cosmosdb check-name-exists
  summary: |-
    Checks if an Azure Cosmos DB account name exists.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/cosmosdb/_help.py
  syntax: >-
    az cosmosdb check-name-exists [--ids]
                                  [--name]
                                  [--subscription]
  examples:
  - summary: |-
      Checks if an Azure Cosmos DB account name exists. (autogenerated)
    syntax: az cosmosdb check-name-exists --name MyCosmosDBDatabaseAccount
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      Name of the Cosmos DB database account.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_cosmosdb_create
  name: az cosmosdb create
  summary: |-
    Creates a new Azure Cosmos DB database account.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/cosmosdb/_help.py
  syntax: >-
    az cosmosdb create --name
                       --resource-group
                       [--analytical-storage-schema-type {FullFidelity, WellDefined}]
                       [--assign-identity]
                       [--backup-interval]
                       [--backup-policy-type {Continuous, Periodic}]
                       [--backup-redundancy {Geo, Local, Zone}]
                       [--backup-retention]
                       [--capabilities]
                       [--continuous-tier {Continuous30Days, Continuous7Days}]
                       [--databases-to-restore]
                       [--default-consistency-level {BoundedStaleness, ConsistentPrefix, Eventual, Session, Strong}]
                       [--default-identity]
                       [--disable-key-based-metadata-write-access {false, true}]
                       [--enable-analytical-storage {false, true}]
                       [--enable-automatic-failover {false, true}]
                       [--enable-burst-capacity {false, true}]
                       [--enable-free-tier {false, true}]
                       [--enable-multiple-write-locations {false, true}]
                       [--enable-partition-merge {false, true}]
                       [--enable-virtual-network {false, true}]
                       [--gremlin-databases-to-restore]
                       [--ip-range-filter]
                       [--is-restore-request {false, true}]
                       [--key-uri]
                       [--kind {GlobalDocumentDB, MongoDB, Parse}]
                       [--locations]
                       [--max-interval]
                       [--max-staleness-prefix]
                       [--minimal-tls-version {Tls, Tls11, Tls12}]
                       [--network-acl-bypass {AzureServices, None}]
                       [--network-acl-bypass-resource-ids]
                       [--public-network-access {DISABLED, ENABLED, SECUREDBYPERIMETER}]
                       [--restore-source]
                       [--restore-timestamp]
                       [--server-version {3.2, 3.6, 4.0, 4.2}]
                       [--tables-to-restore]
                       [--tags]
                       [--virtual-network-rules]
  examples:
  - summary: |-
      Creates a new Azure Cosmos DB database account. (autogenerated)
    syntax: az cosmosdb create --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup --subscription MySubscription
  - summary: |-
      Creates a new Azure Cosmos DB database account with two regions. UK South is zone redundant.
    syntax: az cosmosdb create -n myaccount -g mygroup --locations regionName=eastus failoverPriority=0 isZoneRedundant=False --locations regionName=uksouth failoverPriority=1 isZoneRedundant=True --enable-multiple-write-locations --network-acl-bypass AzureServices --network-acl-bypass-resource-ids /subscriptions/subId/resourceGroups/rgName/providers/Microsoft.Synapse/workspaces/wsName
  - summary: |-
      Create a new Azure Cosmos DB database account by restoring from an existing account in the given location
    syntax: az cosmosdb create -n restoredaccount -g mygroup --is-restore-request true --restore-source /subscriptions/2296c272-5d55-40d9-bc05-4d56dc2d7588/providers/Microsoft.DocumentDB/locations/westus/restorableDatabaseAccounts/d056a4f8-044a-436f-80c8-cd3edbc94c68 --restore-timestamp 2020-07-13T16:03:41+0000 --locations regionName=westus failoverPriority=0 isZoneRedundant=False
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      Name of the Cosmos DB database account.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  optionalParameters:
  - name: --analytical-storage-schema-type --as-schema
    parameterValueGroup: "FullFidelity, WellDefined"
    summary: |-
      Schema type for analytical storage.
  - name: --assign-identity
    summary: |-
      Assign system or user assigned identities separated by spaces. Use '[system]' to refer system assigned identity.
  - name: --backup-interval
    summary: |-
      The frequency(in minutes) with which backups are taken (only for accounts with periodic mode backups).
  - name: --backup-policy-type
    parameterValueGroup: "Continuous, Periodic"
    summary: |-
      The type of backup policy of the account to create.
  - name: --backup-redundancy
    parameterValueGroup: "Geo, Local, Zone"
    summary: |-
      The redundancy type of the backup Storage account.
  - name: --backup-retention
    summary: |-
      The time(in hours) for which each backup is retained (only for accounts with periodic mode backups).
  - name: --capabilities
    summary: |-
      Set custom capabilities on the Cosmos DB database account.
  - name: --continuous-tier
    parameterValueGroup: "Continuous30Days, Continuous7Days"
    summary: |-
      The tier of Continuous backup.
  - name: --databases-to-restore
    summary: |-
      Add a database and its collection names to restore.
    description: |-
      Usage:          --databases-to-restore name=DatabaseName collections=collection1 [collection2 ...].
  - name: --default-consistency-level
    parameterValueGroup: "BoundedStaleness, ConsistentPrefix, Eventual, Session, Strong"
    summary: |-
      Default consistency level of the Cosmos DB database account.
  - name: --default-identity
    summary: |-
      The primary identity to access key vault in CMK related features. e.g. 'FirstPartyIdentity', 'SystemAssignedIdentity' and more. User-assigned identities are specified in format 'UserAssignedIdentity=<resource ID of the user-assigned identity>'.
  - name: --disable-key-based-metadata-write-access
    parameterValueGroup: "false, true"
    summary: |-
      Disable write operations on metadata resources (databases, containers, throughput) via account keys.
  - name: --enable-analytical-storage
    parameterValueGroup: "false, true"
    summary: |-
      Flag to enable log storage on the account.
  - name: --enable-automatic-failover
    parameterValueGroup: "false, true"
    summary: |-
      Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.
  - name: --enable-burst-capacity
    parameterValueGroup: "false, true"
    summary: |-
      Flag to Enable/Disable burst capacity feature.
    description: |-
      Usage:    --enable-burst-capacity true
      Default:  false
      The accepted values for the enable-burst-capacity are true and false.
  - name: --enable-free-tier
    parameterValueGroup: "false, true"
    summary: |-
      If enabled the account is free-tier.
    isPreview: true
  - name: --enable-multiple-write-locations
    parameterValueGroup: "false, true"
    summary: |-
      Enable Multiple Write Locations.
  - name: --enable-partition-merge
    parameterValueGroup: "false, true"
    summary: |-
      Flag to enable partition merge on the account.
  - name: --enable-virtual-network
    parameterValueGroup: "false, true"
    summary: |-
      Enables virtual network on the Cosmos DB database account.
  - name: --gremlin-databases-to-restore
    summary: |-
      Add a gremlin database and its graph names to restore.
    description: |-
      Usage:          --gremlin-databases-to-restore name=DatabaseName graphs=graph1 [graph2 ...].
  - name: --ip-range-filter
    summary: |-
      Firewall support. Specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account. IP addresses/ranges must be comma-separated and must not contain any spaces.
  - name: --is-restore-request -r
    parameterValueGroup: "false, true"
    summary: |-
      Restore from an existing/deleted account.
  - name: --key-uri
    summary: |-
      The URI of the key vault.
  - name: --kind
    defaultValue: "GlobalDocumentDB"
    parameterValueGroup: "GlobalDocumentDB, MongoDB, Parse"
    summary: |-
      The type of Cosmos DB database account to create.
  - name: --locations
    summary: |-
      Add a location to the Cosmos DB database account.
    description: |-
      Usage:          --locations KEY=VALUE [KEY=VALUE ...]
      Required Keys:  regionName, failoverPriority
      Optional Key:   isZoneRedundant
      Default:        single region account in the location of the specified resource group.
      Failover priority values are 0 for write regions and greater than 0 for read regions. A failover priority value must be unique and less than the total number of regions.
      Multiple locations can be specified by using more than one `--locations` argument.
  - name: --max-interval
    defaultValue: "5"
    summary: |-
      When used with Bounded Staleness consistency, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400.
  - name: --max-staleness-prefix
    defaultValue: "100"
    summary: |-
      When used with Bounded Staleness consistency, this value represents the number of stale requests tolerated. Accepted range for this value is 10 - 2,147,483,647.
  - name: --minimal-tls-version
    parameterValueGroup: "Tls, Tls11, Tls12"
    summary: |-
      Indicate the minimum allowed TLS version.
    description: |-
      Usage:    --minimal-tls-version TLSVersion
      Default:  Tls, except for Cassandra and Mongo APIs, which only work with Tls12
      The accepted values for the minimal TLS version are 'Tls', 'Tls11', and 'Tls12', which correspond to the
      TLS versions 1.0, 1.1, and 1.2.
  - name: --network-acl-bypass
    parameterValueGroup: "AzureServices, None"
    summary: |-
      Flag to enable or disable Network Acl Bypass.
  - name: --network-acl-bypass-resource-ids -i
    summary: |-
      List of Resource Ids to allow Network Acl Bypass.
  - name: --public-network-access -p
    parameterValueGroup: "DISABLED, ENABLED, SECUREDBYPERIMETER"
    summary: |-
      Sets public network access in server to either Enabled, Disabled, or SecuredByPerimeter.
  - name: --restore-source
    summary: |-
      The restorable-database-account Id of the source account from which the account has to be restored. Required if --is-restore-request is set to true.
  - name: --restore-timestamp
    summary: |-
      The timestamp to which the account has to be restored to. Required if --is-restore-request is set to true.
  - name: --server-version
    parameterValueGroup: "3.2, 3.6, 4.0, 4.2"
    summary: |-
      Valid only for MongoDB accounts.
  - name: --tables-to-restore
    summary: |-
      Add table names to restore.
    description: |-
      Usage:          --tables-to-restore tables=table1 [table2 ...].
  - name: --tags
    summary: |-
      Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags.
  - name: --virtual-network-rules
    summary: |-
      ACL's for virtual network.
- uid: az_cosmosdb_create(cosmosdb-preview)
  name: az cosmosdb create
  extensionSuffix: cosmosdb-preview
  summary: |-
    Creates a new Azure Cosmos DB database account.
  status: Preview
  isPreview: true
  previewOrExperimentalInfo: 'This command is in preview and under development. Reference and support levels: https://aka.ms/CLI_refstatus'
  sourceType: Extension
  syntax: >-
    az cosmosdb create --name
                       --resource-group
                       [--analytical-storage-schema-type {FullFidelity, WellDefined}]
                       [--assign-identity]
                       [--backup-interval]
                       [--backup-policy-type {Continuous, Periodic}]
                       [--backup-redundancy {Geo, Local, Zone}]
                       [--backup-retention]
                       [--capabilities]
                       [--continuous-tier {Continuous30Days, Continuous7Days}]
                       [--databases-to-restore]
                       [--default-consistency-level {BoundedStaleness, ConsistentPrefix, Eventual, Session, Strong}]
                       [--default-identity]
                       [--default-priority-level {High, Low}]
                       [--disable-key-based-metadata-write-access {false, true}]
                       [--enable-analytical-storage {false, true}]
                       [--enable-automatic-failover {false, true}]
                       [--enable-burst-capacity {false, true}]
                       [--enable-free-tier {false, true}]
                       [--enable-materialized-views {false, true}]
                       [--enable-multiple-write-locations {false, true}]
                       [--enable-pbe {false, true}]
                       [--enable-public-network {false, true}]
                       [--enable-virtual-network {false, true}]
                       [--gremlin-databases-to-restore]
                       [--ip-range-filter]
                       [--is-restore-request {false, true}]
                       [--key-uri]
                       [--kind {GlobalDocumentDB, MongoDB, Parse}]
                       [--locations]
                       [--max-interval]
                       [--max-staleness-prefix]
                       [--network-acl-bypass {AzureServices, None}]
                       [--network-acl-bypass-resource-ids]
                       [--restore-source]
                       [--restore-timestamp]
                       [--server-version {3.2, 3.6, 4.0, 4.2}]
                       [--tables-to-restore]
                       [--tags]
                       [--virtual-network-rules]
  examples:
  - summary: |-
      DB database account. (autogenerated)
    syntax: az cosmosdb create --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup --subscription MySubscription
  - summary: |-
      Creates a new Azure Cosmos DB database account with two regions. UK South is zone redundant.
    syntax: az cosmosdb create -n myaccount -g mygroup --locations regionName=eastus failoverPriority=0 isZoneRedundant=False --locations regionName=uksouth failoverPriority=1 isZoneRedundant=True --enable-multiple-write-locations --network-acl-bypass AzureServices --network-acl-bypass-resource-ids /subscriptions/subId/resourceGroups/rgName/providers/Microsoft.Synapse/workspaces/wsName
  - summary: |-
      Create a new Azure Cosmos DB database account by restoring from an existing account in the given location
    syntax: az cosmosdb create -n restoredaccount -g mygroup --is-restore-request true --restore-source /subscriptions/2296c272-5d55-40d9-bc05-4d56dc2d7588/providers/Microsoft.DocumentDB/locations/westus/restorableDatabaseAccounts/d056a4f8-044a-436f-80c8-cd3edbc94c68 --restore-timestamp 2020-07-13T16:03:41+0000 --locations regionName=westus failoverPriority=0 isZoneRedundant=False
  - summary: |-
      Creates a new Azure Cosmos DB database account with materialized views and cassandra capability enabled.
    syntax: az cosmosdb create --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup --enable-materialized-views true --capabilities EnableCassandra CassandraEnableMaterializedViews
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      Name of the Cosmos DB database account.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  optionalParameters:
  - name: --analytical-storage-schema-type --as-schema
    parameterValueGroup: "FullFidelity, WellDefined"
    summary: |-
      Schema type for analytical storage.
  - name: --assign-identity
    summary: |-
      Assign system or user assigned identities separated by spaces. Use '[system]' to refer system assigned identity.
  - name: --backup-interval
    summary: |-
      The frequency(in minutes) with which backups are taken (only for accounts with periodic mode backups).
  - name: --backup-policy-type
    parameterValueGroup: "Continuous, Periodic"
    summary: |-
      The type of backup policy of the account to create.
  - name: --backup-redundancy
    parameterValueGroup: "Geo, Local, Zone"
    summary: |-
      The redundancy type of the backup Storage account.
  - name: --backup-retention
    summary: |-
      The time(in hours) for which each backup is retained (only for accounts with periodic mode backups).
  - name: --capabilities
    summary: |-
      Set custom capabilities on the Cosmos DB database account.
  - name: --continuous-tier
    parameterValueGroup: "Continuous30Days, Continuous7Days"
    summary: |-
      The tier of Continuous backup.
  - name: --databases-to-restore
    summary: |-
      Add a database and its collection names to restore.
    description: |-
      Usage:          --databases-to-restore name=DatabaseName collections=collection1 [collection2 ...].
    isPreview: true
  - name: --default-consistency-level
    parameterValueGroup: "BoundedStaleness, ConsistentPrefix, Eventual, Session, Strong"
    summary: |-
      Default consistency level of the Cosmos DB database account.
  - name: --default-identity
    summary: |-
      The primary identity to access key vault in CMK related features. e.g. 'FirstPartyIdentity', 'SystemAssignedIdentity' and more.
  - name: --default-priority-level
    parameterValueGroup: "High, Low"
    summary: |-
      Default Priority Level of Request if not specified.
    isPreview: true
  - name: --disable-key-based-metadata-write-access
    parameterValueGroup: "false, true"
    summary: |-
      Disable write operations on metadata resources (databases, containers, throughput) via account keys.
  - name: --enable-analytical-storage
    parameterValueGroup: "false, true"
    summary: |-
      Flag to enable log storage on the account.
  - name: --enable-automatic-failover
    parameterValueGroup: "false, true"
    summary: |-
      Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.
  - name: --enable-burst-capacity
    parameterValueGroup: "false, true"
    summary: |-
      Flag to enable burst capacity on the account.
    isPreview: true
  - name: --enable-free-tier
    parameterValueGroup: "false, true"
    summary: |-
      If enabled the account is free-tier.
    isPreview: true
  - name: --enable-materialized-views --enable-mv
    parameterValueGroup: "false, true"
    summary: |-
      Flag to enable MaterializedViews on the account.
    isPreview: true
  - name: --enable-multiple-write-locations
    parameterValueGroup: "false, true"
    summary: |-
      Enable Multiple Write Locations.
  - name: --enable-pbe --enable-priority-based-execution
    parameterValueGroup: "false, true"
    summary: |-
      Flag to enable priority based execution on the account.
    isPreview: true
  - name: --enable-public-network -e
    parameterValueGroup: "false, true"
    summary: |-
      Enable or disable public network access to server.
  - name: --enable-virtual-network
    parameterValueGroup: "false, true"
    summary: |-
      Enables virtual network on the Cosmos DB database account.
  - name: --gremlin-databases-to-restore
    summary: |-
      Add a gremlin database and its graph names to restore.
    description: |-
      Usage:          --gremlin-databases-to-restore name=DatabaseName graphs=graph1 [graph2 ...].
    isPreview: true
  - name: --ip-range-filter
    summary: |-
      Firewall support. Specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account. IP addresses/ranges must be comma-separated and must not contain any spaces.
  - name: --is-restore-request -r
    parameterValueGroup: "false, true"
    summary: |-
      Restore from an existing/deleted account.
    isPreview: true
  - name: --key-uri
    summary: |-
      The URI of the key vault.
  - name: --kind
    defaultValue: "GlobalDocumentDB"
    parameterValueGroup: "GlobalDocumentDB, MongoDB, Parse"
    summary: |-
      The type of Cosmos DB database account to create.
  - name: --locations
    summary: |-
      Add a location to the Cosmos DB database account.
    description: |-
      Usage:          --locations KEY=VALUE [KEY=VALUE ...]
      Required Keys:  regionName, failoverPriority
      Optional Key:   isZoneRedundant
      Default:        single region account in the location of the specified resource group.
      Failover priority values are 0 for write regions and greater than 0 for read regions. A failover priority value must be unique and less than the total number of regions.
      Multiple locations can be specified by using more than one `--locations` argument.
  - name: --max-interval
    defaultValue: "5"
    summary: |-
      When used with Bounded Staleness consistency, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 1 - 100.
  - name: --max-staleness-prefix
    defaultValue: "100"
    summary: |-
      When used with Bounded Staleness consistency, this value represents the number of stale requests tolerated. Accepted range for this value is 1 - 2,147,483,647.
  - name: --network-acl-bypass
    parameterValueGroup: "AzureServices, None"
    summary: |-
      Flag to enable or disable Network Acl Bypass.
  - name: --network-acl-bypass-resource-ids -i
    summary: |-
      List of Resource Ids to allow Network Acl Bypass.
  - name: --restore-source
    summary: |-
      The restorable-database-account Id of the source account from which the account has to be restored. Required if --is-restore-request is set to true.
    isPreview: true
  - name: --restore-timestamp
    summary: |-
      The timestamp to which the account has to be restored to. Required if --is-restore-request is set to true.
    isPreview: true
  - name: --server-version
    parameterValueGroup: "3.2, 3.6, 4.0, 4.2"
    summary: |-
      Valid only for MongoDB accounts.
  - name: --tables-to-restore
    summary: |-
      Add table names to restore.
    description: |-
      Usage:          --tables-to-restore tables=table1 [table2 ...].
    isPreview: true
  - name: --tags
    summary: |-
      Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags.
  - name: --virtual-network-rules
    summary: |-
      ACL's for virtual network.
- uid: az_cosmosdb_delete
  name: az cosmosdb delete
  summary: |-
    Deletes an Azure Cosmos DB database account.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/cosmosdb/_help.py
  syntax: >-
    az cosmosdb delete [--ids]
                       [--name]
                       [--resource-group]
                       [--subscription]
                       [--yes]
  examples:
  - summary: |-
      Deletes an Azure Cosmos DB database account. (autogenerated)
    syntax: az cosmosdb delete --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      Name of the Cosmos DB database account.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --yes -y
    defaultValue: "False"
    summary: |-
      Do not prompt for confirmation.
- uid: az_cosmosdb_failover-priority-change
  name: az cosmosdb failover-priority-change
  summary: |-
    Changes the failover priority for the Azure Cosmos DB database account.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/cosmosdb/_help.py
  syntax: >-
    az cosmosdb failover-priority-change --failover-policies
                                         [--ids]
                                         [--name]
                                         [--resource-group]
                                         [--subscription]
  examples:
  - summary: |-
      Changes the failover priority for the Azure Cosmos DB database account.
    syntax: az cosmosdb failover-priority-change --failover-policies southafricanorth=0 westus=8 northeurope=3 --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup
  requiredParameters:
  - isRequired: true
    name: --failover-policies
    summary: |-
      Space-separated failover policies in 'regionName=failoverPriority' format. Number of policies must match the number of regions the account is currently replicated. All regionName values must match those of the regions the account is currently replicated. All failoverPriority values must be unique. There must be one failoverPriority value zero (0) specified. All remaining failoverPriority values can be any positive integer and they don't have to be contiguos, neither written in any specific order. E.g eastus=0 westus=1.
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      Name of the Cosmos DB database account.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_cosmosdb_list
  name: az cosmosdb list
  summary: |-
    List Azure Cosmos DB database accounts.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/cosmosdb/_help.py
  syntax: az cosmosdb list [--resource-group]
  optionalParameters:
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_cosmosdb_list(cosmosdb-preview)
  name: az cosmosdb list
  extensionSuffix: cosmosdb-preview
  summary: |-
    List Azure Cosmos DB database accounts.
  status: GA
  sourceType: Extension
  syntax: az cosmosdb list [--resource-group]
  optionalParameters:
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_cosmosdb_list-connection-strings
  name: az cosmosdb list-connection-strings
  summary: |-
    List the connection strings for a Azure Cosmos DB database account.
  status: Deprecated
  isDeprecated: true
  deprecateInfo: This command has been deprecated and will be removed in a future release. Use 'cosmosdb keys list --type connection-strings' instead.
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/cosmosdb/_help.py
  syntax: >-
    az cosmosdb list-connection-strings [--ids]
                                        [--name]
                                        [--resource-group]
                                        [--subscription]
  examples:
  - summary: |-
      List the connection strings for a Azure Cosmos DB database account. (autogenerated)
    syntax: az cosmosdb list-connection-strings --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      Name of the Cosmos DB database account.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_cosmosdb_list-keys
  name: az cosmosdb list-keys
  summary: |-
    List the access keys for a Azure Cosmos DB database account.
  status: Deprecated
  isDeprecated: true
  deprecateInfo: This command has been deprecated and will be removed in a future release. Use 'cosmosdb keys list' instead.
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/cosmosdb/_help.py
  syntax: >-
    az cosmosdb list-keys [--ids]
                          [--name]
                          [--resource-group]
                          [--subscription]
  examples:
  - summary: |-
      List the access keys for a Azure Cosmos DB database account. (autogenerated)
    syntax: az cosmosdb list-keys --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup --subscription MySubscription
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      Name of the Cosmos DB database account.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_cosmosdb_list-read-only-keys
  name: az cosmosdb list-read-only-keys
  summary: |-
    List the read-only access keys for a Azure Cosmos DB database account.
  status: Deprecated
  isDeprecated: true
  deprecateInfo: This command has been deprecated and will be removed in a future release. Use 'cosmosdb keys list --type read-only-keys' instead.
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/cosmosdb/_help.py
  syntax: >-
    az cosmosdb list-read-only-keys [--ids]
                                    [--name]
                                    [--resource-group]
                                    [--subscription]
  examples:
  - summary: |-
      List the read-only access keys for a Azure Cosmos DB database account. (autogenerated)
    syntax: az cosmosdb list-read-only-keys --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      Name of the Cosmos DB database account.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_cosmosdb_regenerate-key
  name: az cosmosdb regenerate-key
  summary: |-
    Regenerate an access key for a Azure Cosmos DB database account.
  status: Deprecated
  isDeprecated: true
  deprecateInfo: This command has been deprecated and will be removed in a future release. Use 'cosmosdb keys regenerate' instead.
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/cosmosdb/_help.py
  syntax: >-
    az cosmosdb regenerate-key --key-kind {primary, primaryReadonly, secondary, secondaryReadonly}
                               [--ids]
                               [--name]
                               [--resource-group]
                               [--subscription]
  examples:
  - summary: |-
      Regenerate an access key for a Azure Cosmos DB database account. (autogenerated)
    syntax: az cosmosdb regenerate-key --key-kind primary --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup
  requiredParameters:
  - isRequired: true
    name: --key-kind
    parameterValueGroup: "primary, primaryReadonly, secondary, secondaryReadonly"
    summary: |-
      The access key to regenerate.
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      Name of the Cosmos DB database account.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_cosmosdb_restore
  name: az cosmosdb restore
  summary: |-
    Create a new Azure Cosmos DB database account by restoring from an existing database account.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/cosmosdb/_help.py
  syntax: >-
    az cosmosdb restore --account-name
                        --location
                        --resource-group
                        --restore-timestamp
                        --target-database-account-name
                        [--assign-identity]
                        [--databases-to-restore]
                        [--default-identity]
                        [--gremlin-databases-to-restore]
                        [--public-network-access {DISABLED, ENABLED}]
                        [--tables-to-restore]
  examples:
  - summary: |-
      Create a new Azure Cosmos DB database account by restoring from an existing database account.
    syntax: az cosmosdb restore --target-database-account-name MyRestoredCosmosDBDatabaseAccount --account-name MySourceAccount --restore-timestamp 2020-07-13T16:03:41+0000 -g MyResourceGroup --location westus
  - summary: |-
      Create a new Azure Cosmos DB Sql or MongoDB database account by restoring only the selected databases and collections from an existing database account.
    syntax: az cosmosdb restore -g MyResourceGroup --target-database-account-name MyRestoredCosmosDBDatabaseAccount --account-name MySourceAccount --restore-timestamp 2020-07-13T16:03:41+0000 --location westus --databases-to-restore name=MyDB1 collections=collection1 collection2 --databases-to-restore name=MyDB2 collections=collection3 collection4
  - summary: |-
      Create a new Azure Cosmos DB Gremlin database account by restoring only the selected databases or graphs from an existing database account.
    syntax: az cosmosdb restore -g MyResourceGroup --target-database-account-name MyRestoredCosmosDBDatabaseAccount --account-name MySourceAccount --restore-timestamp 2020-07-13T16:03:41+0000 --location westus --gremlin-databases-to-restore name=graphdb1 graphs=graph1 graph2
  - summary: |-
      Create a new Azure Cosmos DB Table database account by restoring only the selected tables from an existing database account.
    syntax: az cosmosdb restore -g MyResourceGroup --target-database-account-name MyRestoredCosmosDBDatabaseAccount --account-name MySourceAccount --restore-timestamp 2020-07-13T16:03:41+0000 --location westus --tables-to-restore table1,table2
  requiredParameters:
  - isRequired: true
    name: --account-name -a
    summary: |-
      Name of the source Cosmos DB database account for the restore.
  - isRequired: true
    name: --location -l
    summary: |-
      The location of the source account from which restore is triggered. This will also be the write region of the restored account.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - isRequired: true
    name: --restore-timestamp -t
    summary: |-
      The timestamp to which the account has to be restored to.
  - isRequired: true
    name: --target-database-account-name -n
    summary: |-
      Name of the new target Cosmos DB database account after the restore.
  optionalParameters:
  - name: --assign-identity
    summary: |-
      Assign system or user assigned identities separated by spaces. Use '[system]' to refer system assigned identity.
  - name: --databases-to-restore
    summary: |-
      Add a database and its collection names to restore.
    description: |-
      Usage:          --databases-to-restore name=DatabaseName collections=collection1 [collection2 ...]
      Multiple databases can be specified by using more than one `--databases-to-restore` argument.
  - name: --default-identity
    summary: |-
      The primary identity to access key vault in CMK related features. e.g. 'FirstPartyIdentity', 'SystemAssignedIdentity' and more.
  - name: --gremlin-databases-to-restore
    summary: |-
      Add a gremlin database and its graph names to restore.
    description: |-
      Usage:          --gremlin-databases-to-restore name=DatabaseName graphs=graph1 [graph2 ...].
  - name: --public-network-access -p
    parameterValueGroup: "DISABLED, ENABLED"
    summary: |-
      Sets public network access in server to either Enabled or Disabled.
  - name: --tables-to-restore
    summary: |-
      Add table names to restore.
    description: |-
      Usage:          --tables-to-restore table1 [table2 ...].
- uid: az_cosmosdb_restore(cosmosdb-preview)
  name: az cosmosdb restore
  extensionSuffix: cosmosdb-preview
  summary: |-
    Create a new Azure Cosmos DB database account by restoring from an existing database account.
  status: Preview
  isPreview: true
  previewOrExperimentalInfo: 'This command is in preview and under development. Reference and support levels: https://aka.ms/CLI_refstatus'
  sourceType: Extension
  syntax: >-
    az cosmosdb restore --account-name
                        --location
                        --resource-group
                        --restore-timestamp
                        --target-database-account-name
                        [--assign-identity]
                        [--databases-to-restore]
                        [--default-identity]
                        [--enable-public-network {false, true}]
                        [--gremlin-databases-to-restore]
                        [--source-backup-location]
                        [--tables-to-restore]
  examples:
  - summary: |-
      Create a new Azure Cosmos DB database account by restoring from an existing database account.
    syntax: az cosmosdb restore --target-database-account-name MyRestoredCosmosDBDatabaseAccount --account-name MySourceAccount --restore-timestamp 2020-07-13T16:03:41+0000 -g MyResourceGroup --location westus
  - summary: |-
      Create a new Azure Cosmos DB Sql or MongoDB database account by restoring only the selected databases and collections from an existing database account.
    syntax: az cosmosdb restore -g MyResourceGroup --target-database-account-name MyRestoredCosmosDBDatabaseAccount --account-name MySourceAccount --restore-timestamp 2020-07-13T16:03:41+0000 --location westus --databases-to-restore name=MyDB1 collections=collection1 collection2 --databases-to-restore name=MyDB2 collections=collection3 collection4
  - summary: |-
      Create a new Azure Cosmos DB Gremlin database account by restoring only the selected databases or graphs from an existing database account.
    syntax: az cosmosdb restore -g MyResourceGroup --target-database-account-name MyRestoredCosmosDBDatabaseAccount --account-name MySourceAccount --restore-timestamp 2020-07-13T16:03:41+0000 --location westus --gremlin-databases-to-restore name=graphdb1 graphs=graph1 graph2
  - summary: |-
      Create a new Azure Cosmos DB Table database account by restoring only the selected tables from an existing database account.
    syntax: az cosmosdb restore -g MyResourceGroup --target-database-account-name MyRestoredCosmosDBDatabaseAccount --account-name MySourceAccount --restore-timestamp 2020-07-13T16:03:41+0000 --location westus --tables-to-restore table1,table2
  requiredParameters:
  - isRequired: true
    name: --account-name -a
    summary: |-
      Name of the source Cosmos DB database account for the restore.
  - isRequired: true
    name: --location -l
    summary: |-
      This is the write region of the restored account. This is also the location of the source account where its backups are located if source_backup_location is not provided.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - isRequired: true
    name: --restore-timestamp -t
    summary: |-
      The timestamp to which the account has to be restored to.
  - isRequired: true
    name: --target-database-account-name -n
    summary: |-
      Name of the new target Cosmos DB database account after the restore.
  optionalParameters:
  - name: --assign-identity
    summary: |-
      Assign system or user assigned identities separated by spaces. Use '[system]' to refer system assigned identity.
  - name: --databases-to-restore
    summary: |-
      Add a database and its collection names to restore.
    description: |-
      Usage:          --databases-to-restore name=DatabaseName collections=collection1 [collection2 ...]
      Multiple databases can be specified by using more than one `--databases-to-restore` argument.
  - name: --default-identity
    summary: |-
      The primary identity to access key vault in CMK related features. e.g. 'FirstPartyIdentity', 'SystemAssignedIdentity' and more.
  - name: --enable-public-network -e
    parameterValueGroup: "false, true"
    summary: |-
      Enable or disable public network access to server.
    isPreview: true
  - name: --gremlin-databases-to-restore
    summary: |-
      Add a gremlin database and its graph names to restore.
    description: |-
      Usage:          --gremlin-databases-to-restore name=DatabaseName graphs=graph1 [graph2 ...].
    isPreview: true
  - name: --source-backup-location
    summary: |-
      This is the location of the source account where backups are located. Provide this value if the source and target are in different locations.
    isPreview: true
  - name: --tables-to-restore
    summary: |-
      Add table names to restore.
    description: |-
      Usage:          --tables-to-restore table1 [table2 ...].
    isPreview: true
- uid: az_cosmosdb_show
  name: az cosmosdb show
  summary: |-
    Get the details of an Azure Cosmos DB database account.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/cosmosdb/_help.py
  syntax: >-
    az cosmosdb show [--ids]
                     [--name]
                     [--resource-group]
                     [--subscription]
  examples:
  - summary: |-
      Get the details of an Azure Cosmos DB database account. (autogenerated)
    syntax: az cosmosdb show --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      Name of the Cosmos DB database account.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_cosmosdb_show(cosmosdb-preview)
  name: az cosmosdb show
  extensionSuffix: cosmosdb-preview
  summary: |-
    Get the details of an Azure Cosmos DB database account.
  status: GA
  sourceType: Extension
  syntax: >-
    az cosmosdb show [--ids]
                     [--name]
                     [--resource-group]
                     [--subscription]
  examples:
  - summary: |-
      Get the details of an Azure Cosmos DB database account. (autogenerated)
    syntax: az cosmosdb show --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      Name of the Cosmos DB database account.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_cosmosdb_update
  name: az cosmosdb update
  summary: |-
    Update an Azure Cosmos DB database account.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/cosmosdb/_help.py
  syntax: >-
    az cosmosdb update [--analytical-storage-schema-type {FullFidelity, WellDefined}]
                       [--backup-interval]
                       [--backup-policy-type {Continuous, Periodic}]
                       [--backup-redundancy {Geo, Local, Zone}]
                       [--backup-retention]
                       [--capabilities]
                       [--continuous-tier {Continuous30Days, Continuous7Days}]
                       [--default-consistency-level {BoundedStaleness, ConsistentPrefix, Eventual, Session, Strong}]
                       [--default-identity]
                       [--disable-key-based-metadata-write-access {false, true}]
                       [--enable-analytical-storage {false, true}]
                       [--enable-automatic-failover {false, true}]
                       [--enable-burst-capacity {false, true}]
                       [--enable-multiple-write-locations {false, true}]
                       [--enable-partition-merge {false, true}]
                       [--enable-virtual-network {false, true}]
                       [--ids]
                       [--ip-range-filter]
                       [--key-uri]
                       [--locations]
                       [--max-interval]
                       [--max-staleness-prefix]
                       [--minimal-tls-version {Tls, Tls11, Tls12}]
                       [--name]
                       [--network-acl-bypass {AzureServices, None}]
                       [--network-acl-bypass-resource-ids]
                       [--public-network-access {DISABLED, ENABLED, SECUREDBYPERIMETER}]
                       [--resource-group]
                       [--server-version {3.2, 3.6, 4.0, 4.2}]
                       [--subscription]
                       [--tags]
                       [--virtual-network-rules]
  examples:
  - summary: |-
      Update an Azure Cosmos DB database account. (autogenerated)
    syntax: az cosmosdb update --capabilities EnableGremlin --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup
  - summary: |-
      Creates a new Azure Cosmos DB database account with two regions. UK South is zone redundant.
    syntax: az cosmosdb update -n myaccount -g mygroup --locations regionName=eastus failoverPriority=0 isZoneRedundant=False --locations regionName=uksouth failoverPriority=1 isZoneRedundant=True --enable-multiple-write-locations --network-acl-bypass AzureServices --network-acl-bypass-resource-ids /subscriptions/subId/resourceGroups/rgName/providers/Microsoft.Synapse/workspaces/wsName
  optionalParameters:
  - name: --analytical-storage-schema-type --as-schema
    parameterValueGroup: "FullFidelity, WellDefined"
    summary: |-
      Schema type for analytical storage.
  - name: --backup-interval
    summary: |-
      The frequency(in minutes) with which backups are taken (only for accounts with periodic mode backups).
  - name: --backup-policy-type
    parameterValueGroup: "Continuous, Periodic"
    summary: |-
      The type of backup policy of the account to create.
  - name: --backup-redundancy
    parameterValueGroup: "Geo, Local, Zone"
    summary: |-
      The redundancy type of the backup Storage account.
  - name: --backup-retention
    summary: |-
      The time(in hours) for which each backup is retained (only for accounts with periodic mode backups).
  - name: --capabilities
    summary: |-
      Set custom capabilities on the Cosmos DB database account.
  - name: --continuous-tier
    parameterValueGroup: "Continuous30Days, Continuous7Days"
    summary: |-
      The tier of Continuous backup.
  - name: --default-consistency-level
    parameterValueGroup: "BoundedStaleness, ConsistentPrefix, Eventual, Session, Strong"
    summary: |-
      Default consistency level of the Cosmos DB database account.
  - name: --default-identity
    summary: |-
      The primary identity to access key vault in CMK related features. e.g. 'FirstPartyIdentity', 'SystemAssignedIdentity' and more. User-assigned identities are specified in format 'UserAssignedIdentity=<resource ID of the user-assigned identity>'.
  - name: --disable-key-based-metadata-write-access
    parameterValueGroup: "false, true"
    summary: |-
      Disable write operations on metadata resources (databases, containers, throughput) via account keys.
  - name: --enable-analytical-storage
    parameterValueGroup: "false, true"
    summary: |-
      Flag to enable log storage on the account.
  - name: --enable-automatic-failover
    parameterValueGroup: "false, true"
    summary: |-
      Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.
  - name: --enable-burst-capacity
    parameterValueGroup: "false, true"
    summary: |-
      Flag to Enable/Disable burst capacity feature.
    description: |-
      Usage:    --enable-burst-capacity true
      Default:  false
      The accepted values for the enable-burst-capacity are true and false.
  - name: --enable-multiple-write-locations
    parameterValueGroup: "false, true"
    summary: |-
      Enable Multiple Write Locations.
  - name: --enable-partition-merge
    parameterValueGroup: "false, true"
    summary: |-
      Flag to enable partition merge on the account.
  - name: --enable-virtual-network
    parameterValueGroup: "false, true"
    summary: |-
      Enables virtual network on the Cosmos DB database account.
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --ip-range-filter
    summary: |-
      Firewall support. Specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account. IP addresses/ranges must be comma-separated and must not contain any spaces.
  - name: --key-uri
    summary: |-
      The URI of the key vault.
    isPreview: true
  - name: --locations
    summary: |-
      Add a location to the Cosmos DB database account.
    description: |-
      Usage:          --locations KEY=VALUE [KEY=VALUE ...]
      Required Keys:  regionName, failoverPriority
      Optional Key:   isZoneRedundant
      Default:        single region account in the location of the specified resource group.
      Failover priority values are 0 for write regions and greater than 0 for read regions. A failover priority value must be unique and less than the total number of regions.
      Multiple locations can be specified by using more than one `--locations` argument.
  - name: --max-interval
    summary: |-
      When used with Bounded Staleness consistency, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400.
  - name: --max-staleness-prefix
    summary: |-
      When used with Bounded Staleness consistency, this value represents the number of stale requests tolerated. Accepted range for this value is 10 - 2,147,483,647.
  - name: --minimal-tls-version
    parameterValueGroup: "Tls, Tls11, Tls12"
    summary: |-
      Indicate the minimum allowed TLS version.
    description: |-
      Usage:    --minimal-tls-version TLSVersion
      Default:  Tls, except for Cassandra and Mongo APIs, which only work with Tls12
      The accepted values for the minimal TLS version are 'Tls', 'Tls11', and 'Tls12', which correspond to the
      TLS versions 1.0, 1.1, and 1.2.
  - name: --name -n
    summary: |-
      Name of the Cosmos DB database account.
  - name: --network-acl-bypass
    parameterValueGroup: "AzureServices, None"
    summary: |-
      Flag to enable or disable Network Acl Bypass.
  - name: --network-acl-bypass-resource-ids -i
    summary: |-
      List of Resource Ids to allow Network Acl Bypass.
  - name: --public-network-access -p
    parameterValueGroup: "DISABLED, ENABLED, SECUREDBYPERIMETER"
    summary: |-
      Sets public network access in server to either Enabled, Disabled, or SecuredByPerimeter.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --server-version
    parameterValueGroup: "3.2, 3.6, 4.0, 4.2"
    summary: |-
      Valid only for MongoDB accounts.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --tags
    summary: |-
      Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags.
  - name: --virtual-network-rules
    summary: |-
      ACL's for virtual network.
- uid: az_cosmosdb_update(cosmosdb-preview)
  name: az cosmosdb update
  extensionSuffix: cosmosdb-preview
  summary: |-
    Update an Azure Cosmos DB database account.
  status: GA
  sourceType: Extension
  syntax: >-
    az cosmosdb update [--analytical-storage-schema-type {FullFidelity, WellDefined}]
                       [--backup-interval]
                       [--backup-policy-type {Continuous, Periodic}]
                       [--backup-redundancy {Geo, Local, Zone}]
                       [--backup-retention]
                       [--capabilities]
                       [--continuous-tier {Continuous30Days, Continuous7Days}]
                       [--default-consistency-level {BoundedStaleness, ConsistentPrefix, Eventual, Session, Strong}]
                       [--default-identity]
                       [--default-priority-level {High, Low}]
                       [--disable-key-based-metadata-write-access {false, true}]
                       [--enable-analytical-storage {false, true}]
                       [--enable-automatic-failover {false, true}]
                       [--enable-burst-capacity {false, true}]
                       [--enable-materialized-views {false, true}]
                       [--enable-multiple-write-locations {false, true}]
                       [--enable-pbe {false, true}]
                       [--enable-public-network {false, true}]
                       [--enable-virtual-network {false, true}]
                       [--ids]
                       [--ip-range-filter]
                       [--locations]
                       [--max-interval]
                       [--max-staleness-prefix]
                       [--name]
                       [--network-acl-bypass {AzureServices, None}]
                       [--network-acl-bypass-resource-ids]
                       [--resource-group]
                       [--server-version {3.2, 3.6, 4.0, 4.2}]
                       [--subscription]
                       [--tags]
                       [--virtual-network-rules]
  examples:
  - summary: |-
      Update an Azure Cosmos DB database account. (autogenerated)
    syntax: az cosmosdb update --capabilities EnableGremlin --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup
  - summary: |-
      Update an Azure Cosmos DB database account to enable materialized views.
    syntax: az cosmosdb update --name MyCosmosDBDatabaseAccount --resource-group MyResourceGroup --enable-materialized-views true
  optionalParameters:
  - name: --analytical-storage-schema-type --as-schema
    parameterValueGroup: "FullFidelity, WellDefined"
    summary: |-
      Schema type for analytical storage.
  - name: --backup-interval
    summary: |-
      The frequency(in minutes) with which backups are taken (only for accounts with periodic mode backups).
  - name: --backup-policy-type
    parameterValueGroup: "Continuous, Periodic"
    summary: |-
      The type of backup policy of the account to create.
  - name: --backup-redundancy
    parameterValueGroup: "Geo, Local, Zone"
    summary: |-
      The redundancy type of the backup Storage account.
  - name: --backup-retention
    summary: |-
      The time(in hours) for which each backup is retained (only for accounts with periodic mode backups).
  - name: --capabilities
    summary: |-
      Set custom capabilities on the Cosmos DB database account.
  - name: --continuous-tier
    parameterValueGroup: "Continuous30Days, Continuous7Days"
    summary: |-
      The tier of Continuous backup.
  - name: --default-consistency-level
    parameterValueGroup: "BoundedStaleness, ConsistentPrefix, Eventual, Session, Strong"
    summary: |-
      Default consistency level of the Cosmos DB database account.
  - name: --default-identity
    summary: |-
      The primary identity to access key vault in CMK related features. e.g. 'FirstPartyIdentity', 'SystemAssignedIdentity' and more.
  - name: --default-priority-level
    parameterValueGroup: "High, Low"
    summary: |-
      Default Priority Level of Request if not specified.
    isPreview: true
  - name: --disable-key-based-metadata-write-access
    parameterValueGroup: "false, true"
    summary: |-
      Disable write operations on metadata resources (databases, containers, throughput) via account keys.
  - name: --enable-analytical-storage
    parameterValueGroup: "false, true"
    summary: |-
      Flag to enable log storage on the account.
  - name: --enable-automatic-failover
    parameterValueGroup: "false, true"
    summary: |-
      Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.
  - name: --enable-burst-capacity
    parameterValueGroup: "false, true"
    summary: |-
      Flag to enable burst capacity on the account.
    isPreview: true
  - name: --enable-materialized-views --enable-mv
    parameterValueGroup: "false, true"
    summary: |-
      Flag to enable MaterializedViews on the account.
    isPreview: true
  - name: --enable-multiple-write-locations
    parameterValueGroup: "false, true"
    summary: |-
      Enable Multiple Write Locations.
  - name: --enable-pbe --enable-priority-based-execution
    parameterValueGroup: "false, true"
    summary: |-
      Flag to enable priority based execution on the account.
    isPreview: true
  - name: --enable-public-network -e
    parameterValueGroup: "false, true"
    summary: |-
      Enable or disable public network access to server.
  - name: --enable-virtual-network
    parameterValueGroup: "false, true"
    summary: |-
      Enables virtual network on the Cosmos DB database account.
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --ip-range-filter
    summary: |-
      Firewall support. Specifies the set of IP addresses or IP address ranges in CIDR form to be included as the allowed list of client IPs for a given database account. IP addresses/ranges must be comma-separated and must not contain any spaces.
  - name: --locations
    summary: |-
      Add a location to the Cosmos DB database account.
    description: |-
      Usage:          --locations KEY=VALUE [KEY=VALUE ...]
      Required Keys:  regionName, failoverPriority
      Optional Key:   isZoneRedundant
      Default:        single region account in the location of the specified resource group.
      Failover priority values are 0 for write regions and greater than 0 for read regions. A failover priority value must be unique and less than the total number of regions.
      Multiple locations can be specified by using more than one `--locations` argument.
  - name: --max-interval
    summary: |-
      When used with Bounded Staleness consistency, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 1 - 100.
  - name: --max-staleness-prefix
    summary: |-
      When used with Bounded Staleness consistency, this value represents the number of stale requests tolerated. Accepted range for this value is 1 - 2,147,483,647.
  - name: --name -n
    summary: |-
      Name of the Cosmos DB database account.
  - name: --network-acl-bypass
    parameterValueGroup: "AzureServices, None"
    summary: |-
      Flag to enable or disable Network Acl Bypass.
  - name: --network-acl-bypass-resource-ids -i
    summary: |-
      List of Resource Ids to allow Network Acl Bypass.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --server-version
    parameterValueGroup: "3.2, 3.6, 4.0, 4.2"
    summary: |-
      Valid only for MongoDB accounts.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --tags
    summary: |-
      Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags.
  - name: --virtual-network-rules
    summary: |-
      ACL's for virtual network.
commands:
- az_cosmosdb_cassandra
- az_cosmosdb_cassandra_keyspace
- az_cosmosdb_cassandra_keyspace_create
- az_cosmosdb_cassandra_keyspace_delete
- az_cosmosdb_cassandra_keyspace_exists
- az_cosmosdb_cassandra_keyspace_list
- az_cosmosdb_cassandra_keyspace_show
- az_cosmosdb_cassandra_keyspace_throughput
- az_cosmosdb_cassandra_keyspace_throughput_migrate
- az_cosmosdb_cassandra_keyspace_throughput_show
- az_cosmosdb_cassandra_keyspace_throughput_update
- az_cosmosdb_cassandra_table
- az_cosmosdb_cassandra_table_create
- az_cosmosdb_cassandra_table_delete
- az_cosmosdb_cassandra_table_exists
- az_cosmosdb_cassandra_table_list
- az_cosmosdb_cassandra_table_show
- az_cosmosdb_cassandra_table_throughput
- az_cosmosdb_cassandra_table_throughput_migrate
- az_cosmosdb_cassandra_table_throughput_show
- az_cosmosdb_cassandra_table_throughput_update
- az_cosmosdb_cassandra_table_update
- az_cosmosdb_check-name-exists
- az_cosmosdb_collection
- az_cosmosdb_collection_create
- az_cosmosdb_collection_delete
- az_cosmosdb_collection_exists
- az_cosmosdb_collection_list
- az_cosmosdb_collection_show
- az_cosmosdb_collection_update
- az_cosmosdb_copy
- az_cosmosdb_copy_cancel
- az_cosmosdb_copy_create
- az_cosmosdb_copy_list
- az_cosmosdb_copy_pause
- az_cosmosdb_copy_resume
- az_cosmosdb_copy_show
- az_cosmosdb_create
- az_cosmosdb_create(cosmosdb-preview)
- az_cosmosdb_database
- az_cosmosdb_database_create
- az_cosmosdb_database_delete
- az_cosmosdb_database_exists
- az_cosmosdb_database_list
- az_cosmosdb_database_show
- az_cosmosdb_delete
- az_cosmosdb_dts
- az_cosmosdb_dts_cancel
- az_cosmosdb_dts_copy
- az_cosmosdb_dts_list
- az_cosmosdb_dts_pause
- az_cosmosdb_dts_resume
- az_cosmosdb_dts_show
- az_cosmosdb_failover-priority-change
- az_cosmosdb_gremlin
- az_cosmosdb_gremlin_database
- az_cosmosdb_gremlin_database_create
- az_cosmosdb_gremlin_database_delete
- az_cosmosdb_gremlin_database_exists
- az_cosmosdb_gremlin_database_list
- az_cosmosdb_gremlin_database_restore
- az_cosmosdb_gremlin_database_restore(cosmosdb-preview)
- az_cosmosdb_gremlin_database_show
- az_cosmosdb_gremlin_database_throughput
- az_cosmosdb_gremlin_database_throughput_migrate
- az_cosmosdb_gremlin_database_throughput_show
- az_cosmosdb_gremlin_database_throughput_update
- az_cosmosdb_gremlin_graph
- az_cosmosdb_gremlin_graph_create
- az_cosmosdb_gremlin_graph_delete
- az_cosmosdb_gremlin_graph_exists
- az_cosmosdb_gremlin_graph_list
- az_cosmosdb_gremlin_graph_restore
- az_cosmosdb_gremlin_graph_restore(cosmosdb-preview)
- az_cosmosdb_gremlin_graph_show
- az_cosmosdb_gremlin_graph_throughput
- az_cosmosdb_gremlin_graph_throughput_migrate
- az_cosmosdb_gremlin_graph_throughput_show
- az_cosmosdb_gremlin_graph_throughput_update
- az_cosmosdb_gremlin_graph_update
- az_cosmosdb_gremlin_restorable-database
- az_cosmosdb_gremlin_restorable-database_list
- az_cosmosdb_gremlin_restorable-database_list(cosmosdb-preview)
- az_cosmosdb_gremlin_restorable-graph
- az_cosmosdb_gremlin_restorable-graph_list
- az_cosmosdb_gremlin_restorable-graph_list(cosmosdb-preview)
- az_cosmosdb_gremlin_restorable-resource
- az_cosmosdb_gremlin_restorable-resource_list
- az_cosmosdb_gremlin_restorable-resource_list(cosmosdb-preview)
- az_cosmosdb_gremlin_retrieve-latest-backup-time
- az_cosmosdb_gremlin_retrieve-latest-backup-time(cosmosdb-preview)
- az_cosmosdb_identity
- az_cosmosdb_identity_assign
- az_cosmosdb_identity_remove
- az_cosmosdb_identity_show
- az_cosmosdb_keys
- az_cosmosdb_keys_list
- az_cosmosdb_keys_regenerate
- az_cosmosdb_list
- az_cosmosdb_list(cosmosdb-preview)
- az_cosmosdb_list-connection-strings
- az_cosmosdb_list-keys
- az_cosmosdb_list-read-only-keys
- az_cosmosdb_locations
- az_cosmosdb_locations_list
- az_cosmosdb_locations_show
- az_cosmosdb_mongocluster
- az_cosmosdb_mongocluster_create
- az_cosmosdb_mongocluster_delete
- az_cosmosdb_mongocluster_firewall
- az_cosmosdb_mongocluster_firewall_rule
- az_cosmosdb_mongocluster_firewall_rule_create
- az_cosmosdb_mongocluster_firewall_rule_delete
- az_cosmosdb_mongocluster_firewall_rule_list
- az_cosmosdb_mongocluster_firewall_rule_show
- az_cosmosdb_mongocluster_firewall_rule_update
- az_cosmosdb_mongocluster_list
- az_cosmosdb_mongocluster_show
- az_cosmosdb_mongocluster_update
- az_cosmosdb_mongodb
- az_cosmosdb_mongodb_collection
- az_cosmosdb_mongodb_collection_create
- az_cosmosdb_mongodb_collection_delete
- az_cosmosdb_mongodb_collection_exists
- az_cosmosdb_mongodb_collection_list
- az_cosmosdb_mongodb_collection_merge
- az_cosmosdb_mongodb_collection_redistribute-partition-throughput
- az_cosmosdb_mongodb_collection_restore
- az_cosmosdb_mongodb_collection_restore(cosmosdb-preview)
- az_cosmosdb_mongodb_collection_retrieve-partition-throughput
- az_cosmosdb_mongodb_collection_show
- az_cosmosdb_mongodb_collection_throughput
- az_cosmosdb_mongodb_collection_throughput_migrate
- az_cosmosdb_mongodb_collection_throughput_show
- az_cosmosdb_mongodb_collection_throughput_update
- az_cosmosdb_mongodb_collection_update
- az_cosmosdb_mongodb_database
- az_cosmosdb_mongodb_database_create
- az_cosmosdb_mongodb_database_delete
- az_cosmosdb_mongodb_database_exists
- az_cosmosdb_mongodb_database_list
- az_cosmosdb_mongodb_database_merge
- az_cosmosdb_mongodb_database_restore
- az_cosmosdb_mongodb_database_restore(cosmosdb-preview)
- az_cosmosdb_mongodb_database_show
- az_cosmosdb_mongodb_database_throughput
- az_cosmosdb_mongodb_database_throughput_migrate
- az_cosmosdb_mongodb_database_throughput_show
- az_cosmosdb_mongodb_database_throughput_update
- az_cosmosdb_mongodb_restorable-collection
- az_cosmosdb_mongodb_restorable-collection_list
- az_cosmosdb_mongodb_restorable-collection_list(cosmosdb-preview)
- az_cosmosdb_mongodb_restorable-database
- az_cosmosdb_mongodb_restorable-database_list
- az_cosmosdb_mongodb_restorable-resource
- az_cosmosdb_mongodb_restorable-resource_list
- az_cosmosdb_mongodb_retrieve-latest-backup-time
- az_cosmosdb_mongodb_role
- az_cosmosdb_mongodb_role_definition
- az_cosmosdb_mongodb_role_definition_create
- az_cosmosdb_mongodb_role_definition_create(cosmosdb-preview)
- az_cosmosdb_mongodb_role_definition_delete
- az_cosmosdb_mongodb_role_definition_delete(cosmosdb-preview)
- az_cosmosdb_mongodb_role_definition_exists
- az_cosmosdb_mongodb_role_definition_exists(cosmosdb-preview)
- az_cosmosdb_mongodb_role_definition_list
- az_cosmosdb_mongodb_role_definition_list(cosmosdb-preview)
- az_cosmosdb_mongodb_role_definition_show
- az_cosmosdb_mongodb_role_definition_show(cosmosdb-preview)
- az_cosmosdb_mongodb_role_definition_update
- az_cosmosdb_mongodb_role_definition_update(cosmosdb-preview)
- az_cosmosdb_mongodb_user
- az_cosmosdb_mongodb_user_definition
- az_cosmosdb_mongodb_user_definition_create
- az_cosmosdb_mongodb_user_definition_create(cosmosdb-preview)
- az_cosmosdb_mongodb_user_definition_delete
- az_cosmosdb_mongodb_user_definition_delete(cosmosdb-preview)
- az_cosmosdb_mongodb_user_definition_exists
- az_cosmosdb_mongodb_user_definition_exists(cosmosdb-preview)
- az_cosmosdb_mongodb_user_definition_list
- az_cosmosdb_mongodb_user_definition_list(cosmosdb-preview)
- az_cosmosdb_mongodb_user_definition_show
- az_cosmosdb_mongodb_user_definition_show(cosmosdb-preview)
- az_cosmosdb_mongodb_user_definition_update
- az_cosmosdb_mongodb_user_definition_update(cosmosdb-preview)
- az_cosmosdb_network-rule
- az_cosmosdb_network-rule_add
- az_cosmosdb_network-rule_list
- az_cosmosdb_network-rule_remove
- az_cosmosdb_postgres
- az_cosmosdb_postgres_check-name-availability
- az_cosmosdb_postgres_cluster
- az_cosmosdb_postgres_cluster_create
- az_cosmosdb_postgres_cluster_delete
- az_cosmosdb_postgres_cluster_list
- az_cosmosdb_postgres_cluster_promote
- az_cosmosdb_postgres_cluster_restart
- az_cosmosdb_postgres_cluster_server
- az_cosmosdb_postgres_cluster_server_list
- az_cosmosdb_postgres_cluster_server_show
- az_cosmosdb_postgres_cluster_show
- az_cosmosdb_postgres_cluster_start
- az_cosmosdb_postgres_cluster_stop
- az_cosmosdb_postgres_cluster_update
- az_cosmosdb_postgres_cluster_wait
- az_cosmosdb_postgres_configuration
- az_cosmosdb_postgres_configuration_coordinator
- az_cosmosdb_postgres_configuration_coordinator_show
- az_cosmosdb_postgres_configuration_coordinator_update
- az_cosmosdb_postgres_configuration_coordinator_wait
- az_cosmosdb_postgres_configuration_list
- az_cosmosdb_postgres_configuration_node
- az_cosmosdb_postgres_configuration_node_show
- az_cosmosdb_postgres_configuration_node_update
- az_cosmosdb_postgres_configuration_node_wait
- az_cosmosdb_postgres_configuration_server
- az_cosmosdb_postgres_configuration_server_list
- az_cosmosdb_postgres_configuration_show
- az_cosmosdb_postgres_firewall-rule
- az_cosmosdb_postgres_firewall-rule_create
- az_cosmosdb_postgres_firewall-rule_delete
- az_cosmosdb_postgres_firewall-rule_list
- az_cosmosdb_postgres_firewall-rule_show
- az_cosmosdb_postgres_firewall-rule_update
- az_cosmosdb_postgres_firewall-rule_wait
- az_cosmosdb_postgres_role
- az_cosmosdb_postgres_role_create
- az_cosmosdb_postgres_role_delete
- az_cosmosdb_postgres_role_list
- az_cosmosdb_postgres_role_show
- az_cosmosdb_postgres_role_update
- az_cosmosdb_postgres_role_wait
- az_cosmosdb_private-endpoint-connection
- az_cosmosdb_private-endpoint-connection_approve
- az_cosmosdb_private-endpoint-connection_delete
- az_cosmosdb_private-endpoint-connection_reject
- az_cosmosdb_private-endpoint-connection_show
- az_cosmosdb_private-link-resource
- az_cosmosdb_private-link-resource_list
- az_cosmosdb_regenerate-key
- az_cosmosdb_restorable-database-account
- az_cosmosdb_restorable-database-account_list
- az_cosmosdb_restorable-database-account_list(cosmosdb-preview)
- az_cosmosdb_restorable-database-account_show
- az_cosmosdb_restorable-database-account_show(cosmosdb-preview)
- az_cosmosdb_restore
- az_cosmosdb_restore(cosmosdb-preview)
- az_cosmosdb_service
- az_cosmosdb_service_create
- az_cosmosdb_service_create(cosmosdb-preview)
- az_cosmosdb_service_delete
- az_cosmosdb_service_delete(cosmosdb-preview)
- az_cosmosdb_service_list
- az_cosmosdb_service_list(cosmosdb-preview)
- az_cosmosdb_service_show
- az_cosmosdb_service_show(cosmosdb-preview)
- az_cosmosdb_service_update
- az_cosmosdb_service_update(cosmosdb-preview)
- az_cosmosdb_show
- az_cosmosdb_show(cosmosdb-preview)
- az_cosmosdb_sql
- az_cosmosdb_sql_container
- az_cosmosdb_sql_container_create
- az_cosmosdb_sql_container_create(cosmosdb-preview)
- az_cosmosdb_sql_container_delete
- az_cosmosdb_sql_container_exists
- az_cosmosdb_sql_container_list
- az_cosmosdb_sql_container_merge
- az_cosmosdb_sql_container_redistribute-partition-throughput
- az_cosmosdb_sql_container_restore
- az_cosmosdb_sql_container_restore(cosmosdb-preview)
- az_cosmosdb_sql_container_retrieve-partition-throughput
- az_cosmosdb_sql_container_show
- az_cosmosdb_sql_container_throughput
- az_cosmosdb_sql_container_throughput_migrate
- az_cosmosdb_sql_container_throughput_show
- az_cosmosdb_sql_container_throughput_update
- az_cosmosdb_sql_container_update
- az_cosmosdb_sql_container_update(cosmosdb-preview)
- az_cosmosdb_sql_database
- az_cosmosdb_sql_database_create
- az_cosmosdb_sql_database_delete
- az_cosmosdb_sql_database_exists
- az_cosmosdb_sql_database_list
- az_cosmosdb_sql_database_merge
- az_cosmosdb_sql_database_restore
- az_cosmosdb_sql_database_restore(cosmosdb-preview)
- az_cosmosdb_sql_database_show
- az_cosmosdb_sql_database_throughput
- az_cosmosdb_sql_database_throughput_migrate
- az_cosmosdb_sql_database_throughput_show
- az_cosmosdb_sql_database_throughput_update
- az_cosmosdb_sql_restorable-container
- az_cosmosdb_sql_restorable-container_list
- az_cosmosdb_sql_restorable-container_list(cosmosdb-preview)
- az_cosmosdb_sql_restorable-database
- az_cosmosdb_sql_restorable-database_list
- az_cosmosdb_sql_restorable-resource
- az_cosmosdb_sql_restorable-resource_list
- az_cosmosdb_sql_retrieve-latest-backup-time
- az_cosmosdb_sql_role
- az_cosmosdb_sql_role_assignment
- az_cosmosdb_sql_role_assignment_create
- az_cosmosdb_sql_role_assignment_delete
- az_cosmosdb_sql_role_assignment_exists
- az_cosmosdb_sql_role_assignment_list
- az_cosmosdb_sql_role_assignment_show
- az_cosmosdb_sql_role_assignment_update
- az_cosmosdb_sql_role_assignment_wait
- az_cosmosdb_sql_role_definition
- az_cosmosdb_sql_role_definition_create
- az_cosmosdb_sql_role_definition_delete
- az_cosmosdb_sql_role_definition_exists
- az_cosmosdb_sql_role_definition_list
- az_cosmosdb_sql_role_definition_show
- az_cosmosdb_sql_role_definition_update
- az_cosmosdb_sql_role_definition_wait
- az_cosmosdb_sql_stored-procedure
- az_cosmosdb_sql_stored-procedure_create
- az_cosmosdb_sql_stored-procedure_delete
- az_cosmosdb_sql_stored-procedure_list
- az_cosmosdb_sql_stored-procedure_show
- az_cosmosdb_sql_stored-procedure_update
- az_cosmosdb_sql_trigger
- az_cosmosdb_sql_trigger_create
- az_cosmosdb_sql_trigger_delete
- az_cosmosdb_sql_trigger_list
- az_cosmosdb_sql_trigger_show
- az_cosmosdb_sql_trigger_update
- az_cosmosdb_sql_user-defined-function
- az_cosmosdb_sql_user-defined-function_create
- az_cosmosdb_sql_user-defined-function_delete
- az_cosmosdb_sql_user-defined-function_list
- az_cosmosdb_sql_user-defined-function_show
- az_cosmosdb_sql_user-defined-function_update
- az_cosmosdb_table
- az_cosmosdb_table_create
- az_cosmosdb_table_delete
- az_cosmosdb_table_exists
- az_cosmosdb_table_list
- az_cosmosdb_table_restorable-resource
- az_cosmosdb_table_restorable-resource_list
- az_cosmosdb_table_restorable-resource_list(cosmosdb-preview)
- az_cosmosdb_table_restorable-table
- az_cosmosdb_table_restorable-table_list
- az_cosmosdb_table_restorable-table_list(cosmosdb-preview)
- az_cosmosdb_table_restore
- az_cosmosdb_table_restore(cosmosdb-preview)
- az_cosmosdb_table_retrieve-latest-backup-time
- az_cosmosdb_table_retrieve-latest-backup-time(cosmosdb-preview)
- az_cosmosdb_table_show
- az_cosmosdb_table_throughput
- az_cosmosdb_table_throughput_migrate
- az_cosmosdb_table_throughput_show
- az_cosmosdb_table_throughput_update
- az_cosmosdb_update
- az_cosmosdb_update(cosmosdb-preview)
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: Manage Azure Cosmos DB database accounts.
