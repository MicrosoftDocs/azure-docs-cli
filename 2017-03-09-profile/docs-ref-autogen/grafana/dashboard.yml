### YamlMime:AzureCLIGroup
uid: az_grafana_dashboard
name: az grafana dashboard
extensionInformation: >-
  > [!Note]

  > This reference is part of the **amg** extension for the Azure CLI  (version 2.38.0 or higher).  The extension will automatically install the first time you run an **az grafana dashboard** command.  [Learn more](https://docs.microsoft.com/en-us/cli/azure/azure-cli-extensions-overview) about extensions.
summary: Commands to manage dashboards of an instance.
description: ''
directCommands:
- uid: az_grafana_dashboard_create
  name: az grafana dashboard create
  summary: Create a new dashboard.
  description: ''
  syntax: >-
    az grafana dashboard create --definition
                                --name
                                [--api-key]
                                [--folder]
                                [--overwrite {false, true}]
                                [--resource-group]
                                [--title]
  examples:
  - summary: Create a dashboard with definition in a json file. For quick start, clone from the output of "az grafana dashboard show", remove "id" and "uid", and apply changes.
    syntax: >-
      az grafana dashboard create -g MyResourceGroup -n MyGrafana --title "My dashboard" --folder folder1 --definition '{
        "dashboard": {
          "annotations": {
              ...
          },
          "panels": {
              ...
          }
        },
        "message": "Create a new test dashboard"
      }'
  requiredParameters:
  - isRequired: true
    name: --definition
    summary: The complete dashboard model in json string, a path or url to a file with such content.
    description: ''
  - isRequired: true
    name: --name -n
    summary: Name of the Azure Managed Dashboard for Grafana.
    description: ''
  optionalParameters:
  - name: --api-key
    summary: Api key, a randomly generated string used to interact with Grafana endpoint; if missing, CLI will use logon user's credentials.
    description: ''
  - name: --folder
    summary: Id, uid, title which can identify a folder. CLI will search in the order of id, uid, and title, till finds a match.
    description: ''
  - name: --overwrite
    parameterValueGroup: false, true
    summary: Overwrite a dashboard with same uid.
    description: ''
  - name: --resource-group -g
    summary: Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
    description: ''
  - name: --title
    summary: Title of a dashboard.
    description: ''
- uid: az_grafana_dashboard_delete
  name: az grafana dashboard delete
  summary: Delete a dashboard.
  description: ''
  syntax: >-
    az grafana dashboard delete --dashboard
                                --name
                                [--api-key]
                                [--resource-group]
  examples:
  - summary: Delete a dashboard specified by an unique identifier(use "az grafana dashboard list" command to retrieve the uid)
    syntax: az grafana dashboard delete -g MyResourceGroup -n MyGrafana --dashboard VdrOA7jGz
  requiredParameters:
  - isRequired: true
    name: --dashboard
    summary: Dashboard uid.
    description: ''
  - isRequired: true
    name: --name -n
    summary: Name of the Azure Managed Dashboard for Grafana.
    description: ''
  optionalParameters:
  - name: --api-key
    summary: Api key, a randomly generated string used to interact with Grafana endpoint; if missing, CLI will use logon user's credentials.
    description: ''
  - name: --resource-group -g
    summary: Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
    description: ''
- uid: az_grafana_dashboard_import
  name: az grafana dashboard import
  summary: Import a dashboard.
  description: CLI command will fill in required parameters for data sources if configured.
  syntax: >-
    az grafana dashboard import --definition
                                --name
                                [--api-key]
                                [--folder]
                                [--overwrite {false, true}]
                                [--resource-group]
  examples:
  - summary: import the dashboard of "AKS Container Insights" from Grafana gallery.
    syntax: az grafana dashboard import -g MyResourceGroup -n MyGrafana --definition 12180
  - summary: import a dashboard from a file.
    syntax: az grafana dashboard import -g MyResourceGroup -n MyGrafana --definition @c:\temp\dashboard.json
  requiredParameters:
  - isRequired: true
    name: --definition
    summary: The complete dashboard model in json string, Grafana gallery id, a path or url to a file with such content.
    description: ''
  - isRequired: true
    name: --name -n
    summary: Name of the Azure Managed Dashboard for Grafana.
    description: ''
  optionalParameters:
  - name: --api-key
    summary: Api key, a randomly generated string used to interact with Grafana endpoint; if missing, CLI will use logon user's credentials.
    description: ''
  - name: --folder
    summary: Id, uid, title which can identify a folder. CLI will search in the order of id, uid, and title, till finds a match.
    description: ''
  - name: --overwrite
    parameterValueGroup: false, true
    summary: Overwrite a dashboard with same uid.
    description: ''
  - name: --resource-group -g
    summary: Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
    description: ''
- uid: az_grafana_dashboard_list
  name: az grafana dashboard list
  summary: List all dashboards of an instance.
  description: ''
  syntax: >-
    az grafana dashboard list --name
                              [--api-key]
                              [--resource-group]
  examples:
  - summary: Find the dashboard for K8s API Server and retrieve the unique identifier(in order to invoke "az grafana dashboard show" command)
    syntax: az grafana dashboard list -g MyResourceGroup -n MyGrafana --query "[?contains(@.title, 'API server')].uid"
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: Name of the Azure Managed Dashboard for Grafana.
    description: ''
  optionalParameters:
  - name: --api-key
    summary: Api key, a randomly generated string used to interact with Grafana endpoint; if missing, CLI will use logon user's credentials.
    description: ''
  - name: --resource-group -g
    summary: Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
    description: ''
- uid: az_grafana_dashboard_show
  name: az grafana dashboard show
  summary: Show the detail of a dashboard.
  description: ''
  syntax: >-
    az grafana dashboard show --dashboard
                              --name
                              [--api-key]
                              [--resource-group]
  examples:
  - summary: Get details of a dashboard specified by an unique identifier(use "az grafana dashboard list" command to retrieve the uid)
    syntax: az grafana dashboard show -g MyResourceGroup -n MyGrafana --dashboard VdrOA7jGz
  requiredParameters:
  - isRequired: true
    name: --dashboard
    summary: Dashboard uid.
    description: ''
  - isRequired: true
    name: --name -n
    summary: Name of the Azure Managed Dashboard for Grafana.
    description: ''
  optionalParameters:
  - name: --api-key
    summary: Api key, a randomly generated string used to interact with Grafana endpoint; if missing, CLI will use logon user's credentials.
    description: ''
  - name: --resource-group -g
    summary: Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
    description: ''
- uid: az_grafana_dashboard_update
  name: az grafana dashboard update
  summary: Update a dashboard.
  description: ''
  syntax: >-
    az grafana dashboard update --definition
                                --name
                                [--api-key]
                                [--folder]
                                [--overwrite {false, true}]
                                [--resource-group]
  examples:
  - summary: Update a dashboard with definition in a json file. For quick start, get existing configuration from "az grafana dashboard show", and apply changes. "version" field need to be updated, and "overwrite" field should be true.
    syntax: az grafana dashboard update -g MyResourceGroup -n MyGrafana --definition @c:\temp\dashboard.json
  requiredParameters:
  - isRequired: true
    name: --definition
    summary: The complete dashboard model in json string, a path or url to a file with such content.
    description: ''
  - isRequired: true
    name: --name -n
    summary: Name of the Azure Managed Dashboard for Grafana.
    description: ''
  optionalParameters:
  - name: --api-key
    summary: Api key, a randomly generated string used to interact with Grafana endpoint; if missing, CLI will use logon user's credentials.
    description: ''
  - name: --folder
    summary: Id, uid, title which can identify a folder. CLI will search in the order of id, uid, and title, till finds a match.
    description: ''
  - name: --overwrite
    parameterValueGroup: false, true
    summary: Overwrite a dashboard with same uid.
    description: ''
  - name: --resource-group -g
    summary: Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
    description: ''
commands:
- az_grafana_dashboard_create
- az_grafana_dashboard_delete
- az_grafana_dashboard_import
- az_grafana_dashboard_list
- az_grafana_dashboard_show
- az_grafana_dashboard_update
globalParameters:
- name: --debug
  summary: Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: Show this help message and exit.
- name: --only-show-errors
  summary: Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: json
  parameterValueGroup: json, jsonc, table, tsv
  summary: Output format.
- name: --query
  summary: JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: Commands to manage dashboards of an instance.
