### YamlMime:AzureCLIGroup
uid: az_automation_python3-package
name: az automation python3-package
extensionInformation: >-
  > [!NOTE]

  > This reference is part of the **automation** extension for the Azure CLI (version 2.40.0 or higher). The extension will automatically install the first time you run an **az automation python3-package** command. [Learn more](https://learn.microsoft.com/cli/azure/azure-cli-extensions-overview) about extensions.
summary: |-
  Python3-package.
status: GA
sourceType: Extension
directCommands:
- uid: az_automation_python3-package_create
  name: az automation python3-package create
  summary: |-
    Create or Update the python 3 package identified by package name.
  status: GA
  sourceType: Extension
  syntax: >-
    az automation python3-package create --automation-account-name
                                         --content-link
                                         --name
                                         --resource-group
                                         [--tags]
  examples:
  - summary: |-
      Add Python3 Package to automation account
    syntax: az automation python3-package create --automation-account-name "MyAutomationAccount" --resource-group "MyResourceGroup" --name "PackageName" --content-link "uri=https://PackageUri.com"
  requiredParameters:
  - isRequired: true
    name: --automation-account-name
    summary: |-
      The name of the automation account.
  - isRequired: true
    name: --content-link
    summary: |-
      Gets or sets the module content link.  Support shorthand-syntax, json-file and yaml-file. Try "??" to show more.
  - isRequired: true
    name: --name --package-name -n
    summary: |-
      The name of python package.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  optionalParameters:
  - name: --tags
    summary: |-
      Gets or sets the tags attached to the resource.  Support shorthand-syntax, json-file and yaml-file. Try "??" to show more.
- uid: az_automation_python3-package_delete
  name: az automation python3-package delete
  summary: |-
    Delete the python 3 package by name.
  status: GA
  sourceType: Extension
  syntax: >-
    az automation python3-package delete [--automation-account-name]
                                         [--ids]
                                         [--name]
                                         [--resource-group]
                                         [--subscription]
                                         [--yes]
  examples:
  - summary: |-
      Delete Python3 Package by Name
    syntax: az automation python3-package delete --automation-account-name "MyAutomationAccount" --resource-group "MyResourceGroup" --name "PackageName"
  optionalParameters:
  - name: --automation-account-name
    summary: |-
      The name of the automation account.
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name --package-name -n
    summary: |-
      The python package name.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --yes -y
    defaultValue: "False"
    summary: |-
      Do not prompt for confirmation.
- uid: az_automation_python3-package_list
  name: az automation python3-package list
  summary: |-
    Retrieve a list of python 3 packages.
  status: GA
  sourceType: Extension
  syntax: >-
    az automation python3-package list --automation-account-name
                                       --resource-group
  examples:
  - summary: |-
      List all Custom Python3Package in AutomationAccount
    syntax: az automation python3-package list --automation-account-name "MyAutomationAccount" --resource-group "MyResourceGroup"
  requiredParameters:
  - isRequired: true
    name: --automation-account-name
    summary: |-
      The name of the automation account.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_automation_python3-package_show
  name: az automation python3-package show
  summary: |-
    Retrieve the python 3 package identified by package name.
  status: GA
  sourceType: Extension
  syntax: >-
    az automation python3-package show [--automation-account-name]
                                       [--ids]
                                       [--name]
                                       [--resource-group]
                                       [--subscription]
  examples:
  - summary: |-
      Get Python3Package by Name
    syntax: az automation python3-package show --automation-account-name "MyAutomationAccount" --resource-group "MyResourceGroup" --name "PackageName"
  optionalParameters:
  - name: --automation-account-name
    summary: |-
      The name of the automation account.
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name --package-name -n
    summary: |-
      The python package name.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_automation_python3-package_update
  name: az automation python3-package update
  summary: |-
    Create or Update the python 3 package identified by package name.
  status: GA
  sourceType: Extension
  syntax: >-
    az automation python3-package update [--add]
                                         [--automation-account-name]
                                         [--content-link]
                                         [--force-string {0, 1, f, false, n, no, t, true, y, yes}]
                                         [--ids]
                                         [--name]
                                         [--remove]
                                         [--resource-group]
                                         [--set]
                                         [--subscription]
                                         [--tags]
  examples:
  - summary: |-
      Update Python3Package by Name
    syntax: az automation python3-package update --automation-account-name "MyAutomationAccount" --resource-group "MyResourceGroup" --name "PackageName" --content-link "uri=https://PackageUri.com"
  optionalParameters:
  - name: --add
    summary: |-
      Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>.
  - name: --automation-account-name
    summary: |-
      The name of the automation account.
  - name: --content-link
    summary: |-
      Gets or sets the module content link.  Support shorthand-syntax, json-file and yaml-file. Try "??" to show more.
  - name: --force-string
    parameterValueGroup: "0, 1, f, false, n, no, t, true, y, yes"
    summary: |-
      When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name --package-name -n
    summary: |-
      The python package name.
  - name: --remove
    summary: |-
      Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --set
    summary: |-
      Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --tags
    summary: |-
      Gets or sets the tags attached to the resource.  Support shorthand-syntax, json-file and yaml-file. Try "??" to show more.
commands:
- az_automation_python3-package_create
- az_automation_python3-package_delete
- az_automation_python3-package_list
- az_automation_python3-package_show
- az_automation_python3-package_update
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: Python3-package.
