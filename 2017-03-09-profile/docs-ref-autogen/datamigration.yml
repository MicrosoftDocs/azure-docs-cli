### YamlMime:AzureCLIGroup
uid: az_datamigration
name: az datamigration
extensionInformation: >-
  > [!NOTE]

  > This reference is part of the **datamigration** extension for the Azure CLI (version 2.15.0 or higher). The extension will automatically install the first time you run an **az datamigration** command. [Learn more](https://learn.microsoft.com/cli/azure/azure-cli-extensions-overview) about extensions.
summary: |-
  Manage Data Migration.
status: GA
sourceType: Extension
directCommands:
- uid: az_datamigration_get-assessment
  name: az datamigration get-assessment
  summary: |-
    Start assessment on SQL Server instance(s).
  status: GA
  sourceType: Extension
  syntax: >-
    az datamigration get-assessment [--config-file-path]
                                    [--connection-string]
                                    [--output-folder]
                                    [--overwrite]
  examples:
  - summary: |-
      Run SQL Assessment on given SQL Server using connection string.
    syntax: az datamigration get-assessment --connection-string "Data Source=LabServer.database.net;Initial Catalog=master;Integrated Security=False;User Id=User;Password=password" --output-folder "C:\AssessmentOutput" --overwrite
  - summary: |-
      Run SQL Assessment on given SQL Server using assessment config file.
    syntax: az datamigration get-assessment --config-file-path "C:\Users\user\document\config.json"
  - summary: |-
      Run SQL Assessment on multiple SQL Servers in one call using connection string.
    syntax: az datamigration get-assessment --connection-string "Data Source=LabServer1.database.net;Initial Catalog=master;Integrated Security=False;User Id=User;Password=password" "Data Source=LabServer2.database.net;Initial Catalog=master;Integrated Security=False;User Id=User;Password=password" --output-folder "C:\AssessmentOutput" --overwrite
  optionalParameters:
  - name: --config-file-path
    summary: |-
      Path of the ConfigFile.
  - name: --connection-string
    summary: |-
      SQL Server Connection Strings.
  - name: --output-folder
    summary: |-
      Output folder to store assessment report.
  - name: --overwrite
    defaultValue: "False"
    summary: |-
      Enable this parameter to overwrite the existing assessment report.
- uid: az_datamigration_get-sku-recommendation
  name: az datamigration get-sku-recommendation
  summary: |-
    Give SKU recommendations for Azure SQL offerings.
  status: GA
  sourceType: Extension
  syntax: >-
    az datamigration get-sku-recommendation [--config-file-path]
                                            [--database-allow-list]
                                            [--database-deny-list]
                                            [--display-result]
                                            [--elastic-strategy]
                                            [--end-time]
                                            [--output-folder]
                                            [--overwrite]
                                            [--scaling-factor]
                                            [--start-time]
                                            [--target-percentile]
                                            [--target-platform]
                                            [--target-sql-instance]
  examples:
  - summary: |-
      Get SKU recommendation for given SQL Server using command line.
    syntax: az datamigration get-sku-recommendation --output-folder "C:\PerfCollectionOutput" --database-allow-list AdventureWorks1 AdventureWorks2 --display-result --overwrite
  - summary: |-
      Get SKU recommendation for given SQL Server using assessment config file.
    syntax: az datamigration get-sku-recommendation --config-file-path "C:\Users\user\document\config.json"
  optionalParameters:
  - name: --config-file-path
    summary: |-
      Path of the ConfigFile.
  - name: --database-allow-list
    summary: |-
      Space separated list of names of databases to be allowed for SKU recommendation consideration while excluding all others. Only set one of the following or neither: databaseAllowList, databaseDenyList. Default: null.
  - name: --database-deny-list
    summary: |-
      Space separated list of names of databases to not be considered for SKU recommendation. Only set one of the following or neither: databaseAllowList, databaseDenyList. Default: null.
  - name: --display-result
    defaultValue: "False"
    summary: |-
      Whether or not to print the SKU recommendation results to the console. Enable this parameter to display result.
  - name: --elastic-strategy
    defaultValue: "False"
    summary: |-
      Whether or not to use the elastic strategy for SKU recommendations based on resource usage profiling. Enable this parameter to use elastic strategy.
  - name: --end-time
    summary: |-
      UTC end time of performance data points to consider during aggregation, in YYYY-MM-DD HH:MM format. Only used for baseline (non-elastic) strategy. Default: all data points collected will be considered.
  - name: --output-folder
    summary: |-
      Output folder where performance data of the SQL Server is stored. The value here must be the same as the one used in PerfDataCollection.
  - name: --overwrite
    defaultValue: "False"
    summary: |-
      Whether or not to overwrite any existing SKU recommendation reports. Enable this paramater to overwrite.
  - name: --scaling-factor
    defaultValue: "100"
    summary: |-
      Scaling (comfort) factor used during SKU recommendation. For example, if it is determined that there is a 4 vCore CPU requirement with a scaling factor of 150%, then the true CPU requirement will be 6 vCores.
  - name: --start-time
    summary: |-
      UTC start time of performance data points to consider during aggregation, in YYYY-MM-DD HH:MM format. Only used for baseline (non-elastic) strategy. Default: all data points collected will be considered.
  - name: --target-percentile
    defaultValue: "95"
    summary: |-
      Percentile of data points to be used during aggregation of the performance data. Only used for baseline (non-elastic) strategy.
  - name: --target-platform
    defaultValue: "Any"
    summary: |-
      Target platform for SKU recommendation: either AzureSqlDatabase, AzureSqlManagedInstance, AzureSqlVirtualMachine, or Any. If Any is selected, then SKU recommendations for all three target platforms will be evaluated, and the best fit will be returned.
  - name: --target-sql-instance
    summary: |-
      Name of the SQL instance for which SKU should be recommendeded. Default: outputFolder will be scanned for files created by the PerfDataCollection action, and recommendations will be provided for every instance found.
- uid: az_datamigration_login-migration
  name: az datamigration login-migration
  summary: |-
    Migrate logins from the source Sql Servers to the target Azure Sql Servers.
  status: GA
  sourceType: Extension
  syntax: >-
    az datamigration login-migration [--aad-domain-name]
                                     [--config-file-path]
                                     [--csv-file-path]
                                     [--list-of-login]
                                     [--output-folder]
                                     [--src-sql-connection-str]
                                     [--tgt-sql-connection-str]
  examples:
  - summary: |-
      Run Migrate logins from the source Sql Servers to the target Azure Sql Servers using Parameters.
    syntax: az datamigration login-migration --src-sql-connection-str  "data source=servername;user id=userid;password=;initial catalog=master;TrustServerCertificate=True" --tgt-sql-connection-str  "data source=servername;user id=userid;password=;initial catalog=master;TrustServerCertificate=True" --csv-file-path "C:\CSVFile" --list-of-login "loginname1" "loginname2" --output-folder "C:\OutputFolder" --aad-domain-name "AADDomainName"
  - summary: |-
      Run Migrate logins from the source Sql Servers to the target Azure Sql Servers using config file.
    syntax: az datamigration login-migration --config-file-path "C:\Users\user\document\config.json"
  optionalParameters:
  - name: --aad-domain-name
    summary: |-
      Required if Windows logins are included in the list of logins to be migrated.
  - name: --config-file-path
    summary: |-
      Path of the ConfigFile.
  - name: --csv-file-path
    summary: |-
      Location of CSV file of logins. Use only one parameter between this and listOfLogin.
  - name: --list-of-login
    summary: |-
      List of logins in string format. If large number of logins need to be migrated, use CSV file option.
  - name: --output-folder
    summary: |-
      Default: %LocalAppData%/Microsoft/SqlLoginMigrations) Folder where logs will be written.
  - name: --src-sql-connection-str
    summary: |-
      Connection string(s) for the source SQL instance(s), using the formal connection string format.
  - name: --tgt-sql-connection-str
    summary: |-
      Connection string(s) for the target SQL instance(s), using the formal connection string format.
- uid: az_datamigration_performance-data-collection
  name: az datamigration performance-data-collection
  summary: |-
    Collect performance data for given SQL Server instance(s).
  status: GA
  sourceType: Extension
  syntax: >-
    az datamigration performance-data-collection [--config-file-path]
                                                 [--connection-string]
                                                 [--number-of-iteration]
                                                 [--output-folder]
                                                 [--perf-query-interval]
                                                 [--static-query-interval]
                                                 [--time]
  examples:
  - summary: |-
      Collect performance data of a given SQL Server using connection string.
    syntax: az datamigration performance-data-collection --connection-string "Data Source=LabServer.database.net;Initial Catalog=master;Integrated Security=False;User Id=User;Password=password" --output-folder "C:\PerfCollectionOutput" --number-of-iteration 5 --perf-query-interval 10 --static-query-interval 60
  - summary: |-
      Collect performance data of multiple SQL Servers in one call using connection string.
    syntax: az datamigration performance-data-collection --connection-string "Data Source=LabServer1.database.net;Initial Catalog=master;Integrated Security=False;User Id=User;Password=password" "Data Source=LabServer2.database.net;Initial Catalog=master;Integrated Security=False;User Id=User;Password=password" --output-folder "C:\PerfCollectionOutput" --number-of-iteration 5 --perf-query-interval 10 --static-query-interval 60
  - summary: |-
      Collect performance data of a given SQL Server using assessment config file.
    syntax: az datamigration performance-data-collection --config-file-path "C:\Users\user\document\config.json"
  - summary: |-
      Collect performance data of a given SQL Server by specifying a time limit. If the time limit specified is before the complition of a iteration cycle, the process will end without saving the last cycle performance data.
    syntax: az datamigration performance-data-collection --connection-string "Data Source=LabServer.database.net;Initial Catalog=master;Integrated Security=False;User Id=User;Password=password" --output-folder "C:\PerfCollectionOutput" --number-of-iteration 5 --perf-query-interval 10 --static-query-interval 60 --time 60
  optionalParameters:
  - name: --config-file-path
    summary: |-
      Path of the ConfigFile.
  - name: --connection-string
    summary: |-
      SQL Server Connection Strings.
  - name: --number-of-iteration
    defaultValue: "20"
    summary: |-
      Number of iterations of performance data collection to perform before persisting to file. For example, with default values, performance data will be persisted every 30 seconds * 20 iterations = 10 minutes. Minimum: 2.
  - name: --output-folder
    summary: |-
      Output folder to store performance data.
  - name: --perf-query-interval
    defaultValue: "30"
    summary: |-
      Interval at which to query performance data, in seconds.
  - name: --static-query-interval
    defaultValue: "3600"
    summary: |-
      Interval at which to query and persist static configuration data, in seconds.
  - name: --time
    summary: |-
      Time after which the command execution automatically stops, in seconds. If this parameter is not specified manual intervention will be required to stop the command execution.
- uid: az_datamigration_register-integration-runtime
  name: az datamigration register-integration-runtime
  summary: |-
    Register Database Migration Service on Integration Runtime.
  status: GA
  sourceType: Extension
  syntax: >-
    az datamigration register-integration-runtime --auth-key
                                                  [--installed-ir-path]
                                                  [--ir-path]
  examples:
  - summary: |-
      Register Sql Migration Service on Self Hosted Integration Runtime.
    syntax: az datamigration register-integration-runtime --auth-key "IR@00000-0000000-000000-aaaaa-bbbb-cccc"
  - summary: |-
      Install Integration Runtime and register a Sql Migration Service on it.
    syntax: az datamigration register-integration-runtime --auth-key "IR@00000-0000000-000000-aaaaa-bbbb-cccc" --ir-path "C:\Users\user\Downloads\IntegrationRuntime.msi"
  - summary: |-
      Read the Integration Runtime from given installation location.
    syntax: az datamigration register-integration-runtime --auth-key "IR@00000-0000000-000000-aaaaa-bbbb-cccc" --installed-ir-path "D:\My Softwares\Microsoft Integration Runtime\5.0"
  requiredParameters:
  - isRequired: true
    name: --auth-key
    summary: |-
      AuthKey of SQL Migration Service.
  optionalParameters:
  - name: --installed-ir-path
    summary: |-
      Version folder path in the Integration Runtime installed location. This can be provided when IR is installed but the command is failing to read it. Format: "<Parent-folder-path>\Microsoft Integration Runtime\<Version>".
  - name: --ir-path
    summary: |-
      Path of Integration Runtime MSI.
- uid: az_datamigration_sql-server-schema
  name: az datamigration sql-server-schema
  summary: |-
    Migrate schema from the source Sql Servers to the target Azure Sql Servers.
  status: GA
  sourceType: Extension
  syntax: >-
    az datamigration sql-server-schema [--action {DeploySchema, GenerateScript, MigrateSchema}]
                                       [--config-file-path]
                                       [--input-script-file-path]
                                       [--output-folder]
                                       [--src-sql-connection-str]
                                       [--tgt-sql-connection-str]
  examples:
  - summary: |-
      Run Migrate database objects from the source SQL Server to the target Azure SQL Database using Parameters.
    syntax: az datamigration sql-server-schema --action "MigrateSchema" --src-sql-connection-str "Server=;Initial Catalog=;User ID=;Password=" --tgt-sql-connection-str "Server=;Initial Catalog=;User ID=;Password="
  - summary: |-
      Run Generate TSQL schema script from the source SQL Server using Parameters.
    syntax: az datamigration sql-server-schema --action "GenerateScript" --src-sql-connection-str "Server=;Initial Catalog=;User ID=;Password=" --tgt-sql-connection-str "Server=;Initial Catalog=;User ID=;Password="  --output-folder "C:\OutputFolder"
  - summary: |-
      Run Deploy TSQL script to the target Azure SQL Database using Parameters.
    syntax: az datamigration sql-server-schema --action "GenerateScript" --src-sql-connection-str "Server=;Initial Catalog=;User ID=;Password=" --tgt-sql-connection-str "Server=;Initial Catalog=;User ID=;Password="  --input-script-file-path "C:\OutputFolder\script.sql"
  - summary: |-
      Run Migrate database objects from the source SQL Server to the target Azure SQL Database using ConfigFile.
    syntax: az datamigration sql-server-schema --config-file-path "C:\configfile.json"
  optionalParameters:
  - name: --action
    parameterValueGroup: "DeploySchema, GenerateScript, MigrateSchema"
    summary: |-
      Select one schema migration action. MigrateSchema is to migrate the database objects to Azure SQL Database target. GenerateScript is to generate an editable TSQL schema script that can be used to run on the target to deploy the objects. DeploySchema is to run the TSQL script generated from -GenerateScript action on the target to deploy the objects.
  - name: --config-file-path
    summary: |-
      Path of the ConfigFile. Accepted parameter names in configfile.json is Action, sourceConnectionString, targetConnectionString, inputScriptFilePath and outputFolder.
  - name: --input-script-file-path
    summary: |-
      Location of an editable TSQL schema script. Use this parameter only with DeploySchema Action.
  - name: --output-folder
    summary: |-
      Default: %LocalAppData%/Microsoft/SqlSchemaMigration) Folder where logs will be written and the generated TSQL schema script by GenerateScript Action.
  - name: --src-sql-connection-str
    summary: |-
      Connection string for the source SQL instance, using the formal connection string format.
  - name: --tgt-sql-connection-str
    summary: |-
      Connection string for the target SQL instance, using the formal connection string format.
- uid: az_datamigration_tde-migration
  name: az datamigration tde-migration
  summary: |-
    Migrate TDE certificate from source SQL Server to the target Azure SQL Server.
  status: GA
  sourceType: Extension
  syntax: >-
    az datamigration tde-migration [--database-name]
                                   [--network-share-domain]
                                   [--network-share-password]
                                   [--network-share-path]
                                   [--network-share-user-name]
                                   [--source-sql-connection-string]
                                   [--target-managed-instance-name]
                                   [--target-resource-group-name]
                                   [--target-subscription-id]
  examples:
  - summary: |-
      Migrate TDE certificate from source SQL Server to the target Azure SQL Server.
    syntax: az datamigration tde-migration --source-sql-connection-string "data source=servername;user id=userid;password=;initial catalog=master;TrustServerCertificate=True" --target-subscription-id "00000000-0000-0000-0000-000000000000" --target-resource-group-name "ResourceGroupName" --target-managed-instance-name "TargetManagedInstanceName" --network-share-path "\NetworkShare\Folder" --network-share-domain "NetworkShare" --network-share-user-name "NetworkShareUserName" --network-share-password "" --database-name "TdeDb_0" "TdeDb_1" "TdeDb_2"
  optionalParameters:
  - name: --database-name --dbname
    summary: |-
      Source database name.
  - name: --network-share-domain --networkdomain
    summary: |-
      Network share domain.
  - name: --network-share-password --networkpw
    summary: |-
      Network share password.
  - name: --network-share-path --networkpath
    summary: |-
      Network share path.
  - name: --network-share-user-name --networkuser
    summary: |-
      Network share user name.
  - name: --source-sql-connection-string --srcsqlcs
    summary: |-
      Connection string for the source SQL instance, using the formal connection string format.
  - name: --target-managed-instance-name --tgtname
    summary: |-
      Name of the Azure SQL Server.
  - name: --target-resource-group-name --tgtrg
    summary: |-
      Resource group name of the target Azure SQL server.
  - name: --target-subscription-id --tgtsubscription
    summary: |-
      Subscription Id of the target Azure SQL server.
commands:
- az_datamigration_get-assessment
- az_datamigration_get-sku-recommendation
- az_datamigration_login-migration
- az_datamigration_performance-data-collection
- az_datamigration_register-integration-runtime
- az_datamigration_sql-db
- az_datamigration_sql-db_cancel
- az_datamigration_sql-db_create
- az_datamigration_sql-db_delete
- az_datamigration_sql-db_show
- az_datamigration_sql-db_wait
- az_datamigration_sql-managed-instance
- az_datamigration_sql-managed-instance_cancel
- az_datamigration_sql-managed-instance_create
- az_datamigration_sql-managed-instance_cutover
- az_datamigration_sql-managed-instance_show
- az_datamigration_sql-managed-instance_wait
- az_datamigration_sql-server-schema
- az_datamigration_sql-service
- az_datamigration_sql-service_create
- az_datamigration_sql-service_delete
- az_datamigration_sql-service_delete-node
- az_datamigration_sql-service_list
- az_datamigration_sql-service_list-auth-key
- az_datamigration_sql-service_list-integration-runtime-metric
- az_datamigration_sql-service_list-migration
- az_datamigration_sql-service_regenerate-auth-key
- az_datamigration_sql-service_show
- az_datamigration_sql-service_update
- az_datamigration_sql-service_wait
- az_datamigration_sql-vm
- az_datamigration_sql-vm_cancel
- az_datamigration_sql-vm_create
- az_datamigration_sql-vm_cutover
- az_datamigration_sql-vm_show
- az_datamigration_sql-vm_wait
- az_datamigration_tde-migration
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: Manage Data Migration.
