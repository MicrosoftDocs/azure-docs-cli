### YamlMime:AzureCLIGroup
uid: az_ml_component
name: az ml component
extensionInformation: >-
  > [!Note]

  > This reference is part of the **ml** extension for the Azure CLI  (version 2.15.0 or higher).  The extension will automatically install the first time you run an **az ml component** command.  [Learn more](https://docs.microsoft.com/en-us/cli/azure/azure-cli-extensions-overview) about extensions.
summary: Manage Azure ML components.
description: Azure ML component defines the configuration of component for pipeline jobs. You can configure the input/output ports, execution environment and command of component. After the component are created, you can reference the components in the pipeline job to execute them in docker containers.
directCommands:
- uid: az_ml_component_create
  name: az ml component create
  summary: Create a component.
  description: ''
  syntax: >-
    az ml component create --file
                           --resource-group
                           --workspace-name
                           [--set]
                           [--version]
  examples:
  - summary: Create a component from a YAML specification file
    syntax: az ml component create --file my_component.yml --resource-group my-resource-group --workspace-name my-workspace
  - summary: Create a component from a YAML specification file with specified version
    syntax: az ml component create --file my_component.yml --version 1 --resource-group my-resource-group --workspace-name my-workspace
  requiredParameters:
  - isRequired: true
    name: --file -f
    summary: Local path to the YAML file containing the Azure ML component specification.
    description: ''
  - isRequired: true
    name: --resource-group -g
    summary: Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
    description: ''
  - isRequired: true
    name: --workspace-name -w
    summary: Name of the Azure ML workspace. You can configure the default group using `az configure --defaults workspace=<name>`.
    description: ''
  optionalParameters:
  - name: --set
    summary: 'Update an object by specifying a property path and value to set. Example: --set property1.property2=<value>.'
    description: ''
  - name: --version -v
    summary: Version of the component.
    description: ''
- uid: az_ml_component_list
  name: az ml component list
  summary: List components in a workspace.
  description: ''
  syntax: >-
    az ml component list --resource-group
                         --workspace-name
                         [--max-results]
                         [--name]
  examples:
  - summary: List all the components in a workspace
    syntax: az ml component list --resource-group my-resource-group --workspace-name my-workspace
  - summary: List all the component versions for the specified name in a workspace
    syntax: az ml component list --name my-component --resource-group my-resource-group --workspace-name my-workspace
  - summary: List all the components in a workspace using --query argument to execute a JMESPath query on the results of commands.
    syntax: az ml component list --query "[].{Name:name}"  --output table --resource-group my-resource-group --workspace-name my-workspace
  requiredParameters:
  - isRequired: true
    name: --resource-group -g
    summary: Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
    description: ''
  - isRequired: true
    name: --workspace-name -w
    summary: Name of the Azure ML workspace. You can configure the default group using `az configure --defaults workspace=<name>`.
    description: ''
  optionalParameters:
  - name: --max-results -r
    summary: Max number of results to return.
    description: ''
  - name: --name -n
    summary: Name of the component.
    description: ''
- uid: az_ml_component_show
  name: az ml component show
  summary: Show details for a component.
  description: ''
  syntax: >-
    az ml component show --name
                         --resource-group
                         --workspace-name
                         [--label]
                         [--version]
  examples:
  - summary: Show detail for a component with the specified name and version
    syntax: az ml component show --name my-component --version 1 --resource-group my-resource-group --workspace-name my-workspace
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: Name of the component.
    description: ''
  - isRequired: true
    name: --resource-group -g
    summary: Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
    description: ''
  - isRequired: true
    name: --workspace-name -w
    summary: Name of the Azure ML workspace. You can configure the default group using `az configure --defaults workspace=<name>`.
    description: ''
  optionalParameters:
  - name: --label -l
    summary: Label of the component.
    description: ''
  - name: --version -v
    summary: Version of the component.
    description: ''
- uid: az_ml_component_update
  name: az ml component update
  summary: Update a component. Currently only a few fields(description, display_name) support update.
  description: ''
  syntax: >-
    az ml component update --name
                           --resource-group
                           --workspace-name
                           [--add]
                           [--force-string]
                           [--label]
                           [--remove]
                           [--set]
                           [--version]
  examples:
  - summary: Update a component's description
    syntax: az ml component update -n my_component -v 1 --set description="new description" -g my-resource-group -w my-workspace
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: Name of the component.
    description: ''
  - isRequired: true
    name: --resource-group -g
    summary: Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
    description: ''
  - isRequired: true
    name: --workspace-name -w
    summary: Name of the Azure ML workspace. You can configure the default group using `az configure --defaults workspace=<name>`.
    description: ''
  optionalParameters:
  - name: --add
    summary: 'Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>.'
    description: ''
  - name: --force-string
    summary: When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.
    description: ''
  - name: --label -l
    summary: Label of the component.
    description: ''
  - name: --remove
    summary: 'Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove.'
    description: ''
  - name: --set
    summary: 'Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>.'
    description: ''
  - name: --version -v
    summary: Version of the component.
    description: ''
commands:
- az_ml_component_create
- az_ml_component_list
- az_ml_component_show
- az_ml_component_update
globalParameters:
- name: --debug
  summary: Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: Show this help message and exit.
- name: --only-show-errors
  summary: Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: json
  parameterValueGroup: json, jsonc, table, tsv
  summary: Output format.
- name: --query
  summary: JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: Azure ML component defines the configuration of component for pipeline jobs. You can configure the input/output ports, execution environment and command of component. After the component are created, you can reference the components in the pipeline job to execute them in docker containers.
