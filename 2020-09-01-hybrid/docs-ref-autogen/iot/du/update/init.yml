### YamlMime:AzureCLIGroup
uid: az_iot_du_update_init
name: az iot du update init
extensionInformation: >-
  > [!NOTE]

  > This reference is part of the **azure-iot** extension for the Azure CLI (version 2.37.0 or higher). The extension will automatically install the first time you run an **az iot du update init** command. [Learn more](https://learn.microsoft.com/cli/azure/azure-cli-extensions-overview) about extensions.
summary: |-
  Utility for import manifest initialization.
status: Preview
isPreview: true
previewOrExperimentalInfo: 'This command group is in preview and under development. Reference and support levels: https://aka.ms/CLI_refstatus'
sourceType: Extension
directCommands:
- uid: az_iot_du_update_init_v5
  name: az iot du update init v5
  summary: |-
    Initialize a v5 import manifest with the desired state.
  description: |-
    This command supports all attributes of the v5 import manifest. Note that there is
    positional sensitivity between `--step` and `--file`, as well as `--file` and
    `--related-file`. Review examples and parameter descriptions for details on how
    to fully utilize the operation.

    Read more about using quotation marks and escape characters in different shells here:
      https://aka.ms/aziotcli-json.
  status: Preview
  isPreview: true
  previewOrExperimentalInfo: "Command group 'iot du update init' is in preview and under development. Reference and support levels: https://aka.ms/CLI_refstatus"
  sourceType: Extension
  syntax: >-
    az iot du update init v5 --compat
                             --step
                             --update-name
                             --update-provider
                             --update-version
                             [--description]
                             [--file]
                             [--is-deployable {false, true}]
                             [--no-validation {false, true}]
                             [--related-file]
  examples:
  - summary: |-
      Initialize a minimum content import manifest. Inline json optimized for `bash`.
    syntax: "az iot du update init v5 --update-provider Microsoft --update-name myAptUpdate --update-version 1.0.0 --description \"My minimum update\" --compat manufacturer=Contoso model=Vacuum --step handler=microsoft/apt:1 properties='{\"installedCriteria\": \"1.0\"}' --file path=/my/apt/manifest/file"
  - summary: |-
      Initialize a minimum content import manifest. Inline json optimized for `powershell`.
    syntax: "az iot du update init v5 --update-provider Microsoft --update-name myAptUpdate --update-version 1.0.0 --description \"My minimum update\" --compat manufacturer=Contoso model=Vacuum --step handler=microsoft/apt:1 properties='{\\\"installedCriteria\\\": \\\"1.0\\\"}' --file path=/my/apt/manifest/file"
  - summary: |-
      Initialize a minimum content import manifest. Inline json optimized for `cmd`.
    syntax: 'az iot du update init v5 --update-provider Microsoft --update-name myAptUpdate --update-version 1.0.0 --description "My minimum update" --compat manufacturer=Contoso model=Vacuum --step handler=microsoft/apt:1 properties="{\"installedCriteria\": \"1.0\"}" --file path=/my/apt/manifest/file'
  - summary: |-
      Initialize a minimum content import manifest. Use file input for json.
    syntax: az iot du update init v5 --update-provider Microsoft --update-name myAptUpdate --update-version 1.0.0 --description "My minimum update" --compat manufacturer=Contoso model=Vacuum --step handler=microsoft/apt:1 properties="@/path/to/file" --file path=/my/apt/manifest/file
  - summary: |-
      Initialize a non-deployable leaf update to be referenced in a bundled update. Inline json optimized for `bash`.
    syntax: "az iot du update init v5 --update-provider Microsoft --update-name mySwUpdate --update-version 1.1.0 --compat manufacturer=Contoso model=Microphone --step handler=microsoft/swupdate:1 description=\"Deploy Update\" properties='{\"installedCriteria\": \"1.0\"}' --file path=/my/update/image/file1 --file path=/my/update/image/file2 --is-deployable false"
  - summary: |-
      Initialize a bundled update referencing a leaf update as well as defining independent steps. Example optimized for `bash` using command continuation to delineate import manifest segments.
    syntax: >-
      az iot du update init v5 \

      --update-provider Microsoft --update-name myBundled --update-version 2.0 \

      --compat manufacturer=Contoso model=SpaceStation \

      --step handler=microsoft/script:1 properties='{"arguments": "--pre"}' description="Pre-install script" \

      --file path=/my/update/scripts/preinstall.sh downloadHandler=microsoft/delta:1 \

      --related-file path=/my/update/scripts/related_preinstall.json properties='{"microsoft.sourceFileHashAlgorithm": "sha256"}' \

      --step updateId.provider=Microsoft updateId.name=SwUpdate updateId.version=1.1 \

      --step handler=microsoft/script:1 properties='{"arguments": "--post"}' description="Post-install script" \

      --file path=/my/update/scripts/postinstall.sh
  requiredParameters:
  - isRequired: true
    name: --compat
    summary: |-
      Space-separated key=value pairs corresponding to properties of a device this update is compatible with. Typically used for defining properties such as manufacturer and model. --compat can be used 1 or more times.
  - isRequired: true
    name: --step
    summary: |-
      Space-separated key=value pairs corresponding to 'instructions.steps' element properties. The client will determine if a step is an inline or reference step based on the provided key value pairs. If either inline or reference step can be satisfied, the reference step will be prioritized. Usage of --file will be associated with the nearest inline --step entry, deriving the value for 'files'. The following reference step keys are supported: `updateId.provider`, `updateId.name`, `updateId.version` and `description`. The following inline step keys are supported: `handler` (ex: 'microsoft/script:1' or 'microsoft/swupdate:1' or 'microsoft/apt:1'), `properties` (in-line json object the agent will pass to the handler), and `description`. --step can be used 1 or more times.
  - isRequired: true
    name: --update-name
    summary: |-
      The update name as a component of updateId.
  - isRequired: true
    name: --update-provider
    summary: |-
      The update provider as a component of updateId.
  - isRequired: true
    name: --update-version
    summary: |-
      The update version as a component of updateId.
  optionalParameters:
  - name: --description
    summary: |-
      Description for the import manifest.
  - name: --file
    summary: |-
      Space-separated key=value pairs corresponding to 'files' element properties. A --file entry can include the closest --related-file entries if provided. The following keys are supported: `path` [required] local file path to update file, `downloadHandler` (ex: 'microsoft/delta:1') handler for utilizing related files to download payload file, `properties` (in-line json object the agent will pass to the handler). --file can be used 1 or more times.
  - name: --is-deployable
    parameterValueGroup: "false, true"
    summary: |-
      Indicates whether the update is independently deployable.
  - name: --no-validation
    parameterValueGroup: "false, true"
    summary: |-
      Disables client-side json schema validation of the import manifest content.
  - name: --related-file
    summary: |-
      Space-separated key=value pairs corresponding to 'files[*].relatedFiles' element properties. A --related-file entry will be associated to the closest --file entry if it exists. The following keys are supported: `path` [required] local file path to related update file, `properties` (in-line json object passed to the download handler). --related-file can be used 1 or more times.
commands:
- az_iot_du_update_init_v5
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: Utility for import manifest initialization.
