### YamlMime:AzureCLIGroup
uid: az_iot_hub_digital-twin
name: az iot hub digital-twin
extensionInformation: >-
  > [!NOTE]

  > This reference is part of the **azure-iot** extension for the Azure CLI (version 2.37.0 or higher). The extension will automatically install the first time you run an **az iot hub digital-twin** command. [Learn more](https://learn.microsoft.com/cli/azure/azure-cli-extensions-overview) about extensions.
summary: |-
  Manipulate and interact with the digital twin of an IoT Hub device.
status: GA
sourceType: Extension
directCommands:
- uid: az_iot_hub_digital-twin_invoke-command
  name: az iot hub digital-twin invoke-command
  summary: |-
    Invoke a root or component level command of a digital twin device.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot hub digital-twin invoke-command --cn
                                           --device-id
                                           [--component-path]
                                           [--connect-timeout]
                                           [--hub-name]
                                           [--login]
                                           [--payload]
                                           [--resource-group]
                                           [--response-timeout]
  examples:
  - summary: |-
      In general, invoke command which takes a payload that includes certain property using inline JSON.
    syntax: "az iot hub digital-twin invoke-command --command-name {command_name} -n {iothub_name} -d {device_id} --payload '{\"property_name\": \"property_value\"}'"
  - summary: |-
      Invoke root level command "reboot" which takes a payload named "delay" conforming to DTDL model
      https://github.com/Azure/opendigitaltwins-dtdl/blob/master/DTDL/v2/samples/TemperatureController.json.
    syntax: az iot hub digital-twin invoke-command --command-name reboot -n {iothub_name} -d {device_id} --payload 5
  - summary: |-
      Invoke command "getMaxMinReport" on component "thermostat1" that takes no input.
    syntax: az iot hub digital-twin invoke-command --cn getMaxMinReport -n {iothub_name} -d {device_id} --component-path thermostat1
  requiredParameters:
  - isRequired: true
    name: --cn --command-name
    summary: |-
      Digital twin command name.
  - isRequired: true
    name: --device-id -d
    summary: |-
      Target Device Id.
  optionalParameters:
  - name: --component-path
    summary: |-
      Digital twin component path. For example: thermostat1.
  - name: --connect-timeout --cto
    summary: |-
      Maximum interval of time, in seconds, that IoT Hub will attempt to connect to the device.
  - name: --hub-name -n
    summary: |-
      IoT Hub name or hostname. Required if --login is not provided.
  - name: --login -l
    summary: |-
      This command supports an entity connection string with rights to perform action. Use to avoid session login via "az login". If both an entity connection string and name are provided the connection string takes priority. Required if --hub-name is not provided.
  - name: --payload
    defaultValue: "{}"
    summary: |-
      JSON payload input for command. Provide file path or inline JSON.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --response-timeout --rto
    summary: |-
      Maximum interval of time, in seconds, that the digital twin command will wait for the result.
- uid: az_iot_hub_digital-twin_show
  name: az iot hub digital-twin show
  summary: |-
    Show the digital twin of an IoT Hub device.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot hub digital-twin show --device-id
                                 [--hub-name]
                                 [--login]
                                 [--resource-group]
  examples:
  - summary: |-
      Show the target device digital twin.
    syntax: az iot hub digital-twin show -n {iothub_name} -d {device_id}
  requiredParameters:
  - isRequired: true
    name: --device-id -d
    summary: |-
      Target Device Id.
  optionalParameters:
  - name: --hub-name -n
    summary: |-
      IoT Hub name or hostname. Required if --login is not provided.
  - name: --login -l
    summary: |-
      This command supports an entity connection string with rights to perform action. Use to avoid session login via "az login". If both an entity connection string and name are provided the connection string takes priority. Required if --hub-name is not provided.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_iot_hub_digital-twin_update
  name: az iot hub digital-twin update
  summary: |-
    Update the read-write properties of a digital twin device via JSON patch specification.
  description: |-
    Currently operations are limited to add, replace and remove.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot hub digital-twin update --device-id
                                   --json-patch
                                   [--etag]
                                   [--hub-name]
                                   [--login]
                                   [--resource-group]
  examples:
  - summary: |-
      Update a digital twin via JSON patch specification.
    syntax: "az iot hub digital-twin update --hub-name {iothub_name} --device-id {device_id} --json-patch '{\"op\":\"add\", \"path\":\"/thermostat1/targetTemperature\", \"value\": 54}'"
  - summary: |-
      Update a digital twin via JSON patch specification.
    syntax: >-
      az iot hub digital-twin update -n {iothub_name} -d {device_id} --json-patch '[
        {"op":"remove", "path":"/thermostat1/targetTemperature"},
        {"op":"add", "path":"/thermostat2/targetTemperature", "value": 22}
      ]'
  - summary: |-
      Update a digital twin property via JSON patch specification defined in a file.
    syntax: az iot hub digital-twin update -n {iothub_name} -d {device_id} --json-patch ./my/patch/document.json
  requiredParameters:
  - isRequired: true
    name: --device-id -d
    summary: |-
      Target Device Id.
  - isRequired: true
    name: --json-patch --patch
    summary: |-
      An update specification described by JSON-patch. Operations are limited to add, replace and remove. Provide file path or inline JSON.
  optionalParameters:
  - name: --etag -e
    summary: |-
      Etag or entity tag corresponding to the last state of the resource. If no etag is provided the value '*' is used.
  - name: --hub-name -n
    summary: |-
      IoT Hub name or hostname. Required if --login is not provided.
  - name: --login -l
    summary: |-
      This command supports an entity connection string with rights to perform action. Use to avoid session login via "az login". If both an entity connection string and name are provided the connection string takes priority. Required if --hub-name is not provided.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
commands:
- az_iot_hub_digital-twin_invoke-command
- az_iot_hub_digital-twin_show
- az_iot_hub_digital-twin_update
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: Manipulate and interact with the digital twin of an IoT Hub device.
