### YamlMime:AzureCLIGroup
uid: az_appservice_plan
name: az appservice plan
importantNote: >-
  > [!NOTE]

  > This command group has commands that are defined in both Azure CLI and at least one extension. Install each extension to benefit from its extended capabilities. [Learn more](https://learn.microsoft.com/cli/azure/azure-cli-extensions-overview) about extensions.
summary: |-
  Manage app service plans.
status: GA
sourceType: Core and Extension
directCommands:
- uid: az_appservice_plan_create
  name: az appservice plan create
  summary: |-
    Create an app service plan.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appservice/_help.py
  syntax: >-
    az appservice plan create --name
                              --resource-group
                              [--app-service-environment]
                              [--hyper-v]
                              [--is-linux]
                              [--location]
                              [--no-wait]
                              [--number-of-workers]
                              [--per-site-scaling]
                              [--sku {B1, B2, B3, D1, F1, FREE, I1, I1v2, I2, I2v2, I3, I3v2, I4v2, I5v2, I6v2, P0V3, P1MV3, P1V2, P1V3, P2MV3, P2V2, P2V3, P3MV3, P3V2, P3V3, P4MV3, P5MV3, S1, S2, S3, SHARED, WS1, WS2, WS3}]
                              [--tags]
                              [--zone-redundant]
  examples:
  - summary: |-
      Create a basic app service plan.
    syntax: az appservice plan create -g MyResourceGroup -n MyPlan
  - summary: |-
      Create a standard app service plan with four Linux workers.
    syntax: az appservice plan create -g MyResourceGroup -n MyPlan --is-linux --number-of-workers 4 --sku S1
  - summary: |-
      Create a Windows container app service plan.
    syntax: az appservice plan create -g MyResourceGroup -n MyPlan --hyper-v --sku P1V3
  - summary: |-
      Create an app service plan for app service environment.
    syntax: az appservice plan create -g MyResourceGroup -n MyPlan --app-service-environment MyAppServiceEnvironment --sku I1
  - summary: |-
      Create an app service plan for app service environment in different subscription.
    syntax: az appservice plan create -g MyResourceGroup -n MyPlan --app-service-environment '/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Web/hostingEnvironments/test-ase' --sku I1V2
  - summary: |-
      Create an app service plan for app service environment in different subscription and the resource group in different region than app service environment.
    syntax: az appservice plan create -g MyResourceGroup -n MyPlan --app-service-environment '/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Web/hostingEnvironments/test-ase' --sku I1V2 --location ase-region
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      Name of the new app service plan.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  optionalParameters:
  - name: --app-service-environment -e
    summary: |-
      Name or ID of the app service environment. If you want to create the app service plan in different subscription than the app service environment, please use the resource ID for --app-service-environment parameter.
  - name: --hyper-v
    summary: |-
      Host web app on Windows container.
  - name: --is-linux
    summary: |-
      Host web app on Linux worker.
  - name: --location -l
    summary: |-
      Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
  - name: --no-wait
    defaultValue: "False"
    summary: |-
      Do not wait for the long-running operation to finish.
  - name: --number-of-workers
    defaultValue: "1"
    summary: |-
      Number of workers to be allocated.
  - name: --per-site-scaling
    defaultValue: "False"
    summary: |-
      Enable per-app scaling at the App Service plan level to allow for scaling an app independently from the App Service plan that hosts it.
  - name: --sku
    defaultValue: "B1"
    parameterValueGroup: "B1, B2, B3, D1, F1, FREE, I1, I1v2, I2, I2v2, I3, I3v2, I4v2, I5v2, I6v2, P0V3, P1MV3, P1V2, P1V3, P2MV3, P2V2, P2V3, P3MV3, P3V2, P3V3, P4MV3, P5MV3, S1, S2, S3, SHARED, WS1, WS2, WS3"
    summary: |-
      The pricing tiers, e.g., F1(Free), D1(Shared), B1(Basic Small), B2(Basic Medium), B3(Basic Large), S1(Standard Small), P1V2(Premium V2 Small), P2V2(Premium V2 Medium), P3V2(Premium V2 Large), P0V3(Premium V3 Extra Small), P1V3(Premium V3 Small), P2V3(Premium V3 Medium), P3V3(Premium V3 Large), P1MV3(Premium Memory Optimized V3 Small), P2MV3(Premium Memory Optimized V3 Medium), P3MV3(Premium Memory Optimized V3 Large), P4MV3(Premium Memory Optimized V3 Extra Large), P5MV3(Premium Memory Optimized V3 Extra Extra Large), I1 (Isolated Small), I2 (Isolated Medium), I3 (Isolated Large), I1v2 (Isolated V2 Small), I2v2 (Isolated V2 Medium), I3v2 (Isolated V2 Large), I4v2 (Isolated V2 I4v2), I5v2 (Isolated V2 I5v2), I6v2 (Isolated V2 I6v2), WS1 (Logic Apps Workflow Standard 1), WS2 (Logic Apps Workflow Standard 2), WS3 (Logic Apps Workflow Standard 3).
  - name: --tags
    summary: |-
      Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags.
  - name: --zone-redundant -z
    defaultValue: "False"
    summary: |-
      Enable zone redundancy for high availability. Cannot be changed after plan creation. Minimum instance count is 3.
- uid: az_appservice_plan_create(appservice-kube)
  name: az appservice plan create
  extensionSuffix: appservice-kube
  summary: |-
    Create an app service plan.
  status: GA
  sourceType: Extension
  syntax: >-
    az appservice plan create --name
                              --resource-group
                              [--app-service-environment]
                              [--custom-location]
                              [--hyper-v]
                              [--is-linux]
                              [--location]
                              [--no-wait]
                              [--number-of-workers]
                              [--per-site-scaling]
                              [--sku]
                              [--tags]
  examples:
  - summary: |-
      Create a basic app service plan.
    syntax: az appservice plan create -g MyResourceGroup -n MyPlan
  - summary: |-
      Create a standard app service plan with with four Linux workers.
    syntax: >-
      az appservice plan create -g MyResourceGroup -n MyPlan \
          --is-linux --number-of-workers 4 --sku S1
  - summary: |-
      Create an app service plan for app service environment.
    syntax: >-
      az appservice plan create -g MyResourceGroup -n MyPlan \
          --app-service-environment MyAppServiceEnvironment --sku I1
  - summary: |-
      Create an app service plan for a kubernetes environment.
    syntax: >-
      az appservice plan create -g MyResourceGroup -n MyPlan \
          --custom-location /subscriptions/sub_id/resourcegroups/group_name/providers/microsoft.extendedlocation/customlocations/custom_location_name \
          --per-site-scaling --is-linux --sku K1
  - summary: |-
      Create a kubernetes environment app service plan in the same resource group as the custom location
    syntax: >-
      az appservice plan create -g MyResourceGroup -n MyPlan \
          --custom-location custom_location_name \
          --per-site-scaling --is-linux --sku K1
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      Name of the new app service plan.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  optionalParameters:
  - name: --app-service-environment -e
    summary: |-
      Name or ID of the app service environment.
  - name: --custom-location -c
    summary: |-
      Name or ID of the custom location. Use an ID for a custom location in a different resource group from the plan.
  - name: --hyper-v
    summary: |-
      Host web app on Windows container.
    isPreview: true
  - name: --is-linux
    summary: |-
      Host web app on Linux worker.
  - name: --location -l
    summary: |-
      Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
  - name: --no-wait
    defaultValue: "False"
    summary: |-
      Do not wait for the long-running operation to finish.
  - name: --number-of-workers
    defaultValue: "1"
    summary: |-
      Number of workers to be allocated.
  - name: --per-site-scaling
    defaultValue: "False"
    summary: |-
      Enable per-app scaling at the App Service plan level to allow for scaling an app independently from the App Service plan that hosts it.
  - name: --sku
    summary: |-
      The pricing tiers, e.g., F1(Free), D1(Shared), B1(Basic Small), B2(Basic Medium), B3(Basic Large), S1(Standard Small), P1V2(Premium V2 Small), PC2 (Premium Container Small), PC3 (Premium Container Medium), PC4 (Premium Container Large), I1 (Isolated Small), I2 (Isolated Medium), I3 (Isolated Large), I1v2 (Isolated V2 Small), I2v2 (Isolated V2 Medium), I3v2(Isolated V2 Large) K1 (Kubernetes).
  - name: --tags
    summary: |-
      Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags.
- uid: az_appservice_plan_delete
  name: az appservice plan delete
  summary: |-
    Delete an app service plan.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appservice/_help.py
  syntax: >-
    az appservice plan delete [--ids]
                              [--name]
                              [--resource-group]
                              [--subscription]
                              [--yes]
  examples:
  - summary: |-
      Delete an app service plan. (autogenerated)
    syntax: az appservice plan delete --name MyAppServicePlan --resource-group MyResourceGroup
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      The name of the app service plan.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --yes -y
    defaultValue: "False"
    summary: |-
      Do not prompt for confirmation.
- uid: az_appservice_plan_list
  name: az appservice plan list
  summary: |-
    List app service plans.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appservice/_help.py
  syntax: az appservice plan list [--resource-group]
  examples:
  - summary: |-
      List all free tier App Service plans.
    syntax: az appservice plan list --query "[?sku.tier=='Free']"
  - summary: |-
      List all App Service plans for an App Service environment.
    syntax: az appservice plan list --query "[?hostingEnvironmentProfile.name=='<ase-name>']"
  optionalParameters:
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_appservice_plan_list(appservice-kube)
  name: az appservice plan list
  extensionSuffix: appservice-kube
  summary: |-
    List app service plans.
  status: GA
  sourceType: Extension
  syntax: az appservice plan list [--resource-group]
  examples:
  - summary: |-
      List all free tier App Service plans.
    syntax: az appservice plan list --query "[?sku.tier=='Free']"
  - summary: |-
      List all App Service plans for an App Service environment.
    syntax: az appservice plan list --query "[?hostingEnvironmentProfile.name=='<ase-name>']"
  optionalParameters:
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_appservice_plan_show
  name: az appservice plan show
  summary: |-
    Get the app service plans for a resource group or a set of resource groups.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appservice/_help.py
  syntax: >-
    az appservice plan show [--ids]
                            [--name]
                            [--resource-group]
                            [--subscription]
  examples:
  - summary: |-
      Get the app service plans for a resource group or a set of resource groups. (autogenerated)
    syntax: az appservice plan show --name MyAppServicePlan --resource-group MyResourceGroup
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      The name of the app service plan.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_appservice_plan_show(appservice-kube)
  name: az appservice plan show
  extensionSuffix: appservice-kube
  summary: |-
    Get the app service plans for a resource group or a set of resource groups.
  status: GA
  sourceType: Extension
  syntax: >-
    az appservice plan show [--ids]
                            [--name]
                            [--resource-group]
                            [--subscription]
  examples:
  - summary: |-
      Get the app service plans for a resource group or a set of resource groups. (autogenerated)
    syntax: az appservice plan show --name MyAppServicePlan --resource-group MyResourceGroup
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      The name of the app service plan.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_appservice_plan_update
  name: az appservice plan update
  summary: |-
    Update an app service plan.
  description: |-
    See https:///go.microsoft.com/fwlink/?linkid=2133856 to learn more.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appservice/_help.py
  syntax: >-
    az appservice plan update [--add]
                              [--elastic-scale {false, true}]
                              [--force-string]
                              [--ids]
                              [--max-elastic-worker-count]
                              [--name]
                              [--no-wait]
                              [--number-of-workers]
                              [--remove]
                              [--resource-group]
                              [--set]
                              [--sku {B1, B2, B3, D1, F1, FREE, I1, I1v2, I2, I2v2, I3, I3v2, I4v2, I5v2, I6v2, P0V3, P1MV3, P1V2, P1V3, P2MV3, P2V2, P2V3, P3MV3, P3V2, P3V3, P4MV3, P5MV3, S1, S2, S3, SHARED, WS1, WS2, WS3}]
                              [--subscription]
  examples:
  - summary: |-
      Update an app service plan. (autogenerated)
    syntax: az appservice plan update --name MyAppServicePlan --resource-group MyResourceGroup --sku F1
  optionalParameters:
  - name: --add
    defaultValue: "[]"
    summary: |-
      Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>.
  - name: --elastic-scale
    parameterValueGroup: "false, true"
    summary: |-
      Enable or disable automatic scaling. Set to "true" to enable elastic scale for this plan, or "false" to disable elastic scale for this plan. The SKU must be a Premium V2 SKU (P1V2, P2V2, P3V2) or a Premium V3 SKU (P1V3, P2V3, P3V3).
    isPreview: true
  - name: --force-string
    defaultValue: "False"
    summary: |-
      When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --max-elastic-worker-count -m
    summary: |-
      Maximum number of instances that the plan can scale out to. The plan must be an elastic scale plan.
    isPreview: true
  - name: --name -n
    summary: |-
      The name of the app service plan.
  - name: --no-wait
    defaultValue: "False"
    summary: |-
      Do not wait for the long-running operation to finish.
  - name: --number-of-workers
    defaultValue: "1"
    summary: |-
      Number of workers to be allocated.
  - name: --remove
    defaultValue: "[]"
    summary: |-
      Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --set
    defaultValue: "[]"
    summary: |-
      Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>.
  - name: --sku
    parameterValueGroup: "B1, B2, B3, D1, F1, FREE, I1, I1v2, I2, I2v2, I3, I3v2, I4v2, I5v2, I6v2, P0V3, P1MV3, P1V2, P1V3, P2MV3, P2V2, P2V3, P3MV3, P3V2, P3V3, P4MV3, P5MV3, S1, S2, S3, SHARED, WS1, WS2, WS3"
    summary: |-
      The pricing tiers, e.g., F1(Free), D1(Shared), B1(Basic Small), B2(Basic Medium), B3(Basic Large), S1(Standard Small), P1V2(Premium V2 Small), P2V2(Premium V2 Medium), P3V2(Premium V2 Large), P0V3(Premium V3 Extra Small), P1V3(Premium V3 Small), P2V3(Premium V3 Medium), P3V3(Premium V3 Large), P1MV3(Premium Memory Optimized V3 Small), P2MV3(Premium Memory Optimized V3 Medium), P3MV3(Premium Memory Optimized V3 Large), P4MV3(Premium Memory Optimized V3 Extra Large), P5MV3(Premium Memory Optimized V3 Extra Extra Large), I1 (Isolated Small), I2 (Isolated Medium), I3 (Isolated Large), I1v2 (Isolated V2 Small), I2v2 (Isolated V2 Medium), I3v2 (Isolated V2 Large), I4v2 (Isolated V2 I4v2), I5v2 (Isolated V2 I5v2), I6v2 (Isolated V2 I6v2), WS1 (Logic Apps Workflow Standard 1), WS2 (Logic Apps Workflow Standard 2), WS3 (Logic Apps Workflow Standard 3).
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_appservice_plan_update(appservice-kube)
  name: az appservice plan update
  extensionSuffix: appservice-kube
  summary: |-
    Update an app service plan. See https://docs.microsoft.com/azure/app-service/app-service-plan-manage#move-an-app-to-another-app-service-plan to learn more.
  status: GA
  sourceType: Extension
  syntax: >-
    az appservice plan update [--ids]
                              [--name]
                              [--no-wait]
                              [--number-of-workers]
                              [--resource-group]
                              [--sku {ANY, B1, B2, B3, D1, ELASTICANY, F1, FREE, I1, I2, I3, P1V2, P2V2, P3V2, PC2, PC3, PC4, S1, S2, S3, SHARED}]
                              [--subscription]
  examples:
  - summary: |-
      Update an app service plan. (autogenerated)
    syntax: az appservice plan update --name MyAppServicePlan --resource-group MyResourceGroup --sku F1
  - summary: |-
      Update a kubernetes app service plan.
    syntax: >-
      az appservice plan update --name MyAppServicePlan --resource-group MyResourceGroup \
          --sku ANY --number-of-workers 3
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      The name of the app service plan.
  - name: --no-wait
    defaultValue: "False"
    summary: |-
      Do not wait for the long-running operation to finish.
  - name: --number-of-workers
    defaultValue: "1"
    summary: |-
      Number of workers to be allocated.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --sku
    parameterValueGroup: "ANY, B1, B2, B3, D1, ELASTICANY, F1, FREE, I1, I2, I3, P1V2, P2V2, P3V2, PC2, PC3, PC4, S1, S2, S3, SHARED"
    summary: |-
      The pricing tiers, e.g., F1(Free), D1(Shared), B1(Basic Small), B2(Basic Medium), B3(Basic Large), S1(Standard Small), P1V2(Premium V2 Small), PC2 (Premium Container Small), PC3 (Premium Container Medium), PC4 (Premium Container Large), I1 (Isolated Small), I2 (Isolated Medium), I3 (Isolated Large), K1 (Kubernetes).
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
commands:
- az_appservice_plan_create
- az_appservice_plan_create(appservice-kube)
- az_appservice_plan_delete
- az_appservice_plan_list
- az_appservice_plan_list(appservice-kube)
- az_appservice_plan_show
- az_appservice_plan_show(appservice-kube)
- az_appservice_plan_update
- az_appservice_plan_update(appservice-kube)
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: Manage app service plans.
