### YamlMime:AzureCLIGroup
uid: az_cosmosdb_sql_container
name: az cosmosdb sql container
extensionInformation: >-
  > [!NOTE]

  > This reference is part of the **cosmosdb-preview** extension for the Azure CLI (version 2.17.1 or higher). The extension will automatically install the first time you run an **az cosmosdb sql container** command. [Learn more](https://learn.microsoft.com/cli/azure/azure-cli-extensions-overview) about extensions.
summary: |-
  Manage Azure Cosmos DB SQL containers.
status: GA
sourceType: Extension
directCommands:
- uid: az_cosmosdb_sql_container_create
  name: az cosmosdb sql container create
  summary: |-
    Create an SQL container under an Azure Cosmos DB SQL database.
  status: GA
  sourceType: Extension
  syntax: >-
    az cosmosdb sql container create --account-name
                                     --database-name
                                     --name
                                     --partition-key-path
                                     --resource-group
                                     [--analytical-storage-ttl]
                                     [--cep]
                                     [--conflict-resolution-policy]
                                     [--idx]
                                     [--materialized-view-definition]
                                     [--max-throughput]
                                     [--partition-key-version]
                                     [--throughput]
                                     [--ttl]
                                     [--unique-key-policy]
  examples:
  - summary: |-
      Create an Azure Cosmos DB SQL container.
    syntax: az cosmosdb sql container create -g MyResourceGroup -a MyAccount -d MyDatabase -n MyContainer --partition-key-path "/my/path" --idx @policy-file.json --ttl 1000 --throughput "700"
  requiredParameters:
  - isRequired: true
    name: --account-name -a
    summary: |-
      Cosmosdb account name.
  - isRequired: true
    name: --database-name -d
    summary: |-
      Database name.
  - isRequired: true
    name: --name -n
    summary: |-
      Container name.
  - isRequired: true
    name: --partition-key-path -p
    summary: |-
      Partition Key Path, e.g., '/address/zipcode'.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  optionalParameters:
  - name: --analytical-storage-ttl -t
    summary: |-
      Analytical TTL, when analytical storage is enabled.
  - name: --cep
    summary: |-
      Client Encryption Policy, you can enter it as a string or as a file, e.g., --cep @policy-file.json or --cep "{
          \"includedPaths\": [{\"path\": \"/path1\",\"clientEncryptionKeyId\": \"key1\",\"encryptionAlgorithm\": \"AEAD_AES_256_CBC_HMAC_SHA256\",\"encryptionType\": \"Deterministic\"}],
          \"policyFormatVersion\": 2}".
  - name: --conflict-resolution-policy -c
    summary: |-
      Conflict Resolution Policy, you can enter it as a string or as a file, e.g., --conflict-resolution-policy @policy-file.json or --conflict-resolution-policy "{
          \"mode\": \"lastWriterWins\",
          \"conflictResolutionPath\": \"/path\"
      }".
  - name: --idx
    defaultValue: "{\n  \"indexingMode\": \"consistent\",\n  \"automatic\": true,\n  \"includedPaths\": [\n    {\n      \"path\": \"/*\"\n    }\n  ],\n  \"excludedPaths\": [\n    {\n      \"path\": \"/\\\"_etag\\\"/?\"\n    }\n  ]\n}"
    summary: |-
      Indexing Policy, you can enter it as a string or as a file, e.g., --idx @policy-file.json or --idx "{
          \"indexingMode\": \"consistent\",
          \"automatic\": true,
          \"includedPaths\": [{\"path\": \"/*\"}],
          \"excludedPaths\": [{ \"path\": \"/headquarters/employees/?\"}, { \"path\": \"/\\"_etag\\"/?\"}]
      }".
  - name: --materialized-view-definition -m
    summary: |-
      Materialized View Definition, you can enter it as a string or as a file, e.g., --materialized-view-definition @materializedview-definition-file.json or --materialized-view-definition -m '{
          "sourceCollectionId": "MySourceCollectionName",
          "definition": "SELECT * FROM root r"}'.
  - name: --max-throughput
    summary: |-
      The maximum throughput resource can scale to (RU/s). Provided when the resource is autoscale enabled. The minimum value can be 4000 (RU/s).
  - name: --partition-key-version
    summary: |-
      The version of partition key.
  - name: --throughput
    summary: |-
      The throughput of SQL container (RU/s). Default value is 400. Omit this parameter if the database has shared throughput unless the container should have dedicated throughput.
  - name: --ttl
    summary: |-
      Default TTL. If the value is missing or set to "-1", items donâ€™t expire. If the value is set to "n", items will expire "n" seconds after last modified time.
  - name: --unique-key-policy -u
    summary: |-
      Unique Key Policy, you can enter it as a string or as a file, e.g., --unique-key-policy @policy-file.json or --unique-key-policy "{
          \"uniqueKeys\": [{\"paths\": [\"/path/to/key1\"]}, {\"paths\": [\"/path/to/key2\"]}]
      }".
- uid: az_cosmosdb_sql_container_merge
  name: az cosmosdb sql container merge
  summary: |-
    Merges the partitions of a sql container.
  status: Preview
  isPreview: true
  previewOrExperimentalInfo: 'This command is in preview and under development. Reference and support levels: https://aka.ms/CLI_refstatus'
  sourceType: Extension
  syntax: >-
    az cosmosdb sql container merge --account-name
                                    --database-name
                                    --name
                                    --resource-group
  examples:
  - summary: |-
      merge partitions of container my-container
    syntax: az cosmosdb sql container merge -g my-resource-group -a my-account -d my-db --name my-container
  requiredParameters:
  - isRequired: true
    name: --account-name -a
    summary: |-
      Name of the CosmosDB database account.
  - isRequired: true
    name: --database-name -d
    summary: |-
      Name of the CosmosDB database name.
  - isRequired: true
    name: --name -n
    summary: |-
      Name of the CosmosDB collection.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_cosmosdb_sql_container_redistribute-partition-throughput
  name: az cosmosdb sql container redistribute-partition-throughput
  summary: |-
    Redistributes the partition throughput of a sql container.
  status: Preview
  isPreview: true
  previewOrExperimentalInfo: 'This command is in preview and under development. Reference and support levels: https://aka.ms/CLI_refstatus'
  sourceType: Extension
  syntax: >-
    az cosmosdb sql container redistribute-partition-throughput --account-name
                                                                --database-name
                                                                --name
                                                                --resource-group
                                                                [--evenly-distribute {false, true}]
                                                                [--source-partition-info]
                                                                [--target-partition-info]
  examples:
  - summary: |-
      Evenly distributes the partition throughput for a sql container among all physical partitions
    syntax: az cosmosdb sql container redistribute-partition-throughput --account-name account_name --database-name db_name --name container_name  --resource-group rg_name --evenly-distribute
  - summary: |-
      Redistributes the partition throughput for a sql container from source partitions to target partitions
    syntax: az cosmosdb sql container redistribute-partition-throughput --account-name account_name --database-name db_name --name container_name  --resource-group rg_name --target-partition-info 8=1200 6=1200]' --source-partition-info 9]'
  requiredParameters:
  - isRequired: true
    name: --account-name -a
    summary: |-
      Name of the CosmosDB database account.
  - isRequired: true
    name: --database-name -d
    summary: |-
      Name of the CosmosDB database name.
  - isRequired: true
    name: --name -n
    summary: |-
      Name of the CosmosDB collection.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  optionalParameters:
  - name: --evenly-distribute
    defaultValue: "False"
    parameterValueGroup: "false, true"
    summary: |-
      Switch to distribute throughput equally among all physical partitions.
  - name: --source-partition-info
    defaultValue: "[]"
    summary: |-
      Space separated source physical partition ids eg: 1 2.
  - name: --target-partition-info
    defaultValue: "[]"
    summary: |-
      Information about desired target physical partition throughput eg: 0=1200 1=1200.
- uid: az_cosmosdb_sql_container_restore
  name: az cosmosdb sql container restore
  summary: |-
    Restore a deleted sql container within the same account.
  status: Preview
  isPreview: true
  previewOrExperimentalInfo: 'This command is in preview and under development. Reference and support levels: https://aka.ms/CLI_refstatus'
  sourceType: Extension
  syntax: >-
    az cosmosdb sql container restore --account-name
                                      --database-name
                                      --name
                                      --resource-group
                                      --restore-timestamp
  examples:
  - summary: |-
      Restore a deleted sql container within the same account.
    syntax: az cosmosdb sql container restore --resource-group resource_group --account-name database_account_name --database-name parent_database_name --name name_of_container_needs_to_be_restored --restore-timestamp 2020-07-13T16:03:41+0000
  requiredParameters:
  - isRequired: true
    name: --account-name -a
    summary: |-
      Cosmosdb account name.
  - isRequired: true
    name: --database-name -d
    summary: |-
      Database name.
  - isRequired: true
    name: --name -n
    summary: |-
      Container name.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - isRequired: true
    name: --restore-timestamp -t
    summary: |-
      The timestamp to which the container needs to be restored to.
- uid: az_cosmosdb_sql_container_retrieve-partition-throughput
  name: az cosmosdb sql container retrieve-partition-throughput
  summary: |-
    Retrieve  the partition throughput of a sql container.
  status: Preview
  isPreview: true
  previewOrExperimentalInfo: 'This command is in preview and under development. Reference and support levels: https://aka.ms/CLI_refstatus'
  sourceType: Extension
  syntax: >-
    az cosmosdb sql container retrieve-partition-throughput --account-name
                                                            --database-name
                                                            --name
                                                            --resource-group
                                                            [--all-partitions {false, true}]
                                                            [--physical-partition-ids]
  examples:
  - summary: |-
      Retrieve container container_name's throughput for specific physical partitions
    syntax: az cosmosdb sql container retrieve-partition-throughput --account-name account_name --database-name db_name --name container_name  --resource-group rg_name --physical-partition-ids 8 9
  - summary: |-
      Retrieve container container_name's throughput for all physical partitions
    syntax: az cosmosdb sql container retrieve-partition-throughput --account-name account_name --database-name db_name --name container_name  --resource-group rg_name --all-partitions
  requiredParameters:
  - isRequired: true
    name: --account-name -a
    summary: |-
      Name of the CosmosDB database account.
  - isRequired: true
    name: --database-name -d
    summary: |-
      Name of the CosmosDB database name.
  - isRequired: true
    name: --name -n
    summary: |-
      Name of the CosmosDB container.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  optionalParameters:
  - name: --all-partitions
    defaultValue: "False"
    parameterValueGroup: "false, true"
    summary: |-
      Switch to retrieve throughput for all physical partitions.
  - name: --physical-partition-ids -p
    defaultValue: "[]"
    summary: |-
      Space separated list of physical partition ids.
- uid: az_cosmosdb_sql_container_update
  name: az cosmosdb sql container update
  summary: |-
    Update an SQL container under an Azure Cosmos DB SQL database.
  status: GA
  sourceType: Extension
  syntax: >-
    az cosmosdb sql container update --account-name
                                     --database-name
                                     --name
                                     --resource-group
                                     [--analytical-storage-ttl]
                                     [--idx]
                                     [--materialized-view-definition]
                                     [--ttl]
  requiredParameters:
  - isRequired: true
    name: --account-name -a
    summary: |-
      Cosmosdb account name.
  - isRequired: true
    name: --database-name -d
    summary: |-
      Database name.
  - isRequired: true
    name: --name -n
    summary: |-
      Container name.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  optionalParameters:
  - name: --analytical-storage-ttl -t
    summary: |-
      Analytical TTL, when analytical storage is enabled.
  - name: --idx
    summary: |-
      Indexing Policy, you can enter it as a string or as a file, e.g., --idx @policy-file.json or --idx "{
          \"indexingMode\": \"consistent\",
          \"automatic\": true,
          \"includedPaths\": [{\"path\": \"/*\"}],
          \"excludedPaths\": [{ \"path\": \"/headquarters/employees/?\"}, { \"path\": \"/\\"_etag\\"/?\"}]
      }".
  - name: --materialized-view-definition -m
    summary: |-
      Materialized View Definition, you can enter it as a string or as a file, e.g., --materialized-view-definition @materializedview-definition-file.json or --materialized-view-definition -m '{
          "sourceCollectionId": "MySourceCollectionName",
          "definition": "SELECT * FROM root r"}'.
  - name: --ttl
    summary: |-
      Default TTL. If the value is missing or set to "-1", items donâ€™t expire. If the value is set to "n", items will expire "n" seconds after last modified time.
commands:
- az_cosmosdb_sql_container_create
- az_cosmosdb_sql_container_merge
- az_cosmosdb_sql_container_redistribute-partition-throughput
- az_cosmosdb_sql_container_restore
- az_cosmosdb_sql_container_retrieve-partition-throughput
- az_cosmosdb_sql_container_update
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: Manage Azure Cosmos DB SQL containers.
