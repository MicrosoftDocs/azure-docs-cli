### YamlMime:AzureCLIGroup
uid: az_databricks_workspace_vnet-peering
name: az databricks workspace vnet-peering
extensionInformation: >-
  > [!NOTE]

  > This reference is part of the **databricks** extension for the Azure CLI (version 2.45.0 or higher). The extension will automatically install the first time you run an **az databricks workspace vnet-peering** command. [Learn more](https://learn.microsoft.com/cli/azure/azure-cli-extensions-overview) about extensions.
summary: |-
  Commands to manage databricks workspace vnet peering.
status: GA
sourceType: Extension
directCommands:
- uid: az_databricks_workspace_vnet-peering_create
  name: az databricks workspace vnet-peering create
  summary: |-
    Create a vnet peering for a workspace.
  status: GA
  sourceType: Extension
  syntax: >-
    az databricks workspace vnet-peering create --name
                                                --resource-group
                                                --workspace-name
                                                [--allow-forwarded-traffic {0, 1, f, false, n, no, t, true, y, yes}]
                                                [--allow-gateway-transit {0, 1, f, false, n, no, t, true, y, yes}]
                                                [--allow-virtual-network-access {0, 1, f, false, n, no, t, true, y, yes}]
                                                [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]
                                                [--remote-vnet]
                                                [--use-remote-gateways {0, 1, f, false, n, no, t, true, y, yes}]
  examples:
  - summary: |-
      Create a vnet peering for a workspace
    syntax: az databricks workspace vnet-peering create --resource-group MyResourceGroup --workspace-name MyWorkspace -n MyPeering --remote-vnet /subscriptions/000000-0000-0000/resourceGroups/MyRG/providers/Microsoft.Network/virtualNetworks/MyVNet
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      The name of the vnet peering.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - isRequired: true
    name: --workspace-name
    summary: |-
      The name of the workspace.
  optionalParameters:
  - name: --allow-forwarded-traffic
    parameterValueGroup: "0, 1, f, false, n, no, t, true, y, yes"
    summary: |-
      Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.
  - name: --allow-gateway-transit
    parameterValueGroup: "0, 1, f, false, n, no, t, true, y, yes"
    summary: |-
      If gateway links can be used in remote virtual networking to link to this virtual network.
  - name: --allow-virtual-network-access
    parameterValueGroup: "0, 1, f, false, n, no, t, true, y, yes"
    summary: |-
      Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.
  - name: --no-wait
    parameterValueGroup: "0, 1, f, false, n, no, t, true, y, yes"
    summary: |-
      Do not wait for the long-running operation to finish.
  - name: --remote-vnet
    summary: |-
      The remote virtual network name or Resource ID.
  - name: --use-remote-gateways
    parameterValueGroup: "0, 1, f, false, n, no, t, true, y, yes"
    summary: |-
      If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
- uid: az_databricks_workspace_vnet-peering_delete
  name: az databricks workspace vnet-peering delete
  summary: |-
    Delete the vnet peering.
  status: GA
  sourceType: Extension
  syntax: >-
    az databricks workspace vnet-peering delete [--ids]
                                                [--name]
                                                [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]
                                                [--resource-group]
                                                [--subscription]
                                                [--workspace-name]
  examples:
  - summary: |-
      Delete the vnet peering.
    syntax: az databricks workspace vnet-peering delete --resource-group MyResourceGroup --workspace-name MyWorkspace -n MyPeering
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      The name of the vnet peering.
  - name: --no-wait
    parameterValueGroup: "0, 1, f, false, n, no, t, true, y, yes"
    summary: |-
      Do not wait for the long-running operation to finish.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --workspace-name
    summary: |-
      The name of the workspace.
- uid: az_databricks_workspace_vnet-peering_list
  name: az databricks workspace vnet-peering list
  summary: |-
    List vnet peerings under a workspace.
  status: GA
  sourceType: Extension
  syntax: >-
    az databricks workspace vnet-peering list --resource-group
                                              --workspace-name
  examples:
  - summary: |-
      List vnet peerings under a workspace.
    syntax: az databricks workspace vnet-peering list --resource-group MyResourceGroup --workspace-name MyWorkspace
  requiredParameters:
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - isRequired: true
    name: --workspace-name
    summary: |-
      The name of the workspace.
- uid: az_databricks_workspace_vnet-peering_show
  name: az databricks workspace vnet-peering show
  summary: |-
    Show the vnet peering.
  status: GA
  sourceType: Extension
  syntax: >-
    az databricks workspace vnet-peering show [--ids]
                                              [--name]
                                              [--resource-group]
                                              [--subscription]
                                              [--workspace-name]
  examples:
  - summary: |-
      Show the vnet peering
    syntax: az databricks workspace vnet-peering show --resource-group MyResourceGroup --workspace-name MyWorkspace -n MyPeering
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      The name of the vnet peering.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --workspace-name
    summary: |-
      The name of the workspace.
- uid: az_databricks_workspace_vnet-peering_update
  name: az databricks workspace vnet-peering update
  summary: |-
    Update the vnet peering.
  status: GA
  sourceType: Extension
  syntax: >-
    az databricks workspace vnet-peering update [--add]
                                                [--allow-forwarded-traffic {0, 1, f, false, n, no, t, true, y, yes}]
                                                [--allow-gateway-transit {0, 1, f, false, n, no, t, true, y, yes}]
                                                [--allow-virtual-network-access {0, 1, f, false, n, no, t, true, y, yes}]
                                                [--force-string {0, 1, f, false, n, no, t, true, y, yes}]
                                                [--ids]
                                                [--name]
                                                [--no-wait {0, 1, f, false, n, no, t, true, y, yes}]
                                                [--remove]
                                                [--resource-group]
                                                [--set]
                                                [--subscription]
                                                [--use-remote-gateways {0, 1, f, false, n, no, t, true, y, yes}]
                                                [--workspace-name]
  examples:
  - summary: |-
      Update the vnet peering (enable gateway transit and disable virtual network access).
    syntax: az databricks workspace vnet-peering update --resource-group MyResourceGroup --workspace-name MyWorkspace -n MyPeering --allow-gateway-transit --allow-virtual-network-access false
  optionalParameters:
  - name: --add
    summary: |-
      Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>.
  - name: --allow-forwarded-traffic
    parameterValueGroup: "0, 1, f, false, n, no, t, true, y, yes"
    summary: |-
      Whether the forwarded traffic from the VMs in the local virtual network will be allowed/disallowed in remote virtual network.
  - name: --allow-gateway-transit
    parameterValueGroup: "0, 1, f, false, n, no, t, true, y, yes"
    summary: |-
      If gateway links can be used in remote virtual networking to link to this virtual network.
  - name: --allow-virtual-network-access
    parameterValueGroup: "0, 1, f, false, n, no, t, true, y, yes"
    summary: |-
      Whether the VMs in the local virtual network space would be able to access the VMs in remote virtual network space.
  - name: --force-string
    parameterValueGroup: "0, 1, f, false, n, no, t, true, y, yes"
    summary: |-
      When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      The name of the vnet peering.
  - name: --no-wait
    parameterValueGroup: "0, 1, f, false, n, no, t, true, y, yes"
    summary: |-
      Do not wait for the long-running operation to finish.
  - name: --remove
    summary: |-
      Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --set
    summary: |-
      Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --use-remote-gateways
    parameterValueGroup: "0, 1, f, false, n, no, t, true, y, yes"
    summary: |-
      If remote gateways can be used on this virtual network. If the flag is set to true, and allowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for transit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a gateway.
  - name: --workspace-name
    summary: |-
      The name of the workspace.
- uid: az_databricks_workspace_vnet-peering_wait
  name: az databricks workspace vnet-peering wait
  summary: |-
    Place the CLI in a waiting state until a condition is met.
  status: GA
  sourceType: Extension
  syntax: >-
    az databricks workspace vnet-peering wait [--created]
                                              [--custom]
                                              [--deleted]
                                              [--exists]
                                              [--ids]
                                              [--interval]
                                              [--name]
                                              [--resource-group]
                                              [--subscription]
                                              [--timeout]
                                              [--updated]
                                              [--workspace-name]
  optionalParameters:
  - name: --created
    defaultValue: "False"
    summary: |-
      Wait until created with 'provisioningState' at 'Succeeded'.
  - name: --custom
    summary: |-
      Wait until the condition satisfies a custom JMESPath query. E.g. provisioningState!='InProgress', instanceView.statuses[?code=='PowerState/running'].
  - name: --deleted
    defaultValue: "False"
    summary: |-
      Wait until deleted.
  - name: --exists
    defaultValue: "False"
    summary: |-
      Wait until the resource exists.
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --interval
    defaultValue: "30"
    summary: |-
      Polling interval in seconds.
  - name: --name -n
    summary: |-
      The name of the vnet peering.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --timeout
    defaultValue: "3600"
    summary: |-
      Maximum wait in seconds.
  - name: --updated
    defaultValue: "False"
    summary: |-
      Wait until updated with provisioningState at 'Succeeded'.
  - name: --workspace-name
    summary: |-
      The name of the workspace.
commands:
- az_databricks_workspace_vnet-peering_create
- az_databricks_workspace_vnet-peering_delete
- az_databricks_workspace_vnet-peering_list
- az_databricks_workspace_vnet-peering_show
- az_databricks_workspace_vnet-peering_update
- az_databricks_workspace_vnet-peering_wait
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: Commands to manage databricks workspace vnet peering.
