### YamlMime:AzureCLIGroup
uid: az_appconfig_feature
name: az appconfig feature
summary: |-
  Manage feature flags stored in an App Configuration.
status: GA
sourceType: Core
directCommands:
- uid: az_appconfig_feature_delete
  name: az appconfig feature delete
  summary: |-
    Delete feature flag.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appconfig/_help.py
  syntax: >-
    az appconfig feature delete [--auth-mode {key, login}]
                                [--connection-string]
                                [--endpoint]
                                [--feature]
                                [--key]
                                [--label]
                                [--name]
                                [--yes]
  examples:
  - summary: |-
      Delete a feature using App Configuration name without confirmation.
    syntax: az appconfig feature delete -n MyAppConfiguration --feature color --label MyLabel --yes
  - summary: |-
      Delete a feature using connection string.
    syntax: az appconfig feature delete --connection-string Endpoint=https://contoso.azconfig.io;Id=xxx;Secret=xxx --feature color --label MyLabel
  - summary: |-
      Delete a feature using App Configuration endpoint and your 'az login' credentials.
    syntax: az appconfig feature delete --endpoint https://myappconfiguration.azconfig.io --feature color --auth-mode login
  - summary: |-
      Delete a feature whose name is "Beta" but key is ".appconfig.featureflag/MyApp1:Beta".
    syntax: az appconfig feature delete -n MyAppConfiguration --key .appconfig.featureflag/MyApp1:Beta --yes
  optionalParameters:
  - name: --auth-mode
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      This parameter can be used for indicating how a data operation is to be authorized. If the auth mode is "key", provide connection string or store name and your account access keys will be retrieved for authorization. If the auth mode is "login", provide the store endpoint or store name and your "az login" credentials will be used for authorization. You can configure the default auth mode using `az configure --defaults appconfig_auth_mode=<auth_mode>`. For more information, see https://docs.microsoft.com/azure/azure-app-configuration/concept-enable-rbac.
  - name: --connection-string
    summary: |-
      Combination of access key and endpoint of App Configuration. Can be found using 'az appconfig credential list'. Users can preset it using `az configure --defaults appconfig_connection_string=<connection_string>` or environment variable with the name AZURE_APPCONFIG_CONNECTION_STRING.
  - name: --endpoint
    summary: |-
      If auth mode is "login", provide endpoint URL of the App Configuration. The endpoint can be retrieved using "az appconfig show" command. You can configure the default endpoint using `az configure --defaults appconfig_endpoint=<endpoint>`.
  - name: --feature
    summary: |-
      Name of the feature to be deleted. If the feature flag key is different from the default key, provide the `--key` argument instead. Support star sign as filters, for instance * means all features and abc* means features with abc as prefix. Comma separated features are not supported. Please provide escaped string if your feature name contains comma.
  - name: --key
    summary: |-
      Key of the feature flag. Key must start with the ".appconfig.featureflag/" prefix. Key cannot contain the "%" character. If both key and feature arguments are provided, only key will be used. Support star sign as filters, for instance ".appconfig.featureflag/*" means all features and ".appconfig.featureflag/abc*" means features with abc as prefix. Comma separated features are not supported. Please provide escaped string if your feature name contains comma.
  - name: --label
    summary: |-
      If no label specified, delete the feature flag with null label by default. Support star sign as filters, for instance * means all labels and abc* means labels with abc as prefix.
  - name: --name -n
    summary: |-
      Name of the App Configuration. You can configure the default name using `az configure --defaults app_configuration_store=<name>`.
  - name: --yes -y
    defaultValue: "False"
    summary: |-
      Do not prompt for confirmation.
- uid: az_appconfig_feature_disable
  name: az appconfig feature disable
  summary: |-
    Disable a feature flag to turn it OFF for use.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appconfig/_help.py
  syntax: >-
    az appconfig feature disable [--auth-mode {key, login}]
                                 [--connection-string]
                                 [--endpoint]
                                 [--feature]
                                 [--key]
                                 [--label]
                                 [--name]
                                 [--yes]
  examples:
  - summary: |-
      disable a feature using App Configuration name.
    syntax: az appconfig feature disable -n MyAppConfiguration --feature color --label test
  - summary: |-
      Force disabling a feature using connection string.
    syntax: az appconfig feature disable --connection-string Endpoint=https://contoso.azconfig.io;Id=xxx;Secret=xxx --feature color --label test --yes
  - summary: |-
      Disable a feature whose name is "Beta" but key is ".appconfig.featureflag/MyApp1:Beta".
    syntax: az appconfig feature disable -n MyAppConfiguration --key .appconfig.featureflag/MyApp1:Beta
  optionalParameters:
  - name: --auth-mode
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      This parameter can be used for indicating how a data operation is to be authorized. If the auth mode is "key", provide connection string or store name and your account access keys will be retrieved for authorization. If the auth mode is "login", provide the store endpoint or store name and your "az login" credentials will be used for authorization. You can configure the default auth mode using `az configure --defaults appconfig_auth_mode=<auth_mode>`. For more information, see https://docs.microsoft.com/azure/azure-app-configuration/concept-enable-rbac.
  - name: --connection-string
    summary: |-
      Combination of access key and endpoint of App Configuration. Can be found using 'az appconfig credential list'. Users can preset it using `az configure --defaults appconfig_connection_string=<connection_string>` or environment variable with the name AZURE_APPCONFIG_CONNECTION_STRING.
  - name: --endpoint
    summary: |-
      If auth mode is "login", provide endpoint URL of the App Configuration. The endpoint can be retrieved using "az appconfig show" command. You can configure the default endpoint using `az configure --defaults appconfig_endpoint=<endpoint>`.
  - name: --feature
    summary: |-
      Name of the feature to be disabled. If the feature flag key is different from the default key, provide the `--key` argument instead.
  - name: --key
    summary: |-
      Key of the feature flag. Key must start with the ".appconfig.featureflag/" prefix. Key cannot contain the "%" character. If both key and feature arguments are provided, only key will be used. Default key is the reserved prefix ".appconfig.featureflag/" + feature name.
  - name: --label
    summary: |-
      If no label specified, disable the feature flag with null label by default.
  - name: --name -n
    summary: |-
      Name of the App Configuration. You can configure the default name using `az configure --defaults app_configuration_store=<name>`.
  - name: --yes -y
    defaultValue: "False"
    summary: |-
      Do not prompt for confirmation.
- uid: az_appconfig_feature_enable
  name: az appconfig feature enable
  summary: |-
    Enable a feature flag to turn it ON for use.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appconfig/_help.py
  syntax: >-
    az appconfig feature enable [--auth-mode {key, login}]
                                [--connection-string]
                                [--endpoint]
                                [--feature]
                                [--key]
                                [--label]
                                [--name]
                                [--yes]
  examples:
  - summary: |-
      enable a feature using App Configuration name.
    syntax: az appconfig feature enable -n MyAppConfiguration --feature color --label test
  - summary: |-
      Force enabling a feature using connection string.
    syntax: az appconfig feature enable --connection-string Endpoint=https://contoso.azconfig.io;Id=xxx;Secret=xxx --feature color --label test --yes
  - summary: |-
      Enable a feature whose name is "Beta" but key is ".appconfig.featureflag/MyApp1:Beta".
    syntax: az appconfig feature enable -n MyAppConfiguration --key .appconfig.featureflag/MyApp1:Beta
  optionalParameters:
  - name: --auth-mode
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      This parameter can be used for indicating how a data operation is to be authorized. If the auth mode is "key", provide connection string or store name and your account access keys will be retrieved for authorization. If the auth mode is "login", provide the store endpoint or store name and your "az login" credentials will be used for authorization. You can configure the default auth mode using `az configure --defaults appconfig_auth_mode=<auth_mode>`. For more information, see https://docs.microsoft.com/azure/azure-app-configuration/concept-enable-rbac.
  - name: --connection-string
    summary: |-
      Combination of access key and endpoint of App Configuration. Can be found using 'az appconfig credential list'. Users can preset it using `az configure --defaults appconfig_connection_string=<connection_string>` or environment variable with the name AZURE_APPCONFIG_CONNECTION_STRING.
  - name: --endpoint
    summary: |-
      If auth mode is "login", provide endpoint URL of the App Configuration. The endpoint can be retrieved using "az appconfig show" command. You can configure the default endpoint using `az configure --defaults appconfig_endpoint=<endpoint>`.
  - name: --feature
    summary: |-
      Name of the feature to be enabled. If the feature flag key is different from the default key, provide the `--key` argument instead.
  - name: --key
    summary: |-
      Key of the feature flag. Key must start with the ".appconfig.featureflag/" prefix. Key cannot contain the "%" character. If both key and feature arguments are provided, only key will be used. Default key is the reserved prefix ".appconfig.featureflag/" + feature name.
  - name: --label
    summary: |-
      If no label specified, enable the feature flag with null label by default.
  - name: --name -n
    summary: |-
      Name of the App Configuration. You can configure the default name using `az configure --defaults app_configuration_store=<name>`.
  - name: --yes -y
    defaultValue: "False"
    summary: |-
      Do not prompt for confirmation.
- uid: az_appconfig_feature_list
  name: az appconfig feature list
  summary: |-
    List feature flags.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appconfig/_help.py
  syntax: >-
    az appconfig feature list [--all]
                              [--auth-mode {key, login}]
                              [--connection-string]
                              [--endpoint]
                              [--feature]
                              [--fields {conditions, description, key, label, last_modified, locked, name, state}]
                              [--key]
                              [--label]
                              [--name]
                              [--top]
  examples:
  - summary: |-
      List all feature flags.
    syntax: az appconfig feature list -n MyAppConfiguration
  - summary: |-
      List all feature flags with null labels.
    syntax: az appconfig feature list -n MyAppConfiguration --label \0
  - summary: |-
      List a specific feature for any label start with v1. using connection string.
    syntax: az appconfig feature list --feature color --connection-string Endpoint=https://contoso.azconfig.io;Id=xxx;Secret=xxx --label v1.*
  - summary: |-
      List all features with any labels and query only key, state and conditions.
    syntax: az appconfig feature list --connection-string Endpoint=https://contoso.azconfig.io;Id=xxx;Secret=xxx --fields key state conditions
  - summary: |-
      List 150 feature flags with any labels.
    syntax: az appconfig feature list --connection-string Endpoint=https://contoso.azconfig.io;Id=xxx;Secret=xxx  --top 150
  - summary: |-
      List feature flags with multiple labels.
    syntax: az appconfig feature list --label test,prod,\0 -n MyAppConfiguration
  - summary: |-
      List all features starting with "MyApp1".
    syntax: az appconfig feature list -n MyAppConfiguration --key .appconfig.featureflag/MyApp1*
  optionalParameters:
  - name: --all
    defaultValue: "False"
    summary: |-
      List all feature flags.
  - name: --auth-mode
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      This parameter can be used for indicating how a data operation is to be authorized. If the auth mode is "key", provide connection string or store name and your account access keys will be retrieved for authorization. If the auth mode is "login", provide the store endpoint or store name and your "az login" credentials will be used for authorization. You can configure the default auth mode using `az configure --defaults appconfig_auth_mode=<auth_mode>`. For more information, see https://docs.microsoft.com/azure/azure-app-configuration/concept-enable-rbac.
  - name: --connection-string
    summary: |-
      Combination of access key and endpoint of App Configuration. Can be found using 'az appconfig credential list'. Users can preset it using `az configure --defaults appconfig_connection_string=<connection_string>` or environment variable with the name AZURE_APPCONFIG_CONNECTION_STRING.
  - name: --endpoint
    summary: |-
      If auth mode is "login", provide endpoint URL of the App Configuration. The endpoint can be retrieved using "az appconfig show" command. You can configure the default endpoint using `az configure --defaults appconfig_endpoint=<endpoint>`.
  - name: --feature
    summary: |-
      Name of the feature to be listed. If the feature flag key is different from the default key, provide the `--key` argument instead. Support star sign as filters, for instance * means all features and abc* means features with abc as prefix. Comma separated features are not supported. Please provide escaped string if your feature name contains comma.
  - name: --fields
    parameterValueGroup: "conditions, description, key, label, last_modified, locked, name, state"
    summary: |-
      Customize output fields for Feature Flags.
  - name: --key
    summary: |-
      Key of the feature flag. Key must start with the ".appconfig.featureflag/" prefix. Key cannot contain the "%" character. If both key and feature arguments are provided, only key will be used. Support star sign as filters, for instance ".appconfig.featureflag/*" means all features and ".appconfig.featureflag/abc*" means features with abc as prefix. Comma separated features are not supported. Please provide escaped string if your feature name contains comma.
  - name: --label
    summary: |-
      If no label specified, list all labels. Support star sign as filters, for instance * means all labels and abc* means labels with abc as prefix. Use '\0' for null label.
  - name: --name -n
    summary: |-
      Name of the App Configuration. You can configure the default name using `az configure --defaults app_configuration_store=<name>`.
  - name: --top -t
    summary: |-
      Maximum number of items to return. Must be a positive integer. Default to 100.
- uid: az_appconfig_feature_lock
  name: az appconfig feature lock
  summary: |-
    Lock a feature flag to prohibit write operations.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appconfig/_help.py
  syntax: >-
    az appconfig feature lock [--auth-mode {key, login}]
                              [--connection-string]
                              [--endpoint]
                              [--feature]
                              [--key]
                              [--label]
                              [--name]
                              [--yes]
  examples:
  - summary: |-
      Lock a feature using App Configuration name.
    syntax: az appconfig feature lock -n MyAppConfiguration --feature color --label test
  - summary: |-
      Force locking a feature using connection string.
    syntax: az appconfig feature lock --connection-string Endpoint=https://contoso.azconfig.io;Id=xxx;Secret=xxx --feature color --label test --yes
  - summary: |-
      Lock a feature whose name is "Beta" but key is ".appconfig.featureflag/MyApp1:Beta".
    syntax: az appconfig feature lock -n MyAppConfiguration --key .appconfig.featureflag/MyApp1:Beta
  optionalParameters:
  - name: --auth-mode
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      This parameter can be used for indicating how a data operation is to be authorized. If the auth mode is "key", provide connection string or store name and your account access keys will be retrieved for authorization. If the auth mode is "login", provide the store endpoint or store name and your "az login" credentials will be used for authorization. You can configure the default auth mode using `az configure --defaults appconfig_auth_mode=<auth_mode>`. For more information, see https://docs.microsoft.com/azure/azure-app-configuration/concept-enable-rbac.
  - name: --connection-string
    summary: |-
      Combination of access key and endpoint of App Configuration. Can be found using 'az appconfig credential list'. Users can preset it using `az configure --defaults appconfig_connection_string=<connection_string>` or environment variable with the name AZURE_APPCONFIG_CONNECTION_STRING.
  - name: --endpoint
    summary: |-
      If auth mode is "login", provide endpoint URL of the App Configuration. The endpoint can be retrieved using "az appconfig show" command. You can configure the default endpoint using `az configure --defaults appconfig_endpoint=<endpoint>`.
  - name: --feature
    summary: |-
      Name of the feature to be locked. If the feature flag key is different from the default key, provide the `--key` argument instead.
  - name: --key
    summary: |-
      Key of the feature flag. Key must start with the ".appconfig.featureflag/" prefix. Key cannot contain the "%" character. If both key and feature arguments are provided, only key will be used. Default key is the reserved prefix ".appconfig.featureflag/" + feature name.
  - name: --label
    summary: |-
      If no label specified, lock the feature flag with null label by default.
  - name: --name -n
    summary: |-
      Name of the App Configuration. You can configure the default name using `az configure --defaults app_configuration_store=<name>`.
  - name: --yes -y
    defaultValue: "False"
    summary: |-
      Do not prompt for confirmation.
- uid: az_appconfig_feature_set
  name: az appconfig feature set
  summary: |-
    Set a feature flag.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appconfig/_help.py
  syntax: >-
    az appconfig feature set [--auth-mode {key, login}]
                             [--connection-string]
                             [--description]
                             [--endpoint]
                             [--feature]
                             [--key]
                             [--label]
                             [--name]
                             [--requirement-type {all, any}]
                             [--yes]
  examples:
  - summary: |-
      Set a feature flag with label MyLabel.
    syntax: az appconfig feature set -n MyAppConfiguration --feature color --label MyLabel
  - summary: |-
      Set a feature flag with null label using connection string and set a description.
    syntax: az appconfig feature set --connection-string Endpoint=https://contoso.azconfig.io;Id=xxx;Secret=xxx --feature color --description "This is a colorful feature"
  - summary: |-
      Set a feature flag using your 'az login' credentials.
    syntax: az appconfig feature set --endpoint https://myappconfiguration.azconfig.io --feature color --label MyLabel --auth-mode login
  - summary: |-
      Set a feature flag with name "Beta" and custom key ".appconfig.featureflag/MyApp1:Beta".
    syntax: az appconfig feature set -n MyAppConfiguration --feature Beta --key .appconfig.featureflag/MyApp1:Beta
  optionalParameters:
  - name: --auth-mode
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      This parameter can be used for indicating how a data operation is to be authorized. If the auth mode is "key", provide connection string or store name and your account access keys will be retrieved for authorization. If the auth mode is "login", provide the store endpoint or store name and your "az login" credentials will be used for authorization. You can configure the default auth mode using `az configure --defaults appconfig_auth_mode=<auth_mode>`. For more information, see https://docs.microsoft.com/azure/azure-app-configuration/concept-enable-rbac.
  - name: --connection-string
    summary: |-
      Combination of access key and endpoint of App Configuration. Can be found using 'az appconfig credential list'. Users can preset it using `az configure --defaults appconfig_connection_string=<connection_string>` or environment variable with the name AZURE_APPCONFIG_CONNECTION_STRING.
  - name: --description
    summary: |-
      Description of the feature flag to be set.
  - name: --endpoint
    summary: |-
      If auth mode is "login", provide endpoint URL of the App Configuration. The endpoint can be retrieved using "az appconfig show" command. You can configure the default endpoint using `az configure --defaults appconfig_endpoint=<endpoint>`.
  - name: --feature
    summary: |-
      Name of the feature flag to be set. Feature name cannot contain the '%' character.
  - name: --key
    summary: |-
      Key of the feature flag. Key must start with the ".appconfig.featureflag/" prefix. Key cannot contain the "%" character. Default key is the reserved prefix ".appconfig.featureflag/" + feature name.
  - name: --label
    summary: |-
      If no label specified, set the feature flag with null label by default.
  - name: --name -n
    summary: |-
      Name of the App Configuration. You can configure the default name using `az configure --defaults app_configuration_store=<name>`.
  - name: --requirement-type
    parameterValueGroup: "all, any"
    summary: |-
      Requirement type determines if filters should use "Any" or "All" logic when evaluating the state of a feature.
  - name: --yes -y
    defaultValue: "False"
    summary: |-
      Do not prompt for confirmation.
- uid: az_appconfig_feature_show
  name: az appconfig feature show
  summary: |-
    Show all attributes of a feature flag.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appconfig/_help.py
  syntax: >-
    az appconfig feature show [--auth-mode {key, login}]
                              [--connection-string]
                              [--endpoint]
                              [--feature]
                              [--fields {conditions, description, key, label, last_modified, locked, name, state}]
                              [--key]
                              [--label]
                              [--name]
  examples:
  - summary: |-
      Show a feature flag using App Configuration name with a specific label
    syntax: az appconfig feature show -n MyAppConfiguration --feature color --label MyLabel
  - summary: |-
      Show a feature flag using connection string and field filters
    syntax: az appconfig feature show --connection-string Endpoint=https://contoso.azconfig.io;Id=xxx;Secret=xxx --feature color --fields key locked conditions state
  - summary: |-
      Show a feature flag using App Configuration endpoint and your 'az login' credentials.
    syntax: az appconfig feature show --endpoint https://myappconfiguration.azconfig.io --feature color --auth-mode login
  - summary: |-
      Show a feature whose name is "Beta" but key is ".appconfig.featureflag/MyApp1:Beta".
    syntax: az appconfig feature show -n MyAppConfiguration --key .appconfig.featureflag/MyApp1:Beta
  optionalParameters:
  - name: --auth-mode
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      This parameter can be used for indicating how a data operation is to be authorized. If the auth mode is "key", provide connection string or store name and your account access keys will be retrieved for authorization. If the auth mode is "login", provide the store endpoint or store name and your "az login" credentials will be used for authorization. You can configure the default auth mode using `az configure --defaults appconfig_auth_mode=<auth_mode>`. For more information, see https://docs.microsoft.com/azure/azure-app-configuration/concept-enable-rbac.
  - name: --connection-string
    summary: |-
      Combination of access key and endpoint of App Configuration. Can be found using 'az appconfig credential list'. Users can preset it using `az configure --defaults appconfig_connection_string=<connection_string>` or environment variable with the name AZURE_APPCONFIG_CONNECTION_STRING.
  - name: --endpoint
    summary: |-
      If auth mode is "login", provide endpoint URL of the App Configuration. The endpoint can be retrieved using "az appconfig show" command. You can configure the default endpoint using `az configure --defaults appconfig_endpoint=<endpoint>`.
  - name: --feature
    summary: |-
      Name of the feature flag to be retrieved. If the feature flag key is different from the default key, provide the `--key` argument instead.
  - name: --fields
    parameterValueGroup: "conditions, description, key, label, last_modified, locked, name, state"
    summary: |-
      Customize output fields for Feature Flags.
  - name: --key
    summary: |-
      Key of the feature flag. Key must start with the ".appconfig.featureflag/" prefix. Key cannot contain the "%" character. If both key and feature arguments are provided, only key will be used. Default key is the reserved prefix ".appconfig.featureflag/" + feature name.
  - name: --label
    summary: |-
      If no label specified, show entry with null label. Filtering is not supported.
  - name: --name -n
    summary: |-
      Name of the App Configuration. You can configure the default name using `az configure --defaults app_configuration_store=<name>`.
- uid: az_appconfig_feature_unlock
  name: az appconfig feature unlock
  summary: |-
    Unlock a feature to gain write operations.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appconfig/_help.py
  syntax: >-
    az appconfig feature unlock [--auth-mode {key, login}]
                                [--connection-string]
                                [--endpoint]
                                [--feature]
                                [--key]
                                [--label]
                                [--name]
                                [--yes]
  examples:
  - summary: |-
      Unlock a feature using App Configuration name.
    syntax: az appconfig feature unlock -n MyAppConfiguration --feature color --label test
  - summary: |-
      Force unlocking a feature using connection string.
    syntax: az appconfig feature unlock --connection-string Endpoint=https://contoso.azconfig.io;Id=xxx;Secret=xxx --feature color --label test --yes
  - summary: |-
      Unlock a feature whose name is "Beta" but key is ".appconfig.featureflag/MyApp1:Beta".
    syntax: az appconfig feature unlock -n MyAppConfiguration --key .appconfig.featureflag/MyApp1:Beta
  optionalParameters:
  - name: --auth-mode
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      This parameter can be used for indicating how a data operation is to be authorized. If the auth mode is "key", provide connection string or store name and your account access keys will be retrieved for authorization. If the auth mode is "login", provide the store endpoint or store name and your "az login" credentials will be used for authorization. You can configure the default auth mode using `az configure --defaults appconfig_auth_mode=<auth_mode>`. For more information, see https://docs.microsoft.com/azure/azure-app-configuration/concept-enable-rbac.
  - name: --connection-string
    summary: |-
      Combination of access key and endpoint of App Configuration. Can be found using 'az appconfig credential list'. Users can preset it using `az configure --defaults appconfig_connection_string=<connection_string>` or environment variable with the name AZURE_APPCONFIG_CONNECTION_STRING.
  - name: --endpoint
    summary: |-
      If auth mode is "login", provide endpoint URL of the App Configuration. The endpoint can be retrieved using "az appconfig show" command. You can configure the default endpoint using `az configure --defaults appconfig_endpoint=<endpoint>`.
  - name: --feature
    summary: |-
      Name of the feature to be unlocked. If the feature flag key is different from the default key, provide the `--key` argument instead.
  - name: --key
    summary: |-
      Key of the feature flag. Key must start with the ".appconfig.featureflag/" prefix. Key cannot contain the "%" character. If both key and feature arguments are provided, only key will be used. Default key is the reserved prefix ".appconfig.featureflag/" + feature name.
  - name: --label
    summary: |-
      If no label specified, unlock the feature flag with null label by default.
  - name: --name -n
    summary: |-
      Name of the App Configuration. You can configure the default name using `az configure --defaults app_configuration_store=<name>`.
  - name: --yes -y
    defaultValue: "False"
    summary: |-
      Do not prompt for confirmation.
commands:
- az_appconfig_feature_delete
- az_appconfig_feature_disable
- az_appconfig_feature_enable
- az_appconfig_feature_filter
- az_appconfig_feature_filter_add
- az_appconfig_feature_filter_delete
- az_appconfig_feature_filter_list
- az_appconfig_feature_filter_show
- az_appconfig_feature_filter_update
- az_appconfig_feature_list
- az_appconfig_feature_lock
- az_appconfig_feature_set
- az_appconfig_feature_show
- az_appconfig_feature_unlock
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  ms.date: 08/16/2023
  description: Manage feature flags stored in an App Configuration.
