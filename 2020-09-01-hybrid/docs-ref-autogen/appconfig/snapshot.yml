### YamlMime:AzureCLIGroup
uid: az_appconfig_snapshot
name: az appconfig snapshot
summary: |-
  Manage snapshots associated with an app configuration store.
status: GA
sourceType: Core
directCommands:
- uid: az_appconfig_snapshot_archive
  name: az appconfig snapshot archive
  summary: |-
    Archive a snapshot.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appconfig/_help.py
  syntax: >-
    az appconfig snapshot archive --snapshot-name
                                  [--auth-mode {key, login}]
                                  [--connection-string]
                                  [--endpoint]
                                  [--name]
  examples:
  - summary: |-
      Archive snapshot MySnapshot in configuration store MyAppConfiguration.
    syntax: az appconfig snapshot archive -s MySnapshot -n MyAppConfiguration
  requiredParameters:
  - isRequired: true
    name: --snapshot-name -s
    summary: |-
      Name of the App Configuration snapshot.
  optionalParameters:
  - name: --auth-mode
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      This parameter can be used for indicating how a data operation is to be authorized. If the auth mode is "key", provide connection string or store name and your account access keys will be retrieved for authorization. If the auth mode is "login", provide the store endpoint or store name and your "az login" credentials will be used for authorization. You can configure the default auth mode using `az configure --defaults appconfig_auth_mode=<auth_mode>`. For more information, see https://docs.microsoft.com/azure/azure-app-configuration/concept-enable-rbac.
  - name: --connection-string
    summary: |-
      Combination of access key and endpoint of App Configuration. Can be found using 'az appconfig credential list'. Users can preset it using `az configure --defaults appconfig_connection_string=<connection_string>` or environment variable with the name AZURE_APPCONFIG_CONNECTION_STRING.
  - name: --endpoint
    summary: |-
      If auth mode is "login", provide endpoint URL of the App Configuration. The endpoint can be retrieved using "az appconfig show" command. You can configure the default endpoint using `az configure --defaults appconfig_endpoint=<endpoint>`.
  - name: --name -n
    summary: |-
      Name of the App Configuration. You can configure the default name using `az configure --defaults app_configuration_store=<name>`.
- uid: az_appconfig_snapshot_create
  name: az appconfig snapshot create
  summary: |-
    Create an app configuration snapshot.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appconfig/_help.py
  syntax: >-
    az appconfig snapshot create --filters
                                 --snapshot-name
                                 [--auth-mode {key, login}]
                                 [--composition-type {key, key_label}]
                                 [--connection-string]
                                 [--endpoint]
                                 [--name]
                                 [--retention-period]
                                 [--tags]
  examples:
  - summary: |-
      Create a snapshot MySnapshot of all keys starting with 'Test' in configuration store MyAppConfiguration.
    syntax: az appconfig snapshot create -s MySnapshot -n MyAppConfiguration --filters '{\"key\":\"Test*\"}'
  - summary: |-
      Create a snapshot MySnapshot of all keys starting with 'abc' and a retention period of 1 hour.
    syntax: az appconfig snapshot create -s MySnapshot -n MyAppConfiguration --filters '{\"key\":\"abc*\"}' --retention-period 3600
  - summary: |-
      Create a snapshot of all keys starting with 'app/' and no label as default, then override the key-values with keys with the label 'prod' if they exist.
    syntax: az appconfig snapshot create -s MySnapshot -n MyAppConfiguration --filters '{\"key\":\"app/*\"}' '{\"key\":\"app/*\", \"label\":\"prod\"}' --composition-type 'key'
  requiredParameters:
  - isRequired: true
    name: --filters
    summary: |-
      Space-separated list of escaped JSON objects that represent the key and label filters used to build an App Configuration snapshot.
  - isRequired: true
    name: --snapshot-name -s
    summary: |-
      Name of the App Configuration snapshot.
  optionalParameters:
  - name: --auth-mode
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      This parameter can be used for indicating how a data operation is to be authorized. If the auth mode is "key", provide connection string or store name and your account access keys will be retrieved for authorization. If the auth mode is "login", provide the store endpoint or store name and your "az login" credentials will be used for authorization. You can configure the default auth mode using `az configure --defaults appconfig_auth_mode=<auth_mode>`. For more information, see https://docs.microsoft.com/azure/azure-app-configuration/concept-enable-rbac.
  - name: --composition-type
    parameterValueGroup: "key, key_label"
    summary: |-
      Composition type used in building App Configuration snapshots. If not specified, defaults to key.
  - name: --connection-string
    summary: |-
      Combination of access key and endpoint of App Configuration. Can be found using 'az appconfig credential list'. Users can preset it using `az configure --defaults appconfig_connection_string=<connection_string>` or environment variable with the name AZURE_APPCONFIG_CONNECTION_STRING.
  - name: --endpoint
    summary: |-
      If auth mode is "login", provide endpoint URL of the App Configuration. The endpoint can be retrieved using "az appconfig show" command. You can configure the default endpoint using `az configure --defaults appconfig_endpoint=<endpoint>`.
  - name: --name -n
    summary: |-
      Name of the App Configuration. You can configure the default name using `az configure --defaults app_configuration_store=<name>`.
  - name: --retention-period
    summary: |-
      Duration in seconds for which a snapshot can remain archived before expiry. A snapshot can be archived for a maximum of 7 days (604,800s) for free tier stores and 90 days (7,776,000s) for standard tier stores. If specified, retention period must be at least 1 hour (3600s).
  - name: --tags
    summary: |-
      Space-separated tags: key[=value] [key[=value] ...].
- uid: az_appconfig_snapshot_list
  name: az appconfig snapshot list
  summary: |-
    List snapshots.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appconfig/_help.py
  syntax: >-
    az appconfig snapshot list [--all]
                               [--auth-mode {key, login}]
                               [--connection-string]
                               [--endpoint]
                               [--fields {composition_type, created, etag, expires, filters, items_count, name, retention_period, size, status, tags}]
                               [--name]
                               [--snapshot-name]
                               [--status {archived, failed, provisioning, ready}]
                               [--top]
  examples:
  - summary: |-
      List all snapshots with names starting with the prefix 'abc'.
    syntax: az appconfig snapshot list -s abc* -n MyAppConfiguration
  - summary: |-
      List all archived snapshots.
    syntax: az appconfig snapshot list --status archived -n MyAppConfiguration
  - summary: |-
      List all provisioning snapshots with names starting with the prefix 'app'.
    syntax: az appconfig snapshot list -s app* --status provisioning -n MyAppConfiguration
  - summary: |-
      List all failed and provisioning snapshots.
    syntax: az appconfig snapshot list --status failed provisioning -n MyAppConfiguration
  optionalParameters:
  - name: --all
    summary: |-
      List all items.
  - name: --auth-mode
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      This parameter can be used for indicating how a data operation is to be authorized. If the auth mode is "key", provide connection string or store name and your account access keys will be retrieved for authorization. If the auth mode is "login", provide the store endpoint or store name and your "az login" credentials will be used for authorization. You can configure the default auth mode using `az configure --defaults appconfig_auth_mode=<auth_mode>`. For more information, see https://docs.microsoft.com/azure/azure-app-configuration/concept-enable-rbac.
  - name: --connection-string
    summary: |-
      Combination of access key and endpoint of App Configuration. Can be found using 'az appconfig credential list'. Users can preset it using `az configure --defaults appconfig_connection_string=<connection_string>` or environment variable with the name AZURE_APPCONFIG_CONNECTION_STRING.
  - name: --endpoint
    summary: |-
      If auth mode is "login", provide endpoint URL of the App Configuration. The endpoint can be retrieved using "az appconfig show" command. You can configure the default endpoint using `az configure --defaults appconfig_endpoint=<endpoint>`.
  - name: --fields
    parameterValueGroup: "composition_type, created, etag, expires, filters, items_count, name, retention_period, size, status, tags"
    summary: |-
      Customize output fields for Snapshots.
  - name: --name -n
    summary: |-
      Name of the App Configuration. You can configure the default name using `az configure --defaults app_configuration_store=<name>`.
  - name: --snapshot-name -s
    defaultValue: "*"
    summary: |-
      If no name specified, return all snapshots by default. Support star sign as filters, for instance abc* means snapshots with abc as prefix to the name.
  - name: --status
    parameterValueGroup: "archived, failed, provisioning, ready"
    summary: |-
      Filter snapshots by their status. If no status specified, return all snapshots by default.
  - name: --top -t
    summary: |-
      Maximum number of items to return. Must be a positive integer. Default to 100.
- uid: az_appconfig_snapshot_recover
  name: az appconfig snapshot recover
  summary: |-
    Recover an archived snapshot.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appconfig/_help.py
  syntax: >-
    az appconfig snapshot recover --snapshot-name
                                  [--auth-mode {key, login}]
                                  [--connection-string]
                                  [--endpoint]
                                  [--name]
  examples:
  - summary: |-
      Recover snapshot MySnapshot in configuration store MyAppConfiguration.
    syntax: az appconfig snapshot recover -s MySnapshot -n MyAppConfiguration
  requiredParameters:
  - isRequired: true
    name: --snapshot-name -s
    summary: |-
      Name of the App Configuration snapshot.
  optionalParameters:
  - name: --auth-mode
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      This parameter can be used for indicating how a data operation is to be authorized. If the auth mode is "key", provide connection string or store name and your account access keys will be retrieved for authorization. If the auth mode is "login", provide the store endpoint or store name and your "az login" credentials will be used for authorization. You can configure the default auth mode using `az configure --defaults appconfig_auth_mode=<auth_mode>`. For more information, see https://docs.microsoft.com/azure/azure-app-configuration/concept-enable-rbac.
  - name: --connection-string
    summary: |-
      Combination of access key and endpoint of App Configuration. Can be found using 'az appconfig credential list'. Users can preset it using `az configure --defaults appconfig_connection_string=<connection_string>` or environment variable with the name AZURE_APPCONFIG_CONNECTION_STRING.
  - name: --endpoint
    summary: |-
      If auth mode is "login", provide endpoint URL of the App Configuration. The endpoint can be retrieved using "az appconfig show" command. You can configure the default endpoint using `az configure --defaults appconfig_endpoint=<endpoint>`.
  - name: --name -n
    summary: |-
      Name of the App Configuration. You can configure the default name using `az configure --defaults app_configuration_store=<name>`.
- uid: az_appconfig_snapshot_show
  name: az appconfig snapshot show
  summary: |-
    Show all attributes of an app configuration snapshot.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/appconfig/_help.py
  syntax: >-
    az appconfig snapshot show --snapshot-name
                               [--auth-mode {key, login}]
                               [--connection-string]
                               [--endpoint]
                               [--fields {composition_type, created, etag, expires, filters, items_count, name, retention_period, size, status, tags}]
                               [--name]
  examples:
  - summary: |-
      Show an app configuration snapshot with name MySnapshot in configuration store MyAppConfiguration.
    syntax: az appconfig snapshot show -s MySnapshot -n MyAppConfiguration
  requiredParameters:
  - isRequired: true
    name: --snapshot-name -s
    summary: |-
      Name of the App Configuration snapshot.
  optionalParameters:
  - name: --auth-mode
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      This parameter can be used for indicating how a data operation is to be authorized. If the auth mode is "key", provide connection string or store name and your account access keys will be retrieved for authorization. If the auth mode is "login", provide the store endpoint or store name and your "az login" credentials will be used for authorization. You can configure the default auth mode using `az configure --defaults appconfig_auth_mode=<auth_mode>`. For more information, see https://docs.microsoft.com/azure/azure-app-configuration/concept-enable-rbac.
  - name: --connection-string
    summary: |-
      Combination of access key and endpoint of App Configuration. Can be found using 'az appconfig credential list'. Users can preset it using `az configure --defaults appconfig_connection_string=<connection_string>` or environment variable with the name AZURE_APPCONFIG_CONNECTION_STRING.
  - name: --endpoint
    summary: |-
      If auth mode is "login", provide endpoint URL of the App Configuration. The endpoint can be retrieved using "az appconfig show" command. You can configure the default endpoint using `az configure --defaults appconfig_endpoint=<endpoint>`.
  - name: --fields
    parameterValueGroup: "composition_type, created, etag, expires, filters, items_count, name, retention_period, size, status, tags"
    summary: |-
      Customize output fields for Snapshots.
  - name: --name -n
    summary: |-
      Name of the App Configuration. You can configure the default name using `az configure --defaults app_configuration_store=<name>`.
commands:
- az_appconfig_snapshot_archive
- az_appconfig_snapshot_create
- az_appconfig_snapshot_list
- az_appconfig_snapshot_recover
- az_appconfig_snapshot_show
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  ms.date: 08/16/2023
  description: Manage snapshots associated with an app configuration store.
