### YamlMime:AzureCLIGroup
uid: az_appservice_plan
name: az appservice plan
extensionInformation: >-
  > [!NOTE]

  > This reference is part of the **appservice-kube** extension for the Azure CLI (version 2.34.1 or higher). The extension will automatically install the first time you run an **az appservice plan** command. [Learn more](https://learn.microsoft.com/cli/azure/azure-cli-extensions-overview) about extensions.
summary: |-
  Manage app service plans.
status: GA
sourceType: Extension
directCommands:
- uid: az_appservice_plan_create
  name: az appservice plan create
  summary: |-
    Create an app service plan.
  status: GA
  sourceType: Extension
  syntax: >-
    az appservice plan create --name
                              --resource-group
                              [--app-service-environment]
                              [--custom-location]
                              [--hyper-v]
                              [--is-linux]
                              [--location]
                              [--no-wait]
                              [--number-of-workers]
                              [--per-site-scaling]
                              [--sku]
                              [--tags]
  examples:
  - summary: |-
      Create a basic app service plan.
    syntax: az appservice plan create -g MyResourceGroup -n MyPlan
  - summary: |-
      Create a standard app service plan with with four Linux workers.
    syntax: >-
      az appservice plan create -g MyResourceGroup -n MyPlan \
          --is-linux --number-of-workers 4 --sku S1
  - summary: |-
      Create an app service plan for app service environment.
    syntax: >-
      az appservice plan create -g MyResourceGroup -n MyPlan \
          --app-service-environment MyAppServiceEnvironment --sku I1
  - summary: |-
      Create an app service plan for a kubernetes environment.
    syntax: >-
      az appservice plan create -g MyResourceGroup -n MyPlan \
          --custom-location /subscriptions/sub_id/resourcegroups/group_name/providers/microsoft.extendedlocation/customlocations/custom_location_name \
          --per-site-scaling --is-linux --sku K1
  - summary: |-
      Create a kubernetes environment app service plan in the same resource group as the custom location
    syntax: >-
      az appservice plan create -g MyResourceGroup -n MyPlan \
          --custom-location custom_location_name \
          --per-site-scaling --is-linux --sku K1
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      Name of the new app service plan.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  optionalParameters:
  - name: --app-service-environment -e
    summary: |-
      Name or ID of the app service environment.
  - name: --custom-location -c
    summary: |-
      Name or ID of the custom location. Use an ID for a custom location in a different resource group from the plan.
  - name: --hyper-v
    summary: |-
      Host web app on Windows container.
    isPreview: true
  - name: --is-linux
    summary: |-
      Host web app on Linux worker.
  - name: --location -l
    summary: |-
      Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.
  - name: --no-wait
    defaultValue: "False"
    summary: |-
      Do not wait for the long-running operation to finish.
  - name: --number-of-workers
    defaultValue: "1"
    summary: |-
      Number of workers to be allocated.
  - name: --per-site-scaling
    defaultValue: "False"
    summary: |-
      Enable per-app scaling at the App Service plan level to allow for scaling an app independently from the App Service plan that hosts it.
  - name: --sku
    summary: |-
      The pricing tiers, e.g., F1(Free), D1(Shared), B1(Basic Small), B2(Basic Medium), B3(Basic Large), S1(Standard Small), P1V2(Premium V2 Small), PC2 (Premium Container Small), PC3 (Premium Container Medium), PC4 (Premium Container Large), I1 (Isolated Small), I2 (Isolated Medium), I3 (Isolated Large), I1v2 (Isolated V2 Small), I2v2 (Isolated V2 Medium), I3v2(Isolated V2 Large) K1 (Kubernetes).
  - name: --tags
    summary: |-
      Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags.
- uid: az_appservice_plan_list
  name: az appservice plan list
  summary: |-
    List app service plans.
  status: GA
  sourceType: Extension
  syntax: az appservice plan list [--resource-group]
  examples:
  - summary: |-
      List all free tier App Service plans.
    syntax: az appservice plan list --query "[?sku.tier=='Free']"
  - summary: |-
      List all App Service plans for an App Service environment.
    syntax: az appservice plan list --query "[?hostingEnvironmentProfile.name=='<ase-name>']"
  optionalParameters:
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_appservice_plan_show
  name: az appservice plan show
  summary: |-
    Get the app service plans for a resource group or a set of resource groups.
  status: GA
  sourceType: Extension
  syntax: >-
    az appservice plan show [--ids]
                            [--name]
                            [--resource-group]
                            [--subscription]
  examples:
  - summary: |-
      Get the app service plans for a resource group or a set of resource groups. (autogenerated)
    syntax: az appservice plan show --name MyAppServicePlan --resource-group MyResourceGroup
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      The name of the app service plan.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- uid: az_appservice_plan_update
  name: az appservice plan update
  summary: |-
    Update an app service plan. See https://docs.microsoft.com/azure/app-service/app-service-plan-manage#move-an-app-to-another-app-service-plan to learn more.
  status: GA
  sourceType: Extension
  syntax: >-
    az appservice plan update [--ids]
                              [--name]
                              [--no-wait]
                              [--number-of-workers]
                              [--resource-group]
                              [--sku {ANY, B1, B2, B3, D1, ELASTICANY, F1, FREE, I1, I2, I3, P1V2, P2V2, P3V2, PC2, PC3, PC4, S1, S2, S3, SHARED}]
                              [--subscription]
  examples:
  - summary: |-
      Update an app service plan. (autogenerated)
    syntax: az appservice plan update --name MyAppServicePlan --resource-group MyResourceGroup --sku F1
  - summary: |-
      Update a kubernetes app service plan.
    syntax: >-
      az appservice plan update --name MyAppServicePlan --resource-group MyResourceGroup \
          --sku ANY --number-of-workers 3
  optionalParameters:
  - name: --ids
    summary: |-
      One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
  - name: --name -n
    summary: |-
      The name of the app service plan.
  - name: --no-wait
    defaultValue: "False"
    summary: |-
      Do not wait for the long-running operation to finish.
  - name: --number-of-workers
    defaultValue: "1"
    summary: |-
      Number of workers to be allocated.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --sku
    parameterValueGroup: "ANY, B1, B2, B3, D1, ELASTICANY, F1, FREE, I1, I2, I3, P1V2, P2V2, P3V2, PC2, PC3, PC4, S1, S2, S3, SHARED"
    summary: |-
      The pricing tiers, e.g., F1(Free), D1(Shared), B1(Basic Small), B2(Basic Medium), B3(Basic Large), S1(Standard Small), P1V2(Premium V2 Small), PC2 (Premium Container Small), PC3 (Premium Container Medium), PC4 (Premium Container Large), I1 (Isolated Small), I2 (Isolated Medium), I3 (Isolated Large), K1 (Kubernetes).
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
commands:
- az_appservice_plan_create
- az_appservice_plan_list
- az_appservice_plan_show
- az_appservice_plan_update
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: Manage app service plans.
