### YamlMime:AzureCLIGroup
uid: az_ml_data
name: az ml data
extensionInformation: >-
  > [!NOTE]

  > This reference is part of the **ml** extension for the Azure CLI (version 2.15.0 or higher). The extension will automatically install the first time you run an **az ml data** command. [Learn more](https://learn.microsoft.com/cli/azure/azure-cli-extensions-overview) about extensions.
summary: |-
  Manage Azure ML data assets.
description: |-
  Azure ML data assets are references to file(s) in your storage services or public URLs along with any corresponding metadata. They are not copies of your data. You can use these data assets to access relevant data during model training and mount or download the referenced data to your compute target.
status: GA
sourceType: Extension
directCommands:
- uid: az_ml_data_archive
  name: az ml data archive
  summary: |-
    Archive a data asset.
  description: |-
    Archiving a data asset will hide it by default from list queries (`az ml data list`). You can still continue to reference and use an archived data asset in your workflows. You can archive either a data asset container or a specific data asset version. Archiving a data asset container will archive all versions of the data asset under that given name. You can restore an archived data asset using `az ml data restore`. If the entire data asset container is archived, you cannot restore individual versions of the data asset - you will need to restore the data asset container.
  status: GA
  sourceType: Extension
  syntax: >-
    az ml data archive --name
                       [--label]
                       [--resource-group]
                       [--version]
                       [--workspace-name]
  examples:
  - summary: |-
      Archive an data asset container (archives all versions of that data asset)
    syntax: az ml data archive --name my-env --resource-group my-resource-group --workspace-name my-workspace
  - summary: |-
      Archive a specific data asset version
    syntax: az ml data archive --name my-env --version 1 --resource-group my-resource-group --workspace-name my-workspace
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      Name of the data asset.
  optionalParameters:
  - name: --label -l
    summary: |-
      Label of the data asset. Mutually exclusive with version.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --version -v
    summary: |-
      Version of the data asset. Mutually exclusive with label.
  - name: --workspace-name -w
    summary: |-
      Name of the Azure ML workspace. You can configure the default group using `az configure --defaults workspace=<name>`.
- uid: az_ml_data_create
  name: az ml data create
  summary: |-
    Create a data asset in a workspace/registry. If you are using a registry, replace `--workspace-name my-workspace` with the `--registry-name <registry-name>` option.
  description: |-
    Data assets can be defined from files on your local machine or as references to files in cloud storage. The created data asset will be tracked in the workspace/registry under the specified name and version.

    To create a data asset from file(s) on your local machine, specify the 'path' field in your YAML config. Azure ML will upload these file(s) to the blob container that backs the workspace's default datastore (named 'workspaceblobstore'). The created data asset will then point to that uploaded data.

    To create a data asset that references file(s) in cloud storage, specify the 'path' to the file(s) in storage in your YAML config.

    You can also create a data asset directly from a storage URL or public URL. To do so, specify the URL to the 'path' field in your YAML config.
    If you are using a registry, replace `--workspace-name my-workspace` with the `--registry-name <my-registry-name>` option.
  status: GA
  sourceType: Extension
  syntax: >-
    az ml data create [--datastore]
                      [--description]
                      [--file]
                      [--name]
                      [--no-wait]
                      [--path]
                      [--registry-name]
                      [--resource-group]
                      [--set]
                      [--skip-validation]
                      [--type {mltable, uri_file, uri_folder}]
                      [--version]
                      [--workspace-name]
  examples:
  - summary: |-
      Create a data asset from a YAML specification file in a workspace
    syntax: az ml data create --file data.yml --resource-group my-resource-group --workspace-name my-workspace
  - summary: |-
      Create a data asset from a YAML specification file in a registry
    syntax: az ml data create --file data.yml --registry-name my-registry-name
  - summary: |-
      Create a data asset without using a YAML specification file in a workspace
    syntax: az ml data create --name my-data --version 1 --path ./my-data.csv --resource-group my-resource-group --workspace-name my-workspace
  - summary: |-
      Create a data asset without using a YAML specification file in a registry
    syntax: az ml data create --name my-data --version 1 --path ./my-data.csv --registry-name my-registry-name
  optionalParameters:
  - name: --datastore
    summary: |-
      The datastore to upload the local artifact to.
  - name: --description -d
    summary: |-
      Description of the data asset.
  - name: --file -f
    summary: |-
      Local path to the YAML file containing the Azure ML data specification. The YAML reference docs for data can be found at: https://aka.ms/ml-cli-v2-data-yaml-reference.
  - name: --name -n
    summary: |-
      Name of the data asset. Required if --registry-name is provided.
  - name: --no-wait
    defaultValue: "False"
    summary: |-
      Do not wait for the long-running-operation to finish. Default is False.
  - name: --path -p
    summary: |-
      Path to the data asset, can be local or remote.
  - name: --registry-name
    summary: |-
      If provided, the command will target the registry instead of a workspace. Hence resource group and workspace won't be required. Must be provided if --workspace-name and --resource-group are not provided.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --set
    summary: |-
      Update an object by specifying a property path and value to set. Example: --set property1.property2=<value>.
  - name: --skip-validation
    defaultValue: "False"
    summary: |-
      Skip validation of MLTable metadata when type is MLTable.
  - name: --type -t
    parameterValueGroup: "mltable, uri_file, uri_folder"
    summary: |-
      Type of the data asset.
  - name: --version -v
    summary: |-
      Version of the data asset. Required if --registry-name is provided.
  - name: --workspace-name -w
    summary: |-
      Name of the Azure ML workspace. You can configure the default group using `az configure --defaults workspace=<name>`.
- uid: az_ml_data_import
  name: az ml data import
  summary: |-
    Import data and create a data asset.
  description: |-
    Data asset can be created by first importing data from database or filesystem to cloud storage. The created data asset will be tracked in the workspace under the specified name and version.

    Specify 'query' of database table or 'path' on filesystem fields in your YAML config. Azure ML will run a job to copy the data to cloud storage first .
  status: Preview
  isPreview: true
  previewOrExperimentalInfo: 'This command is in preview and under development. Reference and support levels: https://aka.ms/CLI_refstatus'
  sourceType: Extension
  syntax: >-
    az ml data import --resource-group
                      --workspace-name
                      [--datastore]
                      [--description]
                      [--file]
                      [--name]
                      [--path]
                      [--set]
                      [--skip-validation]
                      [--type {mltable, uri_file, uri_folder}]
                      [--version]
  examples:
  - summary: |-
      Import a data asset from a YAML specification file
    syntax: az ml data import --file dataimport.yml --resource-group my-resource-group --workspace-name my-workspace
  requiredParameters:
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - isRequired: true
    name: --workspace-name -w
    summary: |-
      Name of the Azure ML workspace. You can configure the default group using `az configure --defaults workspace=<name>`.
  optionalParameters:
  - name: --datastore
    summary: |-
      The datastore to upload the local artifact to.
  - name: --description -d
    summary: |-
      Description of the data asset.
  - name: --file -f
    summary: |-
      Local path to the YAML file containing the Azure ML data specification. The YAML reference docs for data can be found at: https://aka.ms/ml-cli-v2-data-yaml-reference.
  - name: --name -n
    summary: |-
      Name of the data asset.
  - name: --path -p
    summary: |-
      Path to the data asset on cloud storage.
  - name: --set
    summary: |-
      Update an object by specifying a property path and value to set. Example: --set property1.property2=<value>.
  - name: --skip-validation
    defaultValue: "False"
    summary: |-
      Skip validation of compute resource referenced by underlying data import materialization job.
  - name: --type -t
    parameterValueGroup: "mltable, uri_file, uri_folder"
    summary: |-
      Type of the data asset.
  - name: --version -v
    summary: |-
      Version of the data asset.
- uid: az_ml_data_list
  name: az ml data list
  summary: |-
    List data assets in a workspace/registry. If you are using a registry, replace `--workspace-name my-workspace` with the `--registry-name <registry-name>` option.
  status: GA
  sourceType: Extension
  syntax: >-
    az ml data list [--archived-only]
                    [--include-archived]
                    [--max-results]
                    [--name]
                    [--registry-name]
                    [--resource-group]
                    [--workspace-name]
  examples:
  - summary: |-
      List all the data assets in a workspace
    syntax: az ml data list --resource-group my-resource-group --workspace-name my-workspace
  - summary: |-
      List all the data asset versions for the specified name in a workspace
    syntax: az ml data list --name my-data --resource-group my-resource-group --workspace-name my-workspace
  - summary: |-
      List all the data assets in a workspace using --query argument to execute a JMESPath query on the results of commands.
    syntax: az ml data list --query "[].{Name:name}" --output table --resource-group my-resource-group --workspace-name my-workspace
  - summary: |-
      List all the data assets in a registry
    syntax: az ml data list --registry-name my-registry-name
  - summary: |-
      List all the data asset versions for the specified name in a registry
    syntax: az ml data list --name my-data --registry-name my-registry-name
  optionalParameters:
  - name: --archived-only
    defaultValue: "False"
    summary: |-
      List archived data assets only.
  - name: --include-archived
    defaultValue: "False"
    summary: |-
      List archived data assets and active data assets.
  - name: --max-results -r
    summary: |-
      Max number of results to return.
  - name: --name -n
    summary: |-
      Name of the data asset. If provided, all the data versions under this name will be returned.
  - name: --registry-name
    summary: |-
      If provided, the command will target the registry instead of a workspace. Hence resource group and workspace won't be required. Must be provided if --workspace-name and --resource-group are not provided.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --workspace-name -w
    summary: |-
      Name of the Azure ML workspace. You can configure the default group using `az configure --defaults workspace=<name>`.
- uid: az_ml_data_list-materialization-status
  name: az ml data list-materialization-status
  summary: |-
    Show status of list of data import materialization jobs that create versions of a data asset.
  status: Preview
  isPreview: true
  previewOrExperimentalInfo: 'This command is in preview and under development. Reference and support levels: https://aka.ms/CLI_refstatus'
  sourceType: Extension
  syntax: >-
    az ml data list-materialization-status --resource-group
                                           --workspace-name
                                           [--all-results {false, true}]
                                           [--archived-only]
                                           [--include-archived]
                                           [--max-results]
                                           [--name]
  examples:
  - summary: |-
      Show materialization status of a data asset from a YAML specification file
    syntax: az ml data list-materialization-status --name asset-name --resource-group my-resource-group --workspace-name my-workspace
  requiredParameters:
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - isRequired: true
    name: --workspace-name -w
    summary: |-
      Name of the Azure ML workspace. You can configure the default group using `az configure --defaults workspace=<name>`.
  optionalParameters:
  - name: --all-results
    defaultValue: "False"
    parameterValueGroup: "false, true"
    summary: |-
      Returns all results.
  - name: --archived-only
    defaultValue: "False"
    summary: |-
      List archived jobs only.
  - name: --include-archived
    defaultValue: "False"
    summary: |-
      List archived jobs and active jobs.
  - name: --max-results -r
    defaultValue: "50"
    summary: |-
      Max number of results to return. Default is 50.
  - name: --name -p
    summary: |-
      Name of the asset. Will list all materialization jobs that create versions of the asset matching the given name.
- uid: az_ml_data_restore
  name: az ml data restore
  summary: |-
    Restore an archived data asset.
  description: |-
    When an archived data asset is restored, it will no longer be hidden from list queries (`az ml data list`). If an entire data asset container is archived, you can restore that archived container. This will restore all versions of the data asset under that given name. You cannot restore only a specific data asset version if the entire data asset container is archived - you will need to restore the entire container. If only an individual data asset version was archived, you can restore that specific version.
  status: GA
  sourceType: Extension
  syntax: >-
    az ml data restore --name
                       [--label]
                       [--resource-group]
                       [--version]
                       [--workspace-name]
  examples:
  - summary: |-
      Restore an archived data asset container (restores all versions of that data asset)
    syntax: az ml data restore --name my-env --resource-group my-resource-group --workspace-name my-workspace
  - summary: |-
      Restore a specific archived data asset version
    syntax: az ml data restore --name my-env --version 1 --resource-group my-resource-group --workspace-name my-workspace
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      Name of the data asset.
  optionalParameters:
  - name: --label -l
    summary: |-
      Label of the data asset. Mutually exclusive with version.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --version -v
    summary: |-
      Version of the data asset. Mutually exclusive with label.
  - name: --workspace-name -w
    summary: |-
      Name of the Azure ML workspace. You can configure the default group using `az configure --defaults workspace=<name>`.
- uid: az_ml_data_share
  name: az ml data share
  summary: |-
    Share a specific data asset from workspace to registry.
  description: |-
    Copy an existing data asset from a workspace to a registry for cross-workspace reuse.
  status: Preview
  isPreview: true
  previewOrExperimentalInfo: 'This command is in preview and under development. Reference and support levels: https://aka.ms/CLI_refstatus'
  sourceType: Extension
  syntax: >-
    az ml data share --name
                     --registry-name
                     --resource-group
                     --share-with-name
                     --share-with-version
                     --version
                     --workspace-name
  examples:
  - summary: |-
      Share an existing data asset from workspace to registry
    syntax: az ml data share --name my-data --version my-version --resource-group my-resource-group --workspace-name my-workspace --share-with-name new-name-in-registry --share-with-version new-version-in-registry --registry-name my-registry
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      Name of the data asset.
  - isRequired: true
    name: --registry-name
    summary: |-
      Destination registry.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - isRequired: true
    name: --share-with-name
    summary: |-
      Name  of the data asset to be created with.
  - isRequired: true
    name: --share-with-version
    summary: |-
      Version  of the data asset to be created with.
  - isRequired: true
    name: --version -v
    summary: |-
      Version of the data asset.
  - isRequired: true
    name: --workspace-name -w
    summary: |-
      Name of the Azure ML workspace. You can configure the default group using `az configure --defaults workspace=<name>`.
- uid: az_ml_data_show
  name: az ml data show
  summary: |-
    Shows details for a data asset in a workspace/registry. If you are using a registry, replace `--workspace-name my-workspace` with the `--registry-name <registry-name>` option.
  status: GA
  sourceType: Extension
  syntax: >-
    az ml data show --name
                    [--label]
                    [--registry-name]
                    [--resource-group]
                    [--version]
                    [--workspace-name]
  examples:
  - summary: |-
      Show details for a data asset with the specified name and version in a workspace
    syntax: az ml data show --name my-data --version 1 --resource-group my-resource-group --workspace-name my-workspace
  - summary: |-
      Show details for a data asset with the specified name and label
    syntax: az ml data show --name my-data --label latest --resource-group my-resource-group --workspace-name my-workspace
  - summary: |-
      Show details for a data asset with the specified name and version in a registry
    syntax: az ml data show --name my-data --version 1 --registry-name my-registry-name
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      Name of the data asset.
  optionalParameters:
  - name: --label -l
    summary: |-
      Label of the data asset. Must be provided, if version is not provided. Mutually exclusive with version.
  - name: --registry-name
    summary: |-
      If provided, the command will target the registry instead of a workspace. Hence resource group and workspace won't be required. Must be provided if --workspace-name and --resource-group are not provided.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --version -v
    summary: |-
      Version of the data asset. Must be provided, if label is not provided. Mutually exclusive with label.
  - name: --workspace-name -w
    summary: |-
      Name of the Azure ML workspace. You can configure the default group using `az configure --defaults workspace=<name>`.
- uid: az_ml_data_update
  name: az ml data update
  summary: |-
    Update a data asset.
  description: |-
    Only the 'description' and 'tags' properties can be updated.
  status: GA
  sourceType: Extension
  syntax: >-
    az ml data update --name
                      --resource-group
                      --workspace-name
                      [--add]
                      [--force-string]
                      [--label]
                      [--registry-name]
                      [--remove]
                      [--set]
                      [--version]
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      Name of the data asset.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - isRequired: true
    name: --workspace-name -w
    summary: |-
      Name of the Azure ML workspace. You can configure the default group using `az configure --defaults workspace=<name>`.
  optionalParameters:
  - name: --add
    defaultValue: "[]"
    summary: |-
      Add an object to a list of objects by specifying a path and key value pairs.  Example: --add property.listProperty <key=value, string or JSON string>.
  - name: --force-string
    defaultValue: "False"
    summary: |-
      When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.
  - name: --label -l
    summary: |-
      Label of the data asset. Must be provided, if version is not provided. Mutually exclusive with version.
  - name: --registry-name
    summary: |-
      If provided, the command will target the registry instead of a workspace. Hence resource group and workspace won't be required. Must be provided if --workspace-name and --resource-group are not provided.
  - name: --remove
    defaultValue: "[]"
    summary: |-
      Remove a property or an element from a list.  Example: --remove property.list <indexToRemove> OR --remove propertyToRemove.
  - name: --set
    defaultValue: "[]"
    summary: |-
      Update an object by specifying a property path and value to set.  Example: --set property1.property2=<value>.
  - name: --version -v
    summary: |-
      Version of the data asset. Must be provided, if label is not provided. Mutually exclusive with label.
commands:
- az_ml_data_archive
- az_ml_data_create
- az_ml_data_import
- az_ml_data_list
- az_ml_data_list-materialization-status
- az_ml_data_restore
- az_ml_data_share
- az_ml_data_show
- az_ml_data_update
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: Azure ML data assets are references to file(s) in your storage services or public URLs along with any corresponding metadata. They are not copies of your data. You can use these data assets to access relevant data during model training and mount or download the referenced data to your compute target.
