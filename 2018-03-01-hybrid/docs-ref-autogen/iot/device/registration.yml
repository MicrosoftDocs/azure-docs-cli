### YamlMime:AzureCLIGroup
uid: az_iot_device_registration
name: az iot device registration
extensionInformation: >-
  > [!NOTE]

  > This reference is part of the **azure-iot** extension for the Azure CLI (version 2.37.0 or higher). The extension will automatically install the first time you run an **az iot device registration** command. [Learn more](https://learn.microsoft.com/cli/azure/azure-cli-extensions-overview) about extensions.
summary: |-
  Manage IoT device registrations for the IoT Device Provisioning Service.
description: |-
  Use `az iot dps enrollment registration` or `az iot dps enrollment-group registration` to view and delete registrations.
status: Preview
isPreview: true
previewOrExperimentalInfo: 'This command group is in preview and under development. Reference and support levels: https://aka.ms/CLI_refstatus'
sourceType: Extension
directCommands:
- uid: az_iot_device_registration_create
  name: az iot device registration create
  summary: |-
    Register an IoT device with the IoT Device Provisioning Service.
  description: |-
    The following attestation mechanisms are supported:
    - Symmetric key
    - x509 certificate
    If using x509 authentication methods, the certificate and key files (and passphrase if needed) must be provided.
  status: Preview
  isPreview: true
  previewOrExperimentalInfo: "Command group 'iot device registration' is in preview and under development. Reference and support levels: https://aka.ms/CLI_refstatus"
  sourceType: Extension
  syntax: >-
    az iot device registration create --registration-id
                                      [--auth-type {key, login}]
                                      [--certificate-file-path]
                                      [--ck]
                                      [--dps-name]
                                      [--enrollment-group-id]
                                      [--host]
                                      [--id-scope]
                                      [--key]
                                      [--key-file-path]
                                      [--login]
                                      [--pass]
                                      [--payload]
                                      [--resource-group]
  examples:
  - summary: |-
      Register an IoT device using an individual enrollment.
    syntax: az iot device registration create -n {dps_name} --rid {registration_id}
  - summary: |-
      Register an IoT device using a group enrollment.
    syntax: az iot device registration create -n {dps_name} --rid {registration_id} --gid {group_enrollment_id}
  - summary: |-
      Register an IoT device using an individual enrollment, the Device Provisioning Service ID Scope, and given symmetric key. This will bypass retrieving the ID Scope and individal enrollment symmetric key.
    syntax: az iot device registration create --id-scope {id_scope} --rid {registration_id} --key {symmetric_key}
  - summary: |-
      Register an IoT device using a group enrollment, the Device Provisioning Service ID Scope, and given enrollment group symmetric key. This will bypass retrieving the ID Scope and enrollment-group symmetric key. The symmetric key used for the device registration will be computed from the given symmetric key.
    syntax: az iot device registration create --id-scope {id_scope} --rid {registration_id} --gid {group_enrollment_id} --key {symmetric_key} --ck
  - summary: |-
      Register an IoT device using a group enrollment, the Device Provisioning Service ID Scope, and given symmetric key. This will bypass retrieving the ID Scope. Note that since the symmetric key should be the computed device key, the enrollment group id is not needed.
    syntax: az iot device registration create --id-scope {id_scope} --rid {registration_id} --key {symmetric_key}
  - summary: |-
      Register an IoT device using an individual enrollment, the Device Provisioning Service ID Scope, and given certificate and key files. This will bypass retrieving the ID Scope.
    syntax: az iot device registration create --id-scope {id_scope} --rid {registration_id} --cp {certificate_file} --kp {key_file}
  - summary: |-
      Register an IoT device using an individual enrollment, the Device Provisioning Service ID Scope, and given certificate and key files and passphrase for the key file. This will bypass retrieving the ID Scope.
    syntax: az iot device registration create --id-scope {id_scope} --rid {registration_id} --cp {certificate_file} --kp {key_file} --pass {passphrase}
  - summary: |-
      Register an IoT device using a group enrollment, the Device Provisioning Service ID Scope, and given certificate and key files. This will bypass retrieving the ID Scope. Note that the group enrollment id is not needed for x509 attestations and the subject of the certificate file is the registration id.
    syntax: az iot device registration create --id-scope {id_scope} --rid {registration_id} --cp {certificate_file} --kp {key_file}
  requiredParameters:
  - isRequired: true
    name: --registration-id --rid
    summary: |-
      Device registration ID or individual enrollment ID.
  optionalParameters:
  - name: --auth-type
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      Indicates whether the operation should auto-derive a policy key or use the current Azure AD session. If the authentication type is login and the resource hostname is provided, resource lookup will be skipped unless needed.You can configure the default using `az configure --defaults iothub-data-auth-type=<auth-type-value>`.
  - name: --certificate-file-path --cp
    summary: |-
      Path to certificate PEM file. Required for x509 registrations.
  - name: --ck --compute-key
    defaultValue: "False"
    summary: |-
      Flag to indicate that the symmetric key for the device registration should be computed from the given key with --symmetric-key.
  - name: --dps-name -n
    summary: |-
      Name of the Azure IoT Hub Device Provisioning Service. Required if --login is not provided or authenticaton arguments and --id-scope are not provided.
  - name: --enrollment-group-id --gid --group-id
    summary: |-
      Enrollment group ID. Only needed to retrieve authentication arguments.
  - name: --host --provisioning-host
    defaultValue: "global.azure-devices-provisioning.net"
    summary: |-
      Endpoint pointing to the provisioning host to use.
  - name: --id-scope --scope
    summary: |-
      Id Scope of the Azure IoT Hub Device Provisioning Service. If provided with authentication arguments, will avoid session login.
  - name: --key --symmetric-key
    summary: |-
      The symmetric shared access key for the device registration.
  - name: --key-file-path --kp
    summary: |-
      Path to key PEM file. Required for x509 registrations.
  - name: --login -l
    summary: |-
      This command supports an entity connection string with rights to perform action. Use to avoid session login via "az login". If both an entity connection string and name are provided the connection string takes priority. Required if --dps-name is not provided or authenticaton arguments and --id-scope are not provided.
  - name: --pass --passphrase
    summary: |-
      Passphrase for the certificate.
  - name: --payload
    summary: |-
      Custom allocation payload as JSON. Specifically for use with custom allocation policies using Azure Functions.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
commands:
- az_iot_device_registration_create
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: Use `az iot dps enrollment registration` or `az iot dps enrollment-group registration` to view and delete registrations.
