### YamlMime:AzureCLIGroup
uid: az_iot_hub_state
name: az iot hub state
extensionInformation: >-
  > [!NOTE]

  > This reference is part of the **azure-iot** extension for the Azure CLI (version 2.46.0 or higher). The extension will automatically install the first time you run an **az iot hub state** command. [Learn more](https://learn.microsoft.com/cli/azure/azure-cli-extensions-overview) about extensions.
summary: |-
  Manage the state of an IoT Hub.
description: |-
  For more information, see aka.ms/aziotcli-iot-hub-state.
status: Experimental
isExperimental: true
previewOrExperimentalInfo: 'This command group is experimental and under development. Reference and support levels: https://aka.ms/CLI_refstatus'
sourceType: Extension
directCommands:
- uid: az_iot_hub_state_export
  name: az iot hub state export
  summary: |-
    Export the state of an IoT Hub to a file.
  description: |-
    By default, the exported state will include: arm template for hub, hub configurations (including ADM
    configurations and edge deployments), device information (including device identites,
    device twins, module identities and module twins).

    For more information, see aka.ms/aziotcli-iot-hub-state.
  status: Experimental
  isExperimental: true
  previewOrExperimentalInfo: "Command group 'iot hub state' is experimental and under development. Reference and support levels: https://aka.ms/CLI_refstatus"
  sourceType: Extension
  syntax: >-
    az iot hub state export --state-file
                            [--aspects {arm, configurations, devices}]
                            [--auth-type {key, login}]
                            [--hub-name]
                            [--login]
                            [--replace]
                            [--resource-group]
  examples:
  - summary: |-
      Export the supported state of the specified hub to the specified file.
    syntax: az iot hub state export -n {iothub_name} -f {state_filename}
  - summary: |-
      Export the supported state of the specified hub to the specified file, overwriting the file contents.
    syntax: az iot hub state export -n {iothub_name} -f {state_filename} -r
  - summary: |-
      Export only the devices and configurations of the specified hub to the specified file.
    syntax: az iot hub state export -n {iothub_name} -f {state_filename} --aspects devices configurations
  requiredParameters:
  - isRequired: true
    name: --state-file -f
    summary: |-
      The path to the file where the state information will be stored.
  optionalParameters:
  - name: --aspects
    parameterValueGroup: "arm, configurations, devices"
    summary: |-
      Hub Aspects (space-separated).
  - name: --auth-type
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      Indicates whether the operation should auto-derive a policy key or use the current Azure AD session. If the authentication type is login and the resource hostname is provided, resource lookup will be skipped unless needed.You can configure the default using `az configure --defaults iothub-data-auth-type=<auth-type-value>`.
  - name: --hub-name -n
    summary: |-
      IoT Hub name or hostname. Required if --login is not provided.
  - name: --login -l
    summary: |-
      This command supports an entity connection string with rights to perform action. Use to avoid session login via "az login". If both an entity connection string and name are provided the connection string takes priority. Required if --hub-name is not provided.
  - name: --replace -r
    defaultValue: "False"
    summary: |-
      If this flag is set, then the command will overwrite the contents of the output file.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_iot_hub_state_import
  name: az iot hub state import
  summary: |-
    Import a Hub state from a file to an IoT Hub.
  description: |-
    If the arm aspect is specified, the hub will be created if it does not exist.

    By default, the imported state will include: arm template for hub, hub configurations (including ADM
    configurations and edge deployments), device information (including device identites,
    device twins, module identities and module twins).

    For imported endpoints with system assigned identity authentication, the specified hub must have
    the correct permissions. Otherwise the command will fail.

    Private endpoints will be ignored in the import process.

    For more information, see aka.ms/aziotcli-iot-hub-state.
  status: Experimental
  isExperimental: true
  previewOrExperimentalInfo: "Command group 'iot hub state' is experimental and under development. Reference and support levels: https://aka.ms/CLI_refstatus"
  sourceType: Extension
  syntax: >-
    az iot hub state import --state-file
                            [--aspects {arm, configurations, devices}]
                            [--auth-type {key, login}]
                            [--hub-name]
                            [--login]
                            [--replace]
                            [--resource-group]
  examples:
  - summary: |-
      Import the supported state from the specified file to the specified hub.
    syntax: az iot hub state import -n {iothub_name} -f {state_filename}
  - summary: |-
      Import the supported state from the specified file to the specified hub, overwriting the previous state of the hub. All certificates, configurations, and devices will be deleted before the new state is uploaded.
    syntax: az iot hub state import -n {iothub_name} -f {state_filename} -r
  - summary: |-
      Import only the arm template from the specified file to the specified hub. Note that this will create a new hub if it does not exist. The file may contain the devices and configurations but those will be ignored.
    syntax: az iot hub state import -n {iothub_name} -g {resource_group} -f {state_filename} --aspects arm
  - summary: |-
      Import only the devices and configurations from the specified file to the specified hub. Note that this will NOT create a new hub if it does not exist and the command will fail. The file may contain the arm template but that will be ignored.
    syntax: az iot hub state import -n {iothub_name} -f {state_filename} --aspects devices configurations
  requiredParameters:
  - isRequired: true
    name: --state-file -f
    summary: |-
      The path to the file where the state information will be stored.
  optionalParameters:
  - name: --aspects
    parameterValueGroup: "arm, configurations, devices"
    summary: |-
      Hub Aspects (space-separated).
  - name: --auth-type
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      Indicates whether the operation should auto-derive a policy key or use the current Azure AD session. If the authentication type is login and the resource hostname is provided, resource lookup will be skipped unless needed.You can configure the default using `az configure --defaults iothub-data-auth-type=<auth-type-value>`.
  - name: --hub-name -n
    summary: |-
      IoT Hub name or hostname. Required if --login is not provided.
  - name: --login -l
    summary: |-
      This command supports an entity connection string with rights to perform action. Use to avoid session login via "az login". If both an entity connection string and name are provided the connection string takes priority. Required if --hub-name is not provided.
  - name: --replace -r
    defaultValue: "False"
    summary: |-
      If this flag is set, then the command will delete the current devices, configurations, and certificates of the destination hub.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_iot_hub_state_migrate
  name: az iot hub state migrate
  summary: |-
    Migrate the state of one hub to another hub without saving to a file.
  description: |-
    If the arm aspect is specified, the hub will be created if it does not exist.

    By default, the migrated state will include: arm template for hub, hub configurations (including ADM
    configurations and edge deployments), device information (including device identites,
    device twins, module identities and module twins).

    For migrated endpoints with system assigned identity authentication, the specified hub must have
    the correct permissions. Otherwise the command will fail.

    Private endpoints will be ignored in the migration process.

    If you have trouble migrating, please use the export and import commands to have a file as a backup.

    For more information, see aka.ms/aziotcli-iot-hub-state.
  status: Experimental
  isExperimental: true
  previewOrExperimentalInfo: "Command group 'iot hub state' is experimental and under development. Reference and support levels: https://aka.ms/CLI_refstatus"
  sourceType: Extension
  syntax: >-
    az iot hub state migrate [--aspects {arm, configurations, devices}]
                             [--auth-type {key, login}]
                             [--destination-hub]
                             [--destination-hub-login]
                             [--destination-resource-group]
                             [--og]
                             [--oh]
                             [--ol]
                             [--replace]
  examples:
  - summary: |-
      Migrate the supported state of the origin hub to the destination hub.
    syntax: az iot hub state migrate --destination-hub {dest_hub_name} --origin-hub {orig_hub_name}
  - summary: |-
      Migrate the supported state of the origin hub to the destination hub, overwriting the previous state of the hub. All certificates, configurations, and devices in the destination hub will be deleted before the new state is uploaded.
    syntax: az iot hub state migrate --destination-hub {dest_hub_name} --origin-hub {orig_hub_name} -r
  - summary: |-
      Migrate only the arm template from the origin hub to the destination hub. Note that this will create a new hub if the destination hub does not exist. The origin hub may contain the devices and configurations but those will be ignored.
    syntax: az iot hub state migrate --destination-hub {dest_hub_name} --destination-resource-group {dest_hub_resource_group} --origin-hub {orig_hub_name} --aspects arm
  - summary: |-
      Migrate only the devices and configurations from the origin hub to the destination hub. Note that this will NOT create a new hub if the destination hub does not exist and the command will fail. The arm template for the origin hub will be ignored.
    syntax: az iot hub state migrate --destination-hub {dest_hub_name} --origin-hub {orig_hub_name} --aspects devices configurations
  optionalParameters:
  - name: --aspects
    parameterValueGroup: "arm, configurations, devices"
    summary: |-
      Hub Aspects (space-separated).
  - name: --auth-type
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      Indicates whether the operation should auto-derive a policy key or use the current Azure AD session. If the authentication type is login and the resource hostname is provided, resource lookup will be skipped unless needed.You can configure the default using `az configure --defaults iothub-data-auth-type=<auth-type-value>`.
  - name: --destination-hub --dh
    summary: |-
      Name of IoT Hub to which the origin hub state will be copied to.
  - name: --destination-hub-login --dl
    summary: |-
      This command supports an entity connection string with rights to perform action on the destination hub. Use to avoid session login via `az login` for this IoT Hub instance. If both an entity connection string and name are provided the connection string takes priority. Required if --destination-hub is not provided.
  - name: --destination-resource-group --dg
    summary: |-
      Name of resource group of the IoT Hub to which the origin hub state will be copied to. If not provided, will use the origin IoT Hub's resource group.
  - name: --og --origin-resource-group
    summary: |-
      Name of resource group of the IoT Hub which will be copied.
  - name: --oh --origin-hub
    summary: |-
      Name of IoT Hub which will be copied.
  - name: --ol --origin-hub-login
    summary: |-
      This command supports an entity connection string with rights to perform action on the origin hub. Use to avoid session login via `az login` for this IoT Hub instance. If both an entity connection string and name are provided the connection string takes priority. Required if --origin-hub is not provided.
  - name: --replace -r
    defaultValue: "False"
    summary: |-
      If this flag is set, then the command will delete the current devices, configurations, and certificates of the destination hub.
commands:
- az_iot_hub_state_export
- az_iot_hub_state_import
- az_iot_hub_state_migrate
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: For more information, see aka.ms/aziotcli-iot-hub-state.
