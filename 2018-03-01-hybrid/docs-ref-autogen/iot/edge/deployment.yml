### YamlMime:AzureCLIGroup
uid: az_iot_edge_deployment
name: az iot edge deployment
extensionInformation: >-
  > [!NOTE]

  > This reference is part of the **azure-iot** extension for the Azure CLI (version 2.37.0 or higher). The extension will automatically install the first time you run an **az iot edge deployment** command. [Learn more](https://learn.microsoft.com/cli/azure/azure-cli-extensions-overview) about extensions.
summary: |-
  Manage IoT Edge deployments at scale.
status: GA
sourceType: Extension
directCommands:
- uid: az_iot_edge_deployment_create
  name: az iot edge deployment create
  summary: |-
    Create an IoT Edge deployment in a target IoT Hub.
  description: |-
    Deployment content is json and in the form of {"modulesContent":{...}} or {"content":{"modulesContent":{...}}}.

    By default properties of system modules $edgeAgent and $edgeHub are validated against schemas installed with the IoT extension.
    This validation is intended for base deployments. If the corresponding schema is not available or base deployment format is not detected,
    this step will be skipped. Schema validation can be disabled by using the --no-validation switch.

    An edge deployment is classified as layered if a module has properties.desired.* defined.
    Any edge device targeted by a layered deployment, first needs a base deployment applied to it.

    Any layered deployments targeting a device must have a higher priority than the base deployment for that device.

    Note: If the properties.desired field of a module twin is set in a layered deployment,
    properties.desired will overwrite the desired properties for that module in any lower priority deployments.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot edge deployment create --content
                                  --deployment-id
                                  [--auth-type {key, login}]
                                  [--cl]
                                  [--cmq]
                                  [--hub-name]
                                  [--lab]
                                  [--layered {false, true}]
                                  [--login]
                                  [--metrics]
                                  [--no-validation {false, true}]
                                  [--pri]
                                  [--resource-group]
                                  [--target-condition]
  examples:
  - summary: |-
      Create a deployment with labels (bash syntax example) that applies for devices in 'building 9' and the environment is 'test'.
    syntax: az iot edge deployment create -d {deployment_name} -n {iothub_name} --content ./modules_content.json --labels '{"key0":"value0", "key1":"value1"}' --target-condition "tags.building=9 and tags.environment='test'" --priority 3
  - summary: |-
      Create a deployment with labels (powershell syntax example) that applies for devices tagged with environment 'dev'.
    syntax: az iot edge deployment create -d {deployment_name} -n {iothub_name} --content ./modules_content.json --labels "{'key':'value'}" --target-condition "tags.environment='dev'"
  - summary: |-
      Create a layered deployment that applies for devices tagged with environment 'dev'. Both user metrics and modules content defined inline (powershell syntax example). Note that this is in layered deployment format as properties.desired.* has been defined.
    syntax: >-
      az iot edge deployment create -d {deployment_name} -n {iothub_name} --content "{'modulesContent':{'`$edgeAgent':{
        'properties.desired.modules.mymodule0':{ }},'`$edgeHub':{'properties.desired.routes.myroute0':'FROM /messages/* INTO `$upstream'}}}"
      --target-condition "tags.environment='dev'" --priority 10 --metrics "{'queries':{'mymetrik':'SELECT deviceId from devices where properties.reported.lastDesiredStatus.code = 200'}}"
  - summary: |-
      Create a layered deployment that applies for devices in 'building 9' and environment 'test'. Both user metrics and modules content defined inline (bash syntax example). Note that this is in layered deployment format as properties.desired.* has been defined.
    syntax: az iot edge deployment create -d {deployment_name} -n {iothub_name} --content '{"modulesContent":{"$edgeAgent":{"properties.desired.modules.mymodule0":{ }},"$edgeHub":{"properties.desired.routes.myroute0":"FROM /messages/* INTO $upstream"}}}' --target-condition "tags.building=9 and tags.environment='test'" --metrics '{"queries":{"mymetrik":"SELECT deviceId from devices where properties.reported.lastDesiredStatus.code = 200"}}'
  - summary: |-
      Create a deployment that applies for devices in 'building 9' and environment 'test'. Both user metrics and modules content defined from file.
    syntax: az iot edge deployment create -d {deployment_name} -n {iothub_name} --content ./modules_content.json --target-condition "tags.building=9 and tags.environment='test'" --metrics ./metrics_content.json
  - summary: |-
      Create a deployment whose definition is from file with shell-agnostic input of labels and metrics.
    syntax: az iot edge deployment create -d {deployment_name} -n {iothub_name} --content ./modules_content.json --target-condition "tags.building=9 and tags.environment='test'" --custom-labels key0=value0 key1=value1 --custom-metric-queries mymetric1="select deviceId from devices where tags.location='US'" mymetric2="select *"
  requiredParameters:
  - isRequired: true
    name: --content -k
    summary: |-
      IoT Edge deployment content. Provide file path or raw json.
  - isRequired: true
    name: --deployment-id -d
    summary: |-
      Target deployment name. Lowercase and the following special characters are allowed: [-+%_*!'].
  optionalParameters:
  - name: --auth-type
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      Indicates whether the operation should auto-derive a policy key or use the current Azure AD session. If the authentication type is login and the resource hostname is provided, resource lookup will be skipped unless needed.You can configure the default using `az configure --defaults iothub-data-auth-type=<auth-type-value>`.
  - name: --cl --custom-labels
    summary: |-
      An alternative input style (space separated key=value pairs) for --labels and intended to replace it in the future. Format example: key1=value1 key2="this is my value".
  - name: --cmq --custom-metric-queries
    summary: |-
      An alternative input style (space separated key=value pairs) for --metrics and intended to replace it in the future. Format example: metric1="select deviceId from devices where tags.location='US'" metric2="select *".
  - name: --hub-name -n
    summary: |-
      IoT Hub name or hostname. Required if --login is not provided.
  - name: --lab --labels
    summary: |-
      Map of labels to be applied to target deployment. Use the following format: '{"key0":"value0", "key1":"value1"}'. Using --custom-labels instead of --labels is recommended.
  - name: --layered
    defaultValue: "False"
    parameterValueGroup: "false, true"
    summary: |-
      Layered deployments allow you to define desired properties in $edgeAgent, $edgeHub and user modules that will layer on top of a base deployment. The properties specified in a layered deployment will merge with properties of the base deployment. Properties with the same path will be overwritten based on deployment priority. This option is an alias for --no-validation.
  - name: --login -l
    summary: |-
      This command supports an entity connection string with rights to perform action. Use to avoid session login via "az login". If both an entity connection string and name are provided the connection string takes priority. Required if --hub-name is not provided.
  - name: --metrics -m
    summary: |-
      IoT Edge deployment user metric definitions. Provide file path or raw json. User metrics are in the form of {"queries":{...}} or {"metrics":{"queries":{...}}}. Using --custom-metric-queries instead of --metrics is recommended.
  - name: --no-validation
    defaultValue: "False"
    parameterValueGroup: "false, true"
    summary: |-
      Disables client side schema validation for edge deployment creation.
  - name: --pri --priority
    defaultValue: "0"
    summary: |-
      Weight of deployment in case of competing rules (highest wins).
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --target-condition --tc -t
    summary: |-
      Target condition in which an edge deployment applies to. Deployments with no target condition will target no device. Use the following format: "tags.environment='test'".
- uid: az_iot_edge_deployment_delete
  name: az iot edge deployment delete
  summary: |-
    Delete an IoT Edge deployment.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot edge deployment delete --deployment-id
                                  [--auth-type {key, login}]
                                  [--etag]
                                  [--hub-name]
                                  [--login]
                                  [--resource-group]
  requiredParameters:
  - isRequired: true
    name: --deployment-id -d
    summary: |-
      Target deployment name. Lowercase and the following special characters are allowed: [-+%_*!'].
  optionalParameters:
  - name: --auth-type
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      Indicates whether the operation should auto-derive a policy key or use the current Azure AD session. If the authentication type is login and the resource hostname is provided, resource lookup will be skipped unless needed.You can configure the default using `az configure --defaults iothub-data-auth-type=<auth-type-value>`.
  - name: --etag -e
    summary: |-
      Etag or entity tag corresponding to the last state of the resource. If no etag is provided the value '*' is used.
  - name: --hub-name -n
    summary: |-
      IoT Hub name or hostname. Required if --login is not provided.
  - name: --login -l
    summary: |-
      This command supports an entity connection string with rights to perform action. Use to avoid session login via "az login". If both an entity connection string and name are provided the connection string takes priority. Required if --hub-name is not provided.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_iot_edge_deployment_list
  name: az iot edge deployment list
  summary: |-
    List IoT Edge deployments in an IoT Hub.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot edge deployment list [--auth-type {key, login}]
                                [--hub-name]
                                [--login]
                                [--resource-group]
                                [--top]
  optionalParameters:
  - name: --auth-type
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      Indicates whether the operation should auto-derive a policy key or use the current Azure AD session. If the authentication type is login and the resource hostname is provided, resource lookup will be skipped unless needed.You can configure the default using `az configure --defaults iothub-data-auth-type=<auth-type-value>`.
  - name: --hub-name -n
    summary: |-
      IoT Hub name or hostname. Required if --login is not provided.
  - name: --login -l
    summary: |-
      This command supports an entity connection string with rights to perform action. Use to avoid session login via "az login". If both an entity connection string and name are provided the connection string takes priority. Required if --hub-name is not provided.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --top
    summary: |-
      Maximum number of deployments to return. By default all deployments are returned.
- uid: az_iot_edge_deployment_show
  name: az iot edge deployment show
  summary: |-
    Get the details of an IoT Edge deployment.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot edge deployment show --deployment-id
                                [--auth-type {key, login}]
                                [--hub-name]
                                [--login]
                                [--resource-group]
  requiredParameters:
  - isRequired: true
    name: --deployment-id -d
    summary: |-
      Target deployment name. Lowercase and the following special characters are allowed: [-+%_*!'].
  optionalParameters:
  - name: --auth-type
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      Indicates whether the operation should auto-derive a policy key or use the current Azure AD session. If the authentication type is login and the resource hostname is provided, resource lookup will be skipped unless needed.You can configure the default using `az configure --defaults iothub-data-auth-type=<auth-type-value>`.
  - name: --hub-name -n
    summary: |-
      IoT Hub name or hostname. Required if --login is not provided.
  - name: --login -l
    summary: |-
      This command supports an entity connection string with rights to perform action. Use to avoid session login via "az login". If both an entity connection string and name are provided the connection string takes priority. Required if --hub-name is not provided.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_iot_edge_deployment_show-metric
  name: az iot edge deployment show-metric
  summary: |-
    Evaluate a target system metric defined in an IoT Edge deployment.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot edge deployment show-metric --deployment-id
                                       --metric-id
                                       [--auth-type {key, login}]
                                       [--hub-name]
                                       [--login]
                                       [--metric-type {system, user}]
                                       [--resource-group]
  examples:
  - summary: |-
      Evaluate the 'appliedCount' system metric
    syntax: az iot edge deployment show-metric -m appliedCount -d {deployment_name} -n {iothub_name} --mt system
  - summary: |-
      Evaluate the 'myCustomMetric' user metric
    syntax: az iot edge deployment show-metric -m myCustomMetric -d {deployment_name} -n {iothub_name}
  requiredParameters:
  - isRequired: true
    name: --deployment-id -d
    summary: |-
      Target deployment name. Lowercase and the following special characters are allowed: [-+%_*!'].
  - isRequired: true
    name: --metric-id -m
    summary: |-
      Target metric for evaluation.
  optionalParameters:
  - name: --auth-type
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      Indicates whether the operation should auto-derive a policy key or use the current Azure AD session. If the authentication type is login and the resource hostname is provided, resource lookup will be skipped unless needed.You can configure the default using `az configure --defaults iothub-data-auth-type=<auth-type-value>`.
  - name: --hub-name -n
    summary: |-
      IoT Hub name or hostname. Required if --login is not provided.
  - name: --login -l
    summary: |-
      This command supports an entity connection string with rights to perform action. Use to avoid session login via "az login". If both an entity connection string and name are provided the connection string takes priority. Required if --hub-name is not provided.
  - name: --metric-type --mt
    defaultValue: "user"
    parameterValueGroup: "system, user"
    summary: |-
      Indicates which metric collection should be used to lookup a metric.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_iot_edge_deployment_update
  name: az iot edge deployment update
  summary: |-
    Update specified properties of an IoT Edge deployment.
  description: |-
    Use --set followed by property assignments for updating a deployment.

    Note: IoT Edge deployment content is immutable. Deployment properties that can be
    updated are 'labels', 'metrics', 'priority' and 'targetCondition'.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot edge deployment update --deployment-id
                                  [--add]
                                  [--auth-type {key, login}]
                                  [--etag]
                                  [--force-string]
                                  [--hub-name]
                                  [--login]
                                  [--remove]
                                  [--resource-group]
                                  [--set]
  examples:
  - summary: |-
      Alter the labels and target condition of an existing edge deployment
    syntax: az iot edge deployment update -d {deployment_name} -n {iothub_name} --set labels='{"purpose":"dev", "owners":"IoTEngineering"}' targetCondition='tags.building=9'
  requiredParameters:
  - isRequired: true
    name: --deployment-id -d
    summary: |-
      Target deployment name. Lowercase and the following special characters are allowed: [-+%_*!'].
  optionalParameters:
  - name: --add
    defaultValue: "[]"
    summary: |-
      Add an object to a list of objects by specifying a path and key value pairs.  Example: `--add property.listProperty <key=value, string or JSON string>`.
  - name: --auth-type
    defaultValue: "key"
    parameterValueGroup: "key, login"
    summary: |-
      Indicates whether the operation should auto-derive a policy key or use the current Azure AD session. If the authentication type is login and the resource hostname is provided, resource lookup will be skipped unless needed.You can configure the default using `az configure --defaults iothub-data-auth-type=<auth-type-value>`.
  - name: --etag -e
    summary: |-
      Etag or entity tag corresponding to the last state of the resource. If no etag is provided the value '*' is used.
  - name: --force-string
    defaultValue: "False"
    summary: |-
      When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.
  - name: --hub-name -n
    summary: |-
      IoT Hub name or hostname. Required if --login is not provided.
  - name: --login -l
    summary: |-
      This command supports an entity connection string with rights to perform action. Use to avoid session login via "az login". If both an entity connection string and name are provided the connection string takes priority. Required if --hub-name is not provided.
  - name: --remove
    defaultValue: "[]"
    summary: |-
      Remove a property or an element from a list.  Example: `--remove property.list <indexToRemove>` OR `--remove propertyToRemove`.
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --set
    defaultValue: "[]"
    summary: |-
      Update an object by specifying a property path and value to set.  Example: `--set property1.property2=<value>`.
commands:
- az_iot_edge_deployment_create
- az_iot_edge_deployment_delete
- az_iot_edge_deployment_list
- az_iot_edge_deployment_show
- az_iot_edge_deployment_show-metric
- az_iot_edge_deployment_update
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: Manage IoT Edge deployments at scale.
