### YamlMime:AzureCLIGroup
uid: az_containerapp
name: az containerapp
extensionInformation: >-
  > [!Note]

  > This reference is part of the **containerapp** extension for the Azure CLI  (version 2.37.0 or higher).  The extension will automatically install the first time you run an **az containerapp** command.  [Learn more](https://docs.microsoft.com/en-us/cli/azure/azure-cli-extensions-overview) about extensions.
summary: Manage Azure Container Apps.
description: ''
directCommands:
- uid: az_containerapp_browse
  name: az containerapp browse
  summary: Open a containerapp in the browser, if possible.
  description: ''
  syntax: >-
    az containerapp browse [--ids]
                           [--name]
                           [--resource-group]
                           [--subscription]
  examples:
  - summary: open a containerapp in the browser
    syntax: az containerapp browse -n MyContainerapp -g MyResourceGroup
  optionalParameters:
  - name: --ids
    summary: One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
    description: ''
  - name: --name -n
    summary: The name of the Containerapp. A name must consist of lower case alphanumeric characters or '-', start with a letter, end with an alphanumeric character, cannot have '--', and must be less than 32 characters.
    description: ''
  - name: --resource-group -g
    summary: Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
    description: ''
  - name: --subscription
    summary: Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
    description: ''
- uid: az_containerapp_create
  name: az containerapp create
  summary: Create a container app.
  description: ''
  syntax: >-
    az containerapp create --name
                           --resource-group
                           [--args]
                           [--command]
                           [--container-name]
                           [--cpu]
                           [--dal]
                           [--dapr-app-id]
                           [--dapr-app-port]
                           [--dapr-app-protocol {grpc, http}]
                           [--dapr-http-max-request-size]
                           [--dapr-http-read-buffer-size]
                           [--dapr-log-level {debug, error, info, warn}]
                           [--enable-dapr {false, true}]
                           [--env-vars]
                           [--environment]
                           [--exposed-port]
                           [--image]
                           [--ingress {external, internal}]
                           [--max-replicas]
                           [--memory]
                           [--min-replicas]
                           [--no-wait]
                           [--registry-identity]
                           [--registry-password]
                           [--registry-server]
                           [--registry-username]
                           [--revision-suffix]
                           [--revisions-mode {multiple, single}]
                           [--scale-rule-auth]
                           [--scale-rule-http-concurrency]
                           [--scale-rule-metadata]
                           [--scale-rule-name]
                           [--scale-rule-type]
                           [--secrets]
                           [--system-assigned]
                           [--tags]
                           [--target-port]
                           [--transport {auto, http, http2, tcp}]
                           [--user-assigned]
                           [--yaml]
  examples:
  - summary: Create a container app and retrieve its fully qualified domain name.
    syntax: >-
      az containerapp create -n MyContainerapp -g MyResourceGroup \
          --image myregistry.azurecr.io/my-app:v1.0 --environment MyContainerappEnv \
          --ingress external --target-port 80 \
          --registry-server myregistry.azurecr.io --registry-username myregistry --registry-password $REGISTRY_PASSWORD \
          --query properties.configuration.ingress.fqdn
  - summary: Create a container app with resource requirements and replica count limits.
    syntax: >-
      az containerapp create -n MyContainerapp -g MyResourceGroup \
          --image nginx --environment MyContainerappEnv \
          --cpu 0.5 --memory 1.0Gi \
          --min-replicas 4 --max-replicas 8
  - summary: Create a container app with secrets and environment variables.
    syntax: >-
      az containerapp create -n MyContainerapp -g MyResourceGroup \
          --image my-app:v1.0 --environment MyContainerappEnv \
          --secrets mysecret=secretvalue1 anothersecret="secret value 2" \
          --env-vars GREETING="Hello, world" SECRETENV=secretref:anothersecret
  - summary: Create a container app using a YAML configuration. Example YAML configuration - https://aka.ms/azure-container-apps-yaml
    syntax: >-
      az containerapp create -n MyContainerapp -g MyResourceGroup \
          --environment MyContainerappEnv \
          --yaml "path/to/yaml/file.yml"
  - summary: Create a container app with an http scale rule
    syntax: >-
      az containerapp create -n myapp -g mygroup --environment myenv --image nginx \
          --scale-rule-name my-http-rule \
          --scale-rule-http-concurrency 50
  - summary: Create a container app with a custom scale rule
    syntax: >-
      az containerapp create -n MyContainerapp -g MyResourceGroup \
          --image my-queue-processor --environment MyContainerappEnv \
          --min-replicas 4 --max-replicas 8 \
          --scale-rule-name queue-based-autoscaling \
          --scale-rule-type azure-queue \
          --scale-rule-metadata "accountName=mystorageaccountname" \
                                "cloud=AzurePublicCloud" \
                                "queueLength": "5" "queueName": "foo" \
          --scale-rule-auth "connection=my-connection-string-secret-name"
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: The name of the Containerapp. A name must consist of lower case alphanumeric characters or '-', start with a letter, end with an alphanumeric character, cannot have '--', and must be less than 32 characters.
    description: ''
  - isRequired: true
    name: --resource-group -g
    summary: Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
    description: ''
  optionalParameters:
  - name: --args
    summary: A list of container startup command argument(s). Space-separated values e.g. "-c" "mycommand". Empty string to clear existing values.
    description: ''
  - name: --command
    summary: A list of supported commands on the container that will executed during startup. Space-separated values e.g. "/bin/queue" "mycommand". Empty string to clear existing values.
    description: ''
  - name: --container-name
    summary: Name of the container.
    description: ''
  - name: --cpu
    summary: Required CPU in cores from 0.25 - 2.0, e.g. 0.5.
    description: ''
  - name: --dal --dapr-enable-api-logging
    defaultValue: "False"
    summary: Enable API logging for the Dapr sidecar.
    description: ''
  - name: --dapr-app-id
    summary: The Dapr application identifier.
    description: ''
  - name: --dapr-app-port
    summary: The port Dapr uses to talk to the application.
    description: ''
  - name: --dapr-app-protocol
    parameterValueGroup: "grpc, http"
    summary: The protocol Dapr uses to talk to the application.
    description: ''
  - name: --dapr-http-max-request-size --dhmrs
    summary: Increase max size of request body http and grpc servers parameter in MB to handle uploading of big files.
    description: ''
  - name: --dapr-http-read-buffer-size --dhrbs
    summary: Dapr max size of http header read buffer in KB to handle when sending multi-KB headers..
    description: ''
  - name: --dapr-log-level
    parameterValueGroup: "debug, error, info, warn"
    summary: Set the log level for the Dapr sidecar.
    description: ''
  - name: --enable-dapr
    defaultValue: "False"
    parameterValueGroup: "false, true"
    summary: Boolean indicating if the Dapr side car is enabled.
    description: ''
  - name: --env-vars
    summary: A list of environment variable(s) for the container. Space-separated values in 'key=value' format. Empty string to clear existing values. Prefix value with 'secretref:' to reference a secret.
    description: ''
  - name: --environment
    summary: Name or resource ID of the container app's environment.
    description: ''
  - name: --exposed-port
    summary: Additional exposed port. Only supported by tcp transport protocol. Must be unique per environment if the app ingress is external.
    description: ''
  - name: --image -i
    summary: Container image, e.g. publisher/image-name:tag.
    description: ''
  - name: --ingress
    parameterValueGroup: "external, internal"
    summary: The ingress type.
    description: ''
  - name: --max-replicas
    summary: The maximum number of replicas.
    description: ''
  - name: --memory
    summary: Required memory from 0.5 - 4.0 ending with "Gi", e.g. 1.0Gi.
    description: ''
  - name: --min-replicas
    summary: The minimum number of replicas.
    description: ''
  - name: --no-wait
    defaultValue: "False"
    summary: Do not wait for the long-running operation to finish.
    description: ''
  - name: --registry-identity
    summary: A Managed Identity to authenticate with the registry server instead of username/password. Use a resource ID or 'system' for user-defined and system-defined identities, respectively. The registry must be an ACR. If possible, an 'acrpull' role assignemnt will be created for the identity automatically.
    description: ''
  - name: --registry-password
    summary: The password to log in to container registry. If stored as a secret, value must start with 'secretref:' followed by the secret name.
    description: ''
  - name: --registry-server
    summary: The container registry server hostname, e.g. myregistry.azurecr.io.
    description: ''
  - name: --registry-username
    summary: The username to log in to container registry.
    description: ''
  - name: --revision-suffix
    summary: User friendly suffix that is appended to the revision name.
    description: ''
  - name: --revisions-mode
    defaultValue: "single"
    parameterValueGroup: "multiple, single"
    summary: The active revisions mode for the container app.
    description: ''
  - name: --scale-rule-auth --sra
    summary: Scale rule auth parameters. Auth parameters must be in format "<triggerParameter>=<secretRef> <triggerParameter>=<secretRef> ...".
    description: ''
  - name: --scale-rule-http-concurrency --scale-rule-tcp-concurrency --srhc --srtc
    summary: The maximum number of concurrent requests before scale out. Only supported for http and tcp scale rules.
    description: ''
  - name: --scale-rule-metadata --srm
    summary: Scale rule metadata. Metadata must be in format "<key>=<value> <key>=<value> ...".
    description: ''
  - name: --scale-rule-name --srn
    summary: The name of the scale rule.
    description: ''
  - name: --scale-rule-type --srt
    summary: 'The type of the scale rule. Default: http.'
    description: ''
  - name: --secrets -s
    summary: A list of secret(s) for the container app. Space-separated values in 'key=value' format.
    description: ''
  - name: --system-assigned
    defaultValue: "False"
    summary: Boolean indicating whether to assign system-assigned identity.
    description: ''
  - name: --tags
    summary: 'Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags.'
    description: ''
  - name: --target-port
    summary: The application port used for ingress traffic.
    description: ''
  - name: --transport
    defaultValue: "auto"
    parameterValueGroup: "auto, http, http2, tcp"
    summary: The transport protocol used for ingress traffic.
    description: ''
  - name: --user-assigned
    summary: Space-separated user identities to be assigned.
    description: ''
  - name: --yaml
    summary: Path to a .yaml file with the configuration of a container app. All other parameters will be ignored. For an example, see  https://docs.microsoft.com/azure/container-apps/azure-resource-manager-api-spec#examples.
    description: ''
- uid: az_containerapp_delete
  name: az containerapp delete
  summary: Delete a container app.
  description: ''
  syntax: >-
    az containerapp delete [--ids]
                           [--name]
                           [--no-wait]
                           [--resource-group]
                           [--subscription]
                           [--yes]
  examples:
  - summary: Delete a container app.
    syntax: az containerapp delete -g MyResourceGroup -n MyContainerapp
  optionalParameters:
  - name: --ids
    summary: One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
    description: ''
  - name: --name -n
    summary: The name of the Containerapp. A name must consist of lower case alphanumeric characters or '-', start with a letter, end with an alphanumeric character, cannot have '--', and must be less than 32 characters.
    description: ''
  - name: --no-wait
    defaultValue: "False"
    summary: Do not wait for the long-running operation to finish.
    description: ''
  - name: --resource-group -g
    summary: Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
    description: ''
  - name: --subscription
    summary: Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
    description: ''
  - name: --yes -y
    defaultValue: "False"
    summary: Do not prompt for confirmation.
    description: ''
- uid: az_containerapp_exec
  name: az containerapp exec
  summary: Open an SSH-like interactive shell within a container app replica.
  description: ''
  syntax: >-
    az containerapp exec --name
                         --resource-group
                         [--command]
                         [--container]
                         [--replica]
                         [--revision]
  examples:
  - summary: exec into a container app
    syntax: az containerapp exec -n MyContainerapp -g MyResourceGroup
  - summary: exec into a particular container app replica and revision
    syntax: az containerapp exec -n MyContainerapp -g MyResourceGroup --replica MyReplica --revision MyRevision
  - summary: open a bash shell in a containerapp
    syntax: az containerapp exec -n MyContainerapp -g MyResourceGroup --command bash
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: The name of the Containerapp.
    description: ''
  - isRequired: true
    name: --resource-group -g
    summary: Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
    description: ''
  optionalParameters:
  - name: --command
    defaultValue: "sh"
    summary: The startup command (bash, zsh, sh, etc.).
    description: ''
  - name: --container
    summary: The name of the container to ssh into.
    description: ''
  - name: --replica
    summary: The name of the replica to ssh into. List replicas with 'az containerapp replica list'. A replica may not exist if there is not traffic to your app.
    description: ''
  - name: --revision
    summary: The name of the container app revision to ssh into. Defaults to the latest revision.
    description: ''
- uid: az_containerapp_list
  name: az containerapp list
  summary: List container apps.
  description: ''
  syntax: >-
    az containerapp list [--environment]
                         [--resource-group]
  examples:
  - summary: List container apps in the current subscription.
    syntax: az containerapp list
  - summary: List container apps by resource group.
    syntax: az containerapp list -g MyResourceGroup
  optionalParameters:
  - name: --environment
    summary: Name or resource ID of the container app's environment.
    description: ''
  - name: --resource-group -g
    summary: Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
    description: ''
- uid: az_containerapp_show
  name: az containerapp show
  summary: Show details of a container app.
  description: ''
  syntax: >-
    az containerapp show [--ids]
                         [--name]
                         [--resource-group]
                         [--show-secrets]
                         [--subscription]
  examples:
  - summary: Show the details of a container app.
    syntax: az containerapp show -n MyContainerapp -g MyResourceGroup
  optionalParameters:
  - name: --ids
    summary: One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
    description: ''
  - name: --name -n
    summary: The name of the Containerapp. A name must consist of lower case alphanumeric characters or '-', start with a letter, end with an alphanumeric character, cannot have '--', and must be less than 32 characters.
    description: ''
  - name: --resource-group -g
    summary: Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
    description: ''
  - name: --show-secrets
    defaultValue: "False"
    summary: Show Containerapp secrets.
    description: ''
  - name: --subscription
    summary: Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
    description: ''
- uid: az_containerapp_up
  name: az containerapp up
  summary: Create or update a container app as well as any associated resources (ACR, resource group, container apps environment, GitHub Actions, etc.).
  description: ''
  syntax: >-
    az containerapp up --name
                       [--branch]
                       [--browse]
                       [--context-path]
                       [--env-vars]
                       [--environment]
                       [--image]
                       [--ingress {external, internal}]
                       [--location]
                       [--logs-workspace-id]
                       [--logs-workspace-key]
                       [--registry-password]
                       [--registry-server]
                       [--registry-username]
                       [--repo]
                       [--resource-group]
                       [--service-principal-client-id]
                       [--service-principal-client-secret]
                       [--service-principal-tenant-id]
                       [--source]
                       [--target-port]
                       [--token]
  examples:
  - summary: Create a container app from a dockerfile in a GitHub repo (setting up github actions)
    syntax: az containerapp up -n MyContainerapp --repo https://github.com/myAccount/myRepo
  - summary: Create a container app from a dockerfile in a local directory (or autogenerate a container if no dockerfile is found)
    syntax: az containerapp up -n MyContainerapp --source .
  - summary: Create a container app from an image in a registry
    syntax: az containerapp up -n MyContainerapp --image myregistry.azurecr.io/myImage:myTag
  - summary: Create a container app from an image in a registry with ingress enabled and a specified environment
    syntax: az containerapp up -n MyContainerapp --image myregistry.azurecr.io/myImage:myTag --ingress external --target-port 80 --environment MyEnv
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: The name of the Containerapp. A name must consist of lower case alphanumeric characters or '-', start with a letter, end with an alphanumeric character, cannot have '--', and must be less than 32 characters.
    description: ''
  optionalParameters:
  - name: --branch -b
    summary: The branch of the Github repo. Assumed to be the Github repo's default branch if not specified.
    description: ''
  - name: --browse
    defaultValue: "False"
    summary: Open the app in a web browser after creation and deployment, if possible.
    description: ''
  - name: --context-path
    summary: Path in the repo from which to run the docker build. Defaults to "./". Dockerfile is assumed to be named "Dockerfile" and in this directory.
    description: ''
  - name: --env-vars
    summary: A list of environment variable(s) for the container. Space-separated values in 'key=value' format. Empty string to clear existing values. Prefix value with 'secretref:' to reference a secret.
    description: ''
  - name: --environment
    summary: Name or resource ID of the container app's environment.
    description: ''
  - name: --image -i
    summary: Container image, e.g. publisher/image-name:tag.
    description: ''
  - name: --ingress
    parameterValueGroup: "external, internal"
    summary: The ingress type.
    description: ''
  - name: --location -l
    summary: 'Location. Values from: `az account list-locations`. You can configure the default location using `az configure --defaults location=<location>`.'
    description: ''
  - name: --logs-workspace-id
    summary: Workspace ID of the Log Analytics workspace to send diagnostics logs to. You can use "az monitor log-analytics workspace create" to create one. Extra billing may apply.
    description: ''
  - name: --logs-workspace-key
    summary: Log Analytics workspace key to configure your Log Analytics workspace. You can use "az monitor log-analytics workspace get-shared-keys" to retrieve the key.
    description: ''
  - name: --registry-password
    summary: The password to log in to container registry. If stored as a secret, value must start with 'secretref:' followed by the secret name.
    description: ''
  - name: --registry-server
    summary: The container registry server hostname, e.g. myregistry.azurecr.io.
    description: ''
  - name: --registry-username
    summary: The username to log in to container registry.
    description: ''
  - name: --repo
    summary: 'Create an app via Github Actions. In the format: https://github.com/<owner>/<repository-name> or <owner>/<repository-name>.'
    description: ''
  - name: --resource-group -g
    summary: Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
    description: ''
  - name: --service-principal-client-id --sp-cid
    summary: The service principal client ID. Used by Github Actions to authenticate with Azure.
    description: ''
  - name: --service-principal-client-secret --sp-sec
    summary: The service principal client secret. Used by Github Actions to authenticate with Azure.
    description: ''
  - name: --service-principal-tenant-id --sp-tid
    summary: The service principal tenant ID. Used by Github Actions to authenticate with Azure.
    description: ''
  - name: --source
    summary: 'Local directory path containing the application source and Dockerfile for building the container image. Preview: If no Dockerfile is present, a container image is generated using Oryx. See the supported Oryx runtimes here: https://github.com/microsoft/Oryx/blob/main/doc/supportedRuntimeVersions.md.'
    description: ''
  - name: --target-port
    summary: The application port used for ingress traffic.
    description: ''
  - name: --token
    summary: 'A Personal Access Token with write access to the specified repository. For more information: https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line. If not provided or not found in the cache (and using --repo), a browser page will be opened to authenticate with Github.'
    description: ''
- uid: az_containerapp_update
  name: az containerapp update
  summary: Update a container app. In multiple revisions mode, create a new revision based on the latest revision.
  description: ''
  syntax: >-
    az containerapp update [--args]
                           [--command]
                           [--container-name]
                           [--cpu]
                           [--ids]
                           [--image]
                           [--max-replicas]
                           [--memory]
                           [--min-replicas]
                           [--name]
                           [--no-wait]
                           [--remove-all-env-vars]
                           [--remove-env-vars]
                           [--replace-env-vars]
                           [--resource-group]
                           [--revision-suffix]
                           [--scale-rule-auth]
                           [--scale-rule-http-concurrency]
                           [--scale-rule-metadata]
                           [--scale-rule-name]
                           [--scale-rule-type]
                           [--set-env-vars]
                           [--subscription]
                           [--tags]
                           [--yaml]
  examples:
  - summary: Update a container app's container image.
    syntax: >-
      az containerapp update -n MyContainerapp -g MyResourceGroup \
          --image myregistry.azurecr.io/my-app:v2.0
  - summary: Update a container app's resource requirements and scale limits.
    syntax: >-
      az containerapp update -n MyContainerapp -g MyResourceGroup \
          --cpu 0.5 --memory 1.0Gi \
          --min-replicas 4 --max-replicas 8
  - summary: Update a container app with an http scale rule
    syntax: >-
      az containerapp update -n myapp -g mygroup \
          --scale-rule-name my-http-rule \
          --scale-rule-http-concurrency 50
  - summary: Update a container app with a custom scale rule
    syntax: >-
      az containerapp update -n myapp -g mygroup \
          --scale-rule-name my-custom-rule \
          --scale-rule-type my-custom-type \
          --scale-rule-metadata key=value key2=value2 \
          --scale-rule-auth triggerparam=secretref triggerparam=secretref
  optionalParameters:
  - name: --args
    summary: A list of container startup command argument(s). Space-separated values e.g. "-c" "mycommand". Empty string to clear existing values.
    description: ''
  - name: --command
    summary: A list of supported commands on the container that will executed during startup. Space-separated values e.g. "/bin/queue" "mycommand". Empty string to clear existing values.
    description: ''
  - name: --container-name
    summary: Name of the container.
    description: ''
  - name: --cpu
    summary: Required CPU in cores from 0.25 - 2.0, e.g. 0.5.
    description: ''
  - name: --ids
    summary: One or more resource IDs (space-delimited). It should be a complete resource ID containing all information of 'Resource Id' arguments. You should provide either --ids or other 'Resource Id' arguments.
    description: ''
  - name: --image -i
    summary: Container image, e.g. publisher/image-name:tag.
    description: ''
  - name: --max-replicas
    summary: The maximum number of replicas.
    description: ''
  - name: --memory
    summary: Required memory from 0.5 - 4.0 ending with "Gi", e.g. 1.0Gi.
    description: ''
  - name: --min-replicas
    summary: The minimum number of replicas.
    description: ''
  - name: --name -n
    summary: The name of the Containerapp. A name must consist of lower case alphanumeric characters or '-', start with a letter, end with an alphanumeric character, cannot have '--', and must be less than 32 characters.
    description: ''
  - name: --no-wait
    defaultValue: "False"
    summary: Do not wait for the long-running operation to finish.
    description: ''
  - name: --remove-all-env-vars
    defaultValue: "False"
    summary: Remove all environment variable(s) from container..
    description: ''
  - name: --remove-env-vars
    summary: Remove environment variable(s) from container. Space-separated environment variable names.
    description: ''
  - name: --replace-env-vars
    summary: Replace environment variable(s) in container. Other existing environment variables are removed. Space-separated values in 'key=value' format. If stored as a secret, value must start with 'secretref:' followed by the secret name.
    description: ''
  - name: --resource-group -g
    summary: Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
    description: ''
  - name: --revision-suffix
    summary: User friendly suffix that is appended to the revision name.
    description: ''
  - name: --scale-rule-auth --sra
    summary: Scale rule auth parameters. Auth parameters must be in format "<triggerParameter>=<secretRef> <triggerParameter>=<secretRef> ...".
    description: ''
  - name: --scale-rule-http-concurrency --scale-rule-tcp-concurrency --srhc --srtc
    summary: The maximum number of concurrent requests before scale out. Only supported for http and tcp scale rules.
    description: ''
  - name: --scale-rule-metadata --srm
    summary: Scale rule metadata. Metadata must be in format "<key>=<value> <key>=<value> ...".
    description: ''
  - name: --scale-rule-name --srn
    summary: The name of the scale rule.
    description: ''
  - name: --scale-rule-type --srt
    summary: 'The type of the scale rule. Default: http.'
    description: ''
  - name: --set-env-vars
    summary: Add or update environment variable(s) in container. Existing environmentenvironment variables are not modified. Space-separated values in 'key=value' format. If stored as a secret, value must start with 'secretref:' followed by the secret name.
    description: ''
  - name: --subscription
    summary: Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
    description: ''
  - name: --tags
    summary: 'Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags.'
    description: ''
  - name: --yaml
    summary: Path to a .yaml file with the configuration of a container app. All other parameters will be ignored. For an example, see  https://docs.microsoft.com/azure/container-apps/azure-resource-manager-api-spec#examples.
    description: ''
commands:
- az_containerapp_auth
- az_containerapp_auth_apple
- az_containerapp_auth_apple_show
- az_containerapp_auth_apple_update
- az_containerapp_auth_facebook
- az_containerapp_auth_facebook_show
- az_containerapp_auth_facebook_update
- az_containerapp_auth_github
- az_containerapp_auth_github_show
- az_containerapp_auth_github_update
- az_containerapp_auth_google
- az_containerapp_auth_google_show
- az_containerapp_auth_google_update
- az_containerapp_auth_microsoft
- az_containerapp_auth_microsoft_show
- az_containerapp_auth_microsoft_update
- az_containerapp_auth_openid-connect
- az_containerapp_auth_openid-connect_add
- az_containerapp_auth_openid-connect_remove
- az_containerapp_auth_openid-connect_show
- az_containerapp_auth_openid-connect_update
- az_containerapp_auth_show
- az_containerapp_auth_twitter
- az_containerapp_auth_twitter_show
- az_containerapp_auth_twitter_update
- az_containerapp_auth_update
- az_containerapp_browse
- az_containerapp_compose
- az_containerapp_compose_create
- az_containerapp_create
- az_containerapp_dapr
- az_containerapp_dapr_disable
- az_containerapp_dapr_enable
- az_containerapp_delete
- az_containerapp_env
- az_containerapp_env_certificate
- az_containerapp_env_certificate_delete
- az_containerapp_env_certificate_list
- az_containerapp_env_certificate_upload
- az_containerapp_env_create
- az_containerapp_env_dapr-component
- az_containerapp_env_dapr-component_list
- az_containerapp_env_dapr-component_remove
- az_containerapp_env_dapr-component_set
- az_containerapp_env_dapr-component_show
- az_containerapp_env_delete
- az_containerapp_env_list
- az_containerapp_env_logs
- az_containerapp_env_logs_show
- az_containerapp_env_show
- az_containerapp_env_storage
- az_containerapp_env_storage_list
- az_containerapp_env_storage_remove
- az_containerapp_env_storage_set
- az_containerapp_env_storage_show
- az_containerapp_env_update
- az_containerapp_exec
- az_containerapp_github-action
- az_containerapp_github-action_add
- az_containerapp_github-action_delete
- az_containerapp_github-action_show
- az_containerapp_hostname
- az_containerapp_hostname_bind
- az_containerapp_hostname_delete
- az_containerapp_hostname_list
- az_containerapp_identity
- az_containerapp_identity_assign
- az_containerapp_identity_remove
- az_containerapp_identity_show
- az_containerapp_ingress
- az_containerapp_ingress_access-restriction
- az_containerapp_ingress_access-restriction_list
- az_containerapp_ingress_access-restriction_remove
- az_containerapp_ingress_access-restriction_set
- az_containerapp_ingress_disable
- az_containerapp_ingress_enable
- az_containerapp_ingress_show
- az_containerapp_ingress_traffic
- az_containerapp_ingress_traffic_set
- az_containerapp_ingress_traffic_show
- az_containerapp_list
- az_containerapp_logs
- az_containerapp_logs_show
- az_containerapp_registry
- az_containerapp_registry_list
- az_containerapp_registry_remove
- az_containerapp_registry_set
- az_containerapp_registry_show
- az_containerapp_replica
- az_containerapp_replica_list
- az_containerapp_replica_show
- az_containerapp_revision
- az_containerapp_revision_activate
- az_containerapp_revision_copy
- az_containerapp_revision_deactivate
- az_containerapp_revision_label
- az_containerapp_revision_label_add
- az_containerapp_revision_label_remove
- az_containerapp_revision_label_swap
- az_containerapp_revision_list
- az_containerapp_revision_restart
- az_containerapp_revision_set-mode
- az_containerapp_revision_show
- az_containerapp_secret
- az_containerapp_secret_list
- az_containerapp_secret_remove
- az_containerapp_secret_set
- az_containerapp_secret_show
- az_containerapp_show
- az_containerapp_ssl
- az_containerapp_ssl_upload
- az_containerapp_up
- az_containerapp_update
globalParameters:
- name: --debug
  summary: Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: Show this help message and exit.
- name: --only-show-errors
  summary: Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, table, tsv"
  summary: Output format.
- name: --query
  summary: JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: Manage Azure Container Apps.
