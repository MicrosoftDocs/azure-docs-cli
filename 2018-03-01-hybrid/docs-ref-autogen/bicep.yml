### YamlMime:AzureCLIGroup
uid: az_bicep
name: az bicep
summary: |-
  Bicep CLI command group.
description: |-
  There are two configurations that can be set for the command group, including bicep.check_version and bicep.use_binary_from_path:

  [1] az config set bicep.check_version=True/False
      Turn on/off Bicep CLI version check when executing az bicep commands.

  [2] az config set bicep.use_binary_from_path=True/False/if_found_in_ci
      Specify whether to use Bicep CLI from PATH or not. The default value is if_found_in_ci.
status: GA
sourceType: Core
directCommands:
- uid: az_bicep_build
  name: az bicep build
  summary: |-
    Build a Bicep file.
  status: GA
  sourceType: Core
  syntax: >-
    az bicep build --file
                   [--no-restore]
                   [--outdir]
                   [--outfile]
                   [--stdout]
  examples:
  - summary: |-
      Build a Bicep file.
    syntax: az bicep build --file {bicep_file}
  - summary: |-
      Build a Bicep file and print all output to stdout.
    syntax: az bicep build --file {bicep_file} --stdout
  - summary: |-
      Build a Bicep file and save the result to the specified directory.
    syntax: az bicep build --file {bicep_file} --outdir {out_dir}
  - summary: |-
      Build a Bicep file and save the result to the specified file.
    syntax: az bicep build --file {bicep_file} --outfile {out_file}
  - summary: |-
      Build a Bicep file without restoring external modules.
    syntax: az bicep build --file {bicep_file} --no-restore
  requiredParameters:
  - isRequired: true
    name: --file -f
    summary: |-
      The path to the Bicep file to build in the file system.
  optionalParameters:
  - name: --no-restore
    summary: |-
      When set, builds the bicep file without restoring external modules.
  - name: --outdir
    summary: |-
      When set, saves the output at the specified directory.
  - name: --outfile
    summary: |-
      When set, saves the output as the specified file path.
  - name: --stdout
    summary: |-
      When set, prints all output to stdout instead of corresponding files.
- uid: az_bicep_build-params
  name: az bicep build-params
  summary: |-
    Build .bicepparam file.
  status: GA
  sourceType: Core
  syntax: >-
    az bicep build-params --file
                          [--no-restore]
                          [--outdir]
                          [--outfile]
                          [--stdout]
  examples:
  - summary: |-
      Build a .bicepparam file.
    syntax: az bicep build-params --file {bicepparam_file}
  - summary: |-
      Build a .bicepparam file and print all output to stdout.
    syntax: az bicep build-params --file {bicepparam_file} --stdout
  - summary: |-
      Build a .bicepparam file and save the result to the specified file.
    syntax: az bicep build-params --file {bicepparam_file} --outfile {out_file}
  requiredParameters:
  - isRequired: true
    name: --file -f
    summary: |-
      The path to the .bicepparam file to build in the file system.
  optionalParameters:
  - name: --no-restore
    summary: |-
      When set, builds the .bicepparam file without restoring external modules.
  - name: --outdir
    summary: |-
      When set, saves the output at the specified directory.
  - name: --outfile
    summary: |-
      When set, saves the output as the specified file path.
  - name: --stdout
    summary: |-
      When set, prints all output to stdout instead of corresponding files.
- uid: az_bicep_decompile
  name: az bicep decompile
  summary: |-
    Attempt to decompile an ARM template file to a Bicep file.
  status: GA
  sourceType: Core
  syntax: >-
    az bicep decompile --file
                       [--force]
  examples:
  - summary: |-
      Decompile an ARM template file.
    syntax: az bicep decompile --file {json_template_file}
  - summary: |-
      Decompile an ARM template file and overwrite existing Bicep file.
    syntax: az bicep decompile --file {json_template_file} --force
  requiredParameters:
  - isRequired: true
    name: --file -f
    summary: |-
      The path to the ARM template to decompile in the file system.
  optionalParameters:
  - name: --force
    summary: |-
      Allows overwriting the output file if it exists.
- uid: az_bicep_decompile-params
  name: az bicep decompile-params
  summary: |-
    Decompile a parameters .json file to .bicepparam.
  status: GA
  sourceType: Core
  syntax: >-
    az bicep decompile-params --file
                              [--bicep-file]
                              [--outdir]
                              [--outfile]
                              [--stdout]
  examples:
  - summary: |-
      Attempts to decompile a parameters .json file to .bicepparam.
    syntax: az bicep decompile-params --file {json_template_file}
  - summary: |-
      Attempts to decompile a parameters .json file to .bicepparam using the bicep file given.
    syntax: az bicep decompile-params --file {json_template_file} --bicep-file {bicep_file}
  - summary: |-
      Attempts to decompile a parameters .json file to .bicepparam and print all output to stdout.
    syntax: az bicep decompile-params --file {json_template_file} --stdout
  - summary: |-
      Attempts to decompile a parameters .json file to .bicepparam and print all output to stdout and save the result to the specified directory.
    syntax: az bicep decompile-params --file {json_template_file} --outdir {out_dir}
  - summary: |-
      Attempts to decompile a parameters .json file to .bicepparam and print all output to stdout and save the result to the specified file.
    syntax: az bicep decompile-params --file {json_template_file} --outfile {out_file}
  requiredParameters:
  - isRequired: true
    name: --file -f
    summary: |-
      The path to the parameters file to build in the file system.
  optionalParameters:
  - name: --bicep-file
    summary: |-
      Path to the bicep template file (relative to the .bicepparam file) that will be referenced in the using declaration.
  - name: --outdir
    summary: |-
      When set, saves the output at the specified directory.
  - name: --outfile
    summary: |-
      When set, saves the output as the specified file path.
  - name: --stdout
    summary: |-
      When set, prints all output to stdout instead of corresponding files.
- uid: az_bicep_format
  name: az bicep format
  summary: |-
    Format a Bicep file.
  status: GA
  sourceType: Core
  syntax: >-
    az bicep format --file
                    [--indent-kind]
                    [--indent-size]
                    [--insert-final-newline]
                    [--newline]
                    [--outdir]
                    [--outfile]
                    [--stdout]
  examples:
  - summary: |-
      Format a Bicep file.
    syntax: az bicep format --file {bicep_file}
  - summary: |-
      Format a Bicep file and print all output to stdout.
    syntax: az bicep format --file {bicep_file} --stdout
  - summary: |-
      Format a Bicep file and save the result to the specified directory.
    syntax: az bicep format --file {bicep_file} --outdir {out_dir}
  - summary: |-
      Format a Bicep file and save the result to the specified file.
    syntax: az bicep format --file {bicep_file} --outfile {out_file}
  - summary: |-
      Format a Bicep file insert a final newline.
    syntax: az bicep format --file {bicep_file} --insert-final-newline
  - summary: |-
      Format a Bicep file set indentation kind. Valid values are ( Space | Tab ).
    syntax: az bicep format --file {bicep_file} --indent-kind {indent_kind}
  - summary: |-
      Format a Bicep file set number of spaces to indent with (Only valid with --indent-kind set to Space).
    syntax: az bicep format --file {bicep_file} --indent-size {indent_size}
  requiredParameters:
  - isRequired: true
    name: --file -f
    summary: |-
      The path to the Bicep file to format in the file system.
  optionalParameters:
  - name: --indent-kind
    summary: |-
      Set indentation kind. Valid values are ( Space | Tab ).
  - name: --indent-size
    summary: |-
      Number of spaces to indent with (Only valid with --indent-kind set to Space).
  - name: --insert-final-newline
    summary: |-
      Insert a final newline.
  - name: --newline
    summary: |-
      Set newline char. Valid values are ( Auto | LF | CRLF | CR ).
  - name: --outdir
    summary: |-
      When set, saves the output at the specified directory.
  - name: --outfile
    summary: |-
      When set, saves the output as the specified file path.
  - name: --stdout
    summary: |-
      When set, prints all output to stdout instead of corresponding files.
- uid: az_bicep_generate-params
  name: az bicep generate-params
  summary: |-
    Generate parameters file for a Bicep file.
  status: GA
  sourceType: Core
  syntax: >-
    az bicep generate-params --file
                             [--include-params]
                             [--no-restore]
                             [--outdir]
                             [--outfile]
                             [--output-format]
                             [--stdout]
  examples:
  - summary: |-
      Generate parameters file for a Bicep file.
    syntax: az bicep generate-params --file {bicep_file}
  - summary: |-
      Generate parameters file for a Bicep file and print all output to stdout.
    syntax: az bicep generate-params --file {bicep_file} --stdout
  - summary: |-
      Generate parameters file for a Bicep file and save the result to the specified directory.
    syntax: az bicep generate-params --file {bicep_file} --outdir {out_dir}
  - summary: |-
      Generate parameters file for a Bicep file and save the result to the specified file.
    syntax: az bicep generate-params --file {bicep_file} --outfile {out_file}
  - summary: |-
      Generate parameters file for a Bicep file without restoring external modules.
    syntax: az bicep generate-params --file {bicep_file} --no-restore
  - summary: |-
      Generate parameters file for a Bicep file with specified output format. Valid values are ( json | bicepparam ).
    syntax: az bicep generate-params --file {bicep_file} --output-format {output_format} --include-params {include_params}
  requiredParameters:
  - isRequired: true
    name: --file -f
    summary: |-
      The path to the Bicep file to generate the parameters file from in the file system.
  optionalParameters:
  - name: --include-params
    summary: |-
      Set include params. Valid values are ( all | required-only ).
  - name: --no-restore
    summary: |-
      When set, generates the parameters file without restoring external modules.
  - name: --outdir
    summary: |-
      When set, saves the output at the specified directory.
  - name: --outfile
    summary: |-
      When set, saves the output as the specified file path.
  - name: --output-format
    summary: |-
      Set output format. Valid values are ( json | bicepparam ).
  - name: --stdout
    summary: |-
      When set, prints all output to stdout instead of corresponding files.
- uid: az_bicep_install
  name: az bicep install
  summary: |-
    Install Bicep CLI.
  status: GA
  sourceType: Core
  syntax: >-
    az bicep install [--target-platform {linux-arm64, linux-musl-x64, linux-x64, osx-arm64, osx-x64, win-x64}]
                     [--version]
  examples:
  - summary: |-
      Install Bicep CLI.
    syntax: az bicep install
  - summary: |-
      Install a specific version of Bicep CLI.
    syntax: az bicep install --version v0.2.212
  - summary: |-
      Install Bicep CLI and specify the target platform.
    syntax: az bicep install --target-platform linux-x64
  optionalParameters:
  - name: --target-platform -t
    parameterValueGroup: "linux-arm64, linux-musl-x64, linux-x64, osx-arm64, osx-x64, win-x64"
    summary: |-
      The platform the Bicep CLI will be running on. Set this to skip automatic platform detection if it does not work properly.
  - name: --version -v
    summary: |-
      The version of Bicep CLI to be installed. Default to the latest if not specified.
- uid: az_bicep_lint
  name: az bicep lint
  summary: |-
    Lint a Bicep file.
  status: GA
  sourceType: Core
  syntax: >-
    az bicep lint --file
                  [--diagnostics-format {default, sarif}]
                  [--no-restore]
  examples:
  - summary: |-
      Lint a Bicep file.
    syntax: az bicep lint --file {bicep_file}
  - summary: |-
      Lint a Bicep file without restoring external modules.
    syntax: az bicep lint --file {bicep_file} --no-restore
  - summary: |-
      Lint a Bicep file with specified diagnostics format. Valid values are ( default | sarif ).
    syntax: az bicep lint --file {bicep_file} --diagnostics-format {diagnostics_format}
  requiredParameters:
  - isRequired: true
    name: --file -f
    summary: |-
      The path to the Bicep module file to lint in the file system.
  optionalParameters:
  - name: --diagnostics-format
    parameterValueGroup: "default, sarif"
    summary: |-
      Set diagnostics format.
  - name: --no-restore
    summary: |-
      When set, generates the parameters file without restoring external modules.
- uid: az_bicep_list-versions
  name: az bicep list-versions
  summary: |-
    List out all available versions of Bicep CLI.
  status: GA
  sourceType: Core
  syntax: az bicep list-versions
- uid: az_bicep_publish
  name: az bicep publish
  summary: |-
    Publish a bicep file to a remote module registry.
  status: GA
  sourceType: Core
  syntax: >-
    az bicep publish --file
                     --target
                     [--documentationUri]
                     [--force]
                     [--with-source]
  examples:
  - summary: |-
      Publish a bicep file.
    syntax: az bicep publish --file {bicep_file} --target "br:{registry}/{module_path}:{tag}"
  - summary: |-
      Publish a bicep file overwriting an existing tag.
    syntax: az bicep publish --file {bicep_file} --target "br:{registry}/{module_path}:{tag} --force"
  - summary: |-
      Publish a bicep file with documentation uri.
    syntax: az bicep publish --file {bicep_file} --target "br:{registry}/{module_path}:{tag}" --documentationUri {documentationUri}
  - summary: |-
      Publish a bicep file with documentation uri and include source code
    syntax: az bicep publish --file {bicep_file} --target "br:{registry}/{module_path}:{tag}" --documentationUri {documentationUri} --with-source
  requiredParameters:
  - isRequired: true
    name: --file -f
    summary: |-
      The path to the Bicep module file to publish in the file system.
  - isRequired: true
    name: --target -t
    summary: |-
      The target location where the Bicep module will be published.
  optionalParameters:
  - name: --documentationUri -d
    summary: |-
      The documentation uri of the Bicep module.
  - name: --force
    summary: |-
      Allow overwriting an existing Bicep module version.
  - name: --with-source
    summary: |-
      Publish source code with the module.
    isPreview: true
- uid: az_bicep_restore
  name: az bicep restore
  summary: |-
    Restore external modules for a bicep file.
  status: GA
  sourceType: Core
  syntax: >-
    az bicep restore --file
                     [--force]
  examples:
  - summary: |-
      Retore external modules.
    syntax: az bicep restore --file {bicep_file}
  - summary: |-
      Retore external modules and overwrite cached external modules.
    syntax: az bicep restore --file {bicep_file} --force
  requiredParameters:
  - isRequired: true
    name: --file -f
    summary: |-
      The path to the Bicep file to restore external modules for.
  optionalParameters:
  - name: --force
    summary: |-
      Allows overwriting the cached external modules.
- uid: az_bicep_uninstall
  name: az bicep uninstall
  summary: |-
    Uninstall Bicep CLI.
  status: GA
  sourceType: Core
  syntax: az bicep uninstall
- uid: az_bicep_upgrade
  name: az bicep upgrade
  summary: |-
    Upgrade Bicep CLI to the latest version.
  status: GA
  sourceType: Core
  syntax: az bicep upgrade [--target-platform {linux-arm64, linux-musl-x64, linux-x64, osx-arm64, osx-x64, win-x64}]
  examples:
  - summary: |-
      Upgrade Bicep CLI.
    syntax: az bicep upgrade
  - summary: |-
      Upgrade Bicep CLI and specify the target platform.
    syntax: az bicep upgrade --target-platform linux-x64
  optionalParameters:
  - name: --target-platform -t
    parameterValueGroup: "linux-arm64, linux-musl-x64, linux-x64, osx-arm64, osx-x64, win-x64"
    summary: |-
      The platform the Bicep CLI will be running on. Set this to skip automatic platform detection if it does not work properly.
- uid: az_bicep_version
  name: az bicep version
  summary: |-
    Show the installed version of Bicep CLI.
  status: GA
  sourceType: Core
  syntax: az bicep version
commands:
- az_bicep_build
- az_bicep_build-params
- az_bicep_decompile
- az_bicep_decompile-params
- az_bicep_format
- az_bicep_generate-params
- az_bicep_install
- az_bicep_lint
- az_bicep_list-versions
- az_bicep_publish
- az_bicep_restore
- az_bicep_uninstall
- az_bicep_upgrade
- az_bicep_version
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: >-
    There are two configurations that can be set for the command group, including bicep.check_version and bicep.use_binary_from_path:


    [1] az config set bicep.check_version=True/False
        Turn on/off Bicep CLI version check when executing az bicep commands.

    [2] az config set bicep.use_binary_from_path=True/False/if_found_in_ci
        Specify whether to use Bicep CLI from PATH or not. The default value is if_found_in_ci.
