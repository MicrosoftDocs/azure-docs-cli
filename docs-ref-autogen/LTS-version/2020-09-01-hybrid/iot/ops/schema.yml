### YamlMime:AzureCLIGroup
uid: az_iot_ops_schema
name: az iot ops schema
extensionInformation: >-
  > [!NOTE]

  > This reference is part of the **azure-iot-ops** extension for the Azure CLI (version 2.53.0 or higher). The extension will automatically install the first time you run an **az iot ops schema** command. [Learn more](https://learn.microsoft.com/cli/azure/azure-cli-extensions-overview) about extensions.
summary: |-
  Schema and registry management.
description: |-
  Schemas are documents that describe data to enable processing and contextualization.
  Message schemas describe the format of a message and its contents.
  A schema registry is required to create and manage schemas.
status: Preview
isPreview: true
previewOrExperimentalInfo: 'This command group is in preview and under development. Reference and support levels: https://aka.ms/CLI_refstatus'
sourceType: Extension
directCommands:
- uid: az_iot_ops_schema_create
  name: az iot ops schema create
  summary: |-
    Create a schema within a schema registry.
  description: |-
    This operation requires a pre-created schema registry and will add a schema version.
    To create the schema and add a version, the associated storage account will need to have public network access enabled.
    For more information on the delta file format, please see aka.ms/lakehouse-delta-sample.
  status: Preview
  isPreview: true
  previewOrExperimentalInfo: "Command group 'iot ops schema' is in preview and under development. Reference and support levels: https://aka.ms/CLI_refstatus"
  sourceType: Extension
  syntax: >-
    az iot ops schema create --format {delta, json}
                             --name
                             --registry
                             --resource-group
                             --type {message}
                             --vc
                             [--desc]
                             [--display-name]
                             [--vd]
                             [--ver]
  examples:
  - summary: |-
      Create a schema called 'myschema' in the registry 'myregistry' with minimum inputs. Schema version 1 will be created for this schema with the file content.
    syntax: az iot ops schema create -n myschema -g myresourcegroup --registry myregistry --format json --type message --version-content myschema.json
  - summary: |-
      Create a schema called 'myschema' with additional customization. Schema version 14 will be created for this schema. The inline content is a bash syntax example. For more examples, see https://aka.ms/inline-json-examples
    syntax: "az iot ops schema create -n myschema -g myresourcegroup --registry myregistry --format delta --type message --desc \"Schema for Assets\" --display-name myassetschema --version-content '{\"hello\": \"world\"}' --ver 14 --vd \"14th version\""
  requiredParameters:
  - isRequired: true
    name: --format
    parameterValueGroup: "delta, json"
    summary: |-
      Schema format.
  - isRequired: true
    name: --name -n
    summary: |-
      Schema name.
  - isRequired: true
    name: --registry
    summary: |-
      Schema registry name.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - isRequired: true
    name: --type
    parameterValueGroup: "message"
    summary: |-
      Schema type.
  - isRequired: true
    name: --vc --version-content
    summary: |-
      File path containing or inline content for the version.
  optionalParameters:
  - name: --desc
    summary: |-
      Description for the schema.
  - name: --display-name
    summary: |-
      Display name for the schema.
  - name: --vd --version-desc
    summary: |-
      Description for the version.
  - name: --ver --version
    defaultValue: "1"
    summary: |-
      Schema version name.
- uid: az_iot_ops_schema_delete
  name: az iot ops schema delete
  summary: |-
    Delete a target schema within a schema registry.
  status: Preview
  isPreview: true
  previewOrExperimentalInfo: "Command group 'iot ops schema' is in preview and under development. Reference and support levels: https://aka.ms/CLI_refstatus"
  sourceType: Extension
  syntax: >-
    az iot ops schema delete --name
                             --registry
                             --resource-group
                             [--yes {false, true}]
  examples:
  - summary: |-
      Delete a target schema 'myschema' within a schema registry 'myregistry'.
    syntax: az iot ops schema delete --name myschema --registry myregistry -g myresourcegroup
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      Schema name.
  - isRequired: true
    name: --registry
    summary: |-
      Schema registry name.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  optionalParameters:
  - name: --yes -y
    parameterValueGroup: "false, true"
    summary: |-
      Confirm [y]es without a prompt. Useful for CI and automation scenarios.
- uid: az_iot_ops_schema_list
  name: az iot ops schema list
  summary: |-
    List schemas within a schema registry.
  status: Preview
  isPreview: true
  previewOrExperimentalInfo: "Command group 'iot ops schema' is in preview and under development. Reference and support levels: https://aka.ms/CLI_refstatus"
  sourceType: Extension
  syntax: >-
    az iot ops schema list --registry
                           --resource-group
  examples:
  - summary: |-
      List schema registeries in the schema registry 'myregistry'.
    syntax: az iot ops schema list -g myresourcegroup --registry myregistry
  requiredParameters:
  - isRequired: true
    name: --registry
    summary: |-
      Schema registry name.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_iot_ops_schema_show
  name: az iot ops schema show
  summary: |-
    Show details of a schema within a schema registry.
  status: Preview
  isPreview: true
  previewOrExperimentalInfo: "Command group 'iot ops schema' is in preview and under development. Reference and support levels: https://aka.ms/CLI_refstatus"
  sourceType: Extension
  syntax: >-
    az iot ops schema show --name
                           --registry
                           --resource-group
  examples:
  - summary: |-
      Show details of target schema 'myschema' within a schema registry 'myregistry'.
    syntax: az iot ops schema show --name myschema --registry myregistry -g myresourcegroup
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      Schema name.
  - isRequired: true
    name: --registry
    summary: |-
      Schema registry name.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
- uid: az_iot_ops_schema_show-dataflow-refs
  name: az iot ops schema show-dataflow-refs
  summary: |-
    Show the schema references used for dataflows.
  status: Experimental
  isExperimental: true
  previewOrExperimentalInfo: 'This command is experimental and under development. Reference and support levels: https://aka.ms/CLI_refstatus'
  sourceType: Extension
  syntax: >-
    az iot ops schema show-dataflow-refs --registry
                                         --resource-group
                                         [--latest {false, true}]
                                         [--schema]
                                         [--ver]
  examples:
  - summary: |-
      Show schema reference for schema "myschema" and version 1.
    syntax: az iot ops schema show-dataflow-refs --version 1 --schema myschema --registry myregistry -g myresourcegroup
  - summary: |-
      Show schema reference for all versions in schema "myschema".
    syntax: az iot ops schema show-dataflow-refs --schema myschema --registry myregistry -g myresourcegroup
  - summary: |-
      Show schema reference for all versions and schemas in schema registry "myregistry".
    syntax: az iot ops schema show-dataflow-refs --registry myregistry -g myresourcegroup
  - summary: |-
      Show schema reference for all schemas but only the latest versions in schema registry "myregistry".
    syntax: az iot ops schema show-dataflow-refs --registry myregistry -g myresourcegroup --latest
  requiredParameters:
  - isRequired: true
    name: --registry
    summary: |-
      Schema registry name.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  optionalParameters:
  - name: --latest
    parameterValueGroup: "false, true"
    summary: |-
      Flag to show only the latest version(s).
  - name: --schema
    summary: |-
      Schema name. Required if using --version.
  - name: --ver --version
    summary: |-
      Schema version name. If used, --latest will be ignored.
commands:
- az_iot_ops_schema_create
- az_iot_ops_schema_delete
- az_iot_ops_schema_list
- az_iot_ops_schema_registry
- az_iot_ops_schema_registry_create
- az_iot_ops_schema_registry_delete
- az_iot_ops_schema_registry_list
- az_iot_ops_schema_registry_show
- az_iot_ops_schema_show
- az_iot_ops_schema_show-dataflow-refs
- az_iot_ops_schema_version
- az_iot_ops_schema_version_add
- az_iot_ops_schema_version_list
- az_iot_ops_schema_version_remove
- az_iot_ops_schema_version_show
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: >-
    Schemas are documents that describe data to enable processing and contextualization.

    Message schemas describe the format of a message and its contents.

    A schema registry is required to create and manage schemas.
