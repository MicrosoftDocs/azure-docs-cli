### YamlMime:AzureCLIGroup
uid: az_repos_policy_approver-count
name: az repos policy approver-count
extensionInformation: >-
  > [!NOTE]

  > This reference is part of the **azure-devops** extension for the Azure CLI (version 2.30.0 or higher). The extension will automatically install the first time you run an **az repos policy approver-count** command. [Learn more](https://learn.microsoft.com/cli/azure/azure-cli-extensions-overview) about extensions.
summary: |-
  Manage approver count policy.
status: GA
sourceType: Extension
directCommands:
- uid: az_repos_policy_approver-count_create
  name: az repos policy approver-count create
  summary: |-
    Create approver count policy.
  status: GA
  sourceType: Extension
  syntax: >-
    az repos policy approver-count create --allow-downvotes {false, true}
                                          --blocking {false, true}
                                          --branch
                                          --creator-vote-counts {false, true}
                                          --enabled {false, true}
                                          --minimum-approver-count
                                          --repository-id
                                          --reset-on-source-push {false, true}
                                          [--branch-match-type {exact, prefix}]
                                          [--detect {false, true}]
                                          [--org]
                                          [--project]
  requiredParameters:
  - isRequired: true
    name: --allow-downvotes
    parameterValueGroup: "false, true"
    summary: |-
      Whether to allow downvotes or not.
  - isRequired: true
    name: --blocking
    parameterValueGroup: "false, true"
    summary: |-
      Whether the policy should be blocking or not.
  - isRequired: true
    name: --branch
    summary: |-
      Branch on which this policy should be applied. For example: master.
  - isRequired: true
    name: --creator-vote-counts
    parameterValueGroup: "false, true"
    summary: |-
      Whether the creator's vote counts or not.
  - isRequired: true
    name: --enabled
    parameterValueGroup: "false, true"
    summary: |-
      Whether the policy is enabled or not.
  - isRequired: true
    name: --minimum-approver-count
    summary: |-
      Minimum number of approvers required. For example: 2.
  - isRequired: true
    name: --repository-id
    summary: |-
      Id of the repository on which to apply the policy.
  - isRequired: true
    name: --reset-on-source-push
    parameterValueGroup: "false, true"
    summary: |-
      Whether to reset source on push.
  optionalParameters:
  - name: --branch-match-type
    defaultValue: "exact"
    parameterValueGroup: "exact, prefix"
    summary: |-
      Determines how the branch argument is used to apply a policy. If value is 'exact', the policy will be applied on a branch which has an exact match on the --branch argument. If value is 'prefix' the policy is applied across all branch folders that match the prefix provided by the --branch argument.
  - name: --detect
    parameterValueGroup: "false, true"
    summary: |-
      Automatically detect organization.
  - name: --org --organization
    summary: |-
      Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: https://dev.azure.com/MyOrganizationName/.
  - name: --project -p
    summary: |-
      Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
- uid: az_repos_policy_approver-count_update
  name: az repos policy approver-count update
  summary: |-
    Update approver count policy.
  status: GA
  sourceType: Extension
  syntax: >-
    az repos policy approver-count update --id
                                          [--allow-downvotes {false, true}]
                                          [--blocking {false, true}]
                                          [--branch]
                                          [--branch-match-type {exact, prefix}]
                                          [--creator-vote-counts {false, true}]
                                          [--detect {false, true}]
                                          [--enabled {false, true}]
                                          [--minimum-approver-count]
                                          [--org]
                                          [--project]
                                          [--repository-id]
                                          [--reset-on-source-push {false, true}]
  requiredParameters:
  - isRequired: true
    name: --id --policy-id
    summary: |-
      ID of the policy.
  optionalParameters:
  - name: --allow-downvotes
    parameterValueGroup: "false, true"
    summary: |-
      Whether to allow downvotes or not.
  - name: --blocking
    parameterValueGroup: "false, true"
    summary: |-
      Whether the policy should be blocking or not.
  - name: --branch
    summary: |-
      Branch on which this policy should be applied. For example: master.
  - name: --branch-match-type
    parameterValueGroup: "exact, prefix"
    summary: |-
      Determines how the branch argument is used to apply a policy. If value is 'exact', the policy will be applied on a branch which has an exact match on the --branch argument. If value is 'prefix' the policy is applied across all branch folders that match the prefix provided by the --branch argument.
  - name: --creator-vote-counts
    parameterValueGroup: "false, true"
    summary: |-
      Whether the creator's vote counts or not.
  - name: --detect
    parameterValueGroup: "false, true"
    summary: |-
      Automatically detect organization.
  - name: --enabled
    parameterValueGroup: "false, true"
    summary: |-
      Whether the policy is enabled or not.
  - name: --minimum-approver-count
    summary: |-
      Minimum number of approvers required. For example: 2.
  - name: --org --organization
    summary: |-
      Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example: https://dev.azure.com/MyOrganizationName/.
  - name: --project -p
    summary: |-
      Name or ID of the project. You can configure the default project using az devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
  - name: --repository-id
    summary: |-
      Id of the repository on which to apply the policy.
  - name: --reset-on-source-push
    parameterValueGroup: "false, true"
    summary: |-
      Whether to reset source on push.
commands:
- az_repos_policy_approver-count_create
- az_repos_policy_approver-count_update
globalParameters:
- name: --debug
  summary: |-
    Increase logging verbosity to show all debug logs.
- name: --help -h
  summary: |-
    Show this help message and exit.
- name: --only-show-errors
  summary: |-
    Only show errors, suppressing warnings.
- name: --output -o
  defaultValue: "json"
  parameterValueGroup: "json, jsonc, none, table, tsv, yaml, yamlc"
  summary: |-
    Output format.
- name: --query
  summary: |-
    JMESPath query string. See <a href="http://jmespath.org/">http://jmespath.org/</a> for more information and examples.
- name: --subscription
  summary: |-
    Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
- name: --verbose
  summary: |-
    Increase logging verbosity. Use --debug for full debug logs.
metadata:
  description: Manage approver count policy.
