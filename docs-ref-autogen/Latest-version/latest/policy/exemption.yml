### YamlMime:AzureCLIGroup
uid: az_policy_exemption
name: az policy exemption
summary: |-
  Manage policy exemptions.
description: |-
  Policy exemptions specify resources that a policy assignment does not apply to.
status: GA
sourceType: Core
directCommands:
- uid: az_policy_exemption_create
  name: az policy exemption create
  summary: |-
    Create a policy exemption.
  description: |-
    Create a policy exemption with the given name and scope. Policy exemptions apply to all resources contained within their scope. For example, when you create a policy exemption at resource group scope for a policy assignment at the same or higher scope level, the exemption exempts all applicable resources in the resource group from applying to that policy assignment.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/resource/_help.py
  syntax: >-
    az policy exemption create --exemption-category {Mitigated, Waiver}
                               --policy-assignment
                               [--assignment-scope-validation {Default, DoNotValidate}]
                               [--description]
                               [--display-name]
                               [--expires-on]
                               [--metadata]
                               [--name]
                               [--policy-definition-reference-ids]
                               [--resource-group]
                               [--resource-selectors]
                               [--scope]
  examples:
  - summary: |-
      Create a policy exemption in default subscription
    syntax: az policy exemption create -n exemptTestVM --policy-assignment "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyAssignments/limitVMSku" --exemption-category "Waiver"
  - summary: |-
      Create a policy exemption in the resource group
    syntax: az policy exemption create -n exemptTestVM --policy-assignment "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyAssignments/limitVMSku" --exemption-category "Waiver" --resource-group "myResourceGroup"
  - summary: |-
      Create a policy exemption in a management group
    syntax: az policy exemption create -n exemptTestVM --policy-assignment "/providers/Microsoft.Management/managementGroups/{managementGroupName}/providers/Microsoft.Authorization/policyAssignments/limitVMSku" --exemption-category "Waiver" --scope "/providers/Microsoft.Management/managementGroups/{managementGroupName}"
  requiredParameters:
  - isRequired: true
    name: --exemption-category -e
    acceptedValues: Mitigated, Waiver
    summary: |-
      The policy exemption category.
    groupName: Properties Arguments
  - isRequired: true
    name: --policy-assignment -a
    summary: |-
      The policy assignment to exempt.
    groupName: Properties Arguments
  optionalParameters:
  - name: --assignment-scope-validation -v
    defaultValue: Default
    acceptedValues: Default, DoNotValidate
    summary: |-
      The assignment scope validation.
    groupName: Properties Arguments
  - name: --description
    summary: |-
      Policy exemption description.
    groupName: Properties Arguments
  - name: --display-name
    summary: |-
      The display name of the policy exemption.
    groupName: Properties Arguments
  - name: --expires-on
    summary: |-
      The expiration date and time.
    isBreakingChange: true
    groupName: Properties Arguments
  - name: --metadata
    summary: |-
      The policy exemption metadata.  Support shorthand-syntax, json-file and yaml-file. Try "??" to show more.
    groupName: Properties Arguments
  - name: --name -n
    summary: |-
      The name of the policy exemption.
  - name: --policy-definition-reference-ids -r
    summary: |-
      The policy definition reference IDs.  Support shorthand-syntax, json-file and yaml-file. Try "??" to show more.
    groupName: Properties Arguments
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --resource-selectors
    summary: |-
      The resource selectors list to filter policies by resource properties.  Support shorthand-syntax, json-file and yaml-file. Try "??" to show more.
    groupName: Properties Arguments
  - name: --scope
    summary: |-
      The scope of the policy assignment.
  globalParameters:
  - name: --debug
    defaultValue: "False"
    summary: |-
      Increase logging verbosity to show all debug logs.
  - name: --help -h
    summary: |-
      Show this help message and exit.
  - name: --only-show-errors
    defaultValue: "False"
    summary: |-
      Only show errors, suppressing warnings.
  - name: --output -o
    defaultValue: json
    acceptedValues: json, jsonc, none, table, tsv, yaml, yamlc
    summary: |-
      Output format.
  - name: --query
    summary: |-
      JMESPath query string. See http://jmespath.org/ for more information and examples.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --verbose
    defaultValue: "False"
    summary: |-
      Increase logging verbosity. Use --debug for full debug logs.
- uid: az_policy_exemption_delete
  name: az policy exemption delete
  summary: |-
    Delete a policy exemption.
  description: |-
    Delete the policy exemption with the given name and scope.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/resource/_help.py
  syntax: >-
    az policy exemption delete --name
                               [--resource-group]
                               [--scope]
  examples:
  - summary: |-
      Delete a policy exemption
    syntax: az policy exemption delete --name MyPolicyExemption --resource-group "myResourceGroup"
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      The name of the policy exemption.
  optionalParameters:
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --scope
    summary: |-
      The scope of the policy assignment.
  globalParameters:
  - name: --debug
    defaultValue: "False"
    summary: |-
      Increase logging verbosity to show all debug logs.
  - name: --help -h
    summary: |-
      Show this help message and exit.
  - name: --only-show-errors
    defaultValue: "False"
    summary: |-
      Only show errors, suppressing warnings.
  - name: --output -o
    defaultValue: json
    acceptedValues: json, jsonc, none, table, tsv, yaml, yamlc
    summary: |-
      Output format.
  - name: --query
    summary: |-
      JMESPath query string. See http://jmespath.org/ for more information and examples.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --verbose
    defaultValue: "False"
    summary: |-
      Increase logging verbosity. Use --debug for full debug logs.
- uid: az_policy_exemption_list
  name: az policy exemption list
  summary: |-
    Retrieve all applicable policy exemptions.
  description: |-
    Retrieve the list of all policy assignments applicable to the given subscription or management group.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/resource/_help.py
  syntax: >-
    az policy exemption list [--disable-scope-strict-match {0, 1, f, false, n, no, t, true, y, yes}]
                             [--filter]
                             [--management-group]
                             [--max-items]
                             [--next-token]
                             [--resource-group]
                             [--scope]
  examples:
  - summary: |-
      List policy exemptions that apply to a management group
    syntax: az policy exemption list --management-group DevOrg --filter atScopeAndBelow()
  - summary: |-
      List policy exemptions that apply to a resource group
    syntax: az policy exemption list --resource-group TestResourceGroup
  - summary: |-
      List policy exemptions that apply to a subscription
    syntax: az policy exemption list
  optionalParameters:
  - name: --disable-scope-strict-match -d
    acceptedValues: 0, 1, f, false, n, no, t, true, y, yes
    summary: |-
      Include policy exemptions either inherited from parent scopes or at child scopes.
  - name: --filter
    summary: |-
      Filter list results.
  - name: --management-group
    summary: |-
      The management group.
  - name: --max-items
    summary: |-
      Total number of items to return in the command's output. If the total number of items available is more than the value specified, a token is provided in the command's output. To resume pagination, provide the token value in `--next-token` argument of a subsequent command.
    groupName: Pagination Arguments
  - name: --next-token
    summary: |-
      Token to specify where to start paginating. This is the token value from a previously truncated response.
    groupName: Pagination Arguments
  - name: --resource-group -g
    summary: |-
      The resource group.
  - name: --scope
    summary: |-
      Scope at which to list applicable policy exemptions. If scope is not provided, the scope will be the implied or specified subscription.
  globalParameters:
  - name: --debug
    defaultValue: "False"
    summary: |-
      Increase logging verbosity to show all debug logs.
  - name: --help -h
    summary: |-
      Show this help message and exit.
  - name: --only-show-errors
    defaultValue: "False"
    summary: |-
      Only show errors, suppressing warnings.
  - name: --output -o
    defaultValue: json
    acceptedValues: json, jsonc, none, table, tsv, yaml, yamlc
    summary: |-
      Output format.
  - name: --query
    summary: |-
      JMESPath query string. See http://jmespath.org/ for more information and examples.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --verbose
    defaultValue: "False"
    summary: |-
      Increase logging verbosity. Use --debug for full debug logs.
- uid: az_policy_exemption_show
  name: az policy exemption show
  summary: |-
    Retrieve a policy exemption.
  description: |-
    Retrieve and show the details of the policy exemption with the given name and scope.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/resource/_help.py
  syntax: >-
    az policy exemption show --name
                             [--resource-group]
                             [--scope]
  examples:
  - summary: |-
      Show a policy exemption
    syntax: az policy exemption show --name MyPolicyExemption --resource-group "myResourceGroup"
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      The name of the policy exemption.
  optionalParameters:
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --scope
    summary: |-
      The scope of the policy assignment.
  globalParameters:
  - name: --debug
    defaultValue: "False"
    summary: |-
      Increase logging verbosity to show all debug logs.
  - name: --help -h
    summary: |-
      Show this help message and exit.
  - name: --only-show-errors
    defaultValue: "False"
    summary: |-
      Only show errors, suppressing warnings.
  - name: --output -o
    defaultValue: json
    acceptedValues: json, jsonc, none, table, tsv, yaml, yamlc
    summary: |-
      Output format.
  - name: --query
    summary: |-
      JMESPath query string. See http://jmespath.org/ for more information and examples.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --verbose
    defaultValue: "False"
    summary: |-
      Increase logging verbosity. Use --debug for full debug logs.
- uid: az_policy_exemption_update
  name: az policy exemption update
  summary: |-
    Update a policy exemption.
  description: |-
    Update the policy exemption with the given name and scope by applying the given property values.
  status: GA
  sourceType: Core
  editLink: https://github.com/Azure/azure-cli/blob/dev/src/azure-cli/azure/cli/command_modules/resource/_help.py
  syntax: >-
    az policy exemption update --name
                               [--add]
                               [--assignment-scope-validation {Default, DoNotValidate}]
                               [--description]
                               [--display-name]
                               [--exemption-category {Mitigated, Waiver}]
                               [--expires-on]
                               [--force-string {0, 1, f, false, n, no, t, true, y, yes}]
                               [--metadata]
                               [--policy-assignment]
                               [--policy-definition-reference-ids]
                               [--remove]
                               [--resource-group]
                               [--resource-selectors]
                               [--scope]
                               [--set]
  examples:
  - summary: |-
      Update a policy exemption category
    syntax: az policy exemption update -n exemptTestVM --exemption-category "Mitigated"
  - summary: |-
      Update a policy exemption in a resource group
    syntax: az policy exemption update -n exemptTestVM --display-name "Updated display name" --resource-group myResourceGroup
  - summary: |-
      Update a policy exemption at scope
    syntax: az policy exemption update -n exemptTestVM --description "This exemption is very cool." --scope "/providers/Microsoft.Management/managementGroups/{managementGroupName}"
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      The name of the policy exemption.
  optionalParameters:
  - name: --add
    summary: |-
      Add an object to a list of objects by specifying a path and key value pairs.  Example: `--add property.listProperty <key=value, string or JSON string>`.
    groupName: Generic Update Arguments
  - name: --assignment-scope-validation -v
    acceptedValues: Default, DoNotValidate
    summary: |-
      The assignment scope validation.
    groupName: Properties Arguments
  - name: --description
    summary: |-
      Policy exemption description.
    groupName: Properties Arguments
  - name: --display-name
    summary: |-
      The display name of the policy exemption.
    groupName: Properties Arguments
  - name: --exemption-category -e
    acceptedValues: Mitigated, Waiver
    summary: |-
      The policy exemption category.
    groupName: Properties Arguments
  - name: --expires-on
    summary: |-
      The expiration date and time.
    isBreakingChange: true
    groupName: Properties Arguments
  - name: --force-string
    acceptedValues: 0, 1, f, false, n, no, t, true, y, yes
    summary: |-
      When using 'set' or 'add', preserve string literals instead of attempting to convert to JSON.
    groupName: Generic Update Arguments
  - name: --metadata
    summary: |-
      The policy exemption metadata.  Support shorthand-syntax, json-file and yaml-file. Try "??" to show more.
    groupName: Properties Arguments
  - name: --policy-assignment -a
    summary: |-
      The policy assignment to exempt.
    groupName: Properties Arguments
  - name: --policy-definition-reference-ids -r
    summary: |-
      The policy definition reference IDs.  Support shorthand-syntax, json-file and yaml-file. Try "??" to show more.
    groupName: Properties Arguments
  - name: --remove
    summary: |-
      Remove a property or an element from a list.  Example: `--remove property.list <indexToRemove>` OR `--remove propertyToRemove`.
    groupName: Generic Update Arguments
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - name: --resource-selectors
    summary: |-
      The resource selectors list to filter policies by resource properties.  Support shorthand-syntax, json-file and yaml-file. Try "??" to show more.
    groupName: Properties Arguments
  - name: --scope
    summary: |-
      The scope of the policy assignment.
  - name: --set
    summary: |-
      Update an object by specifying a property path and value to set.  Example: `--set property1.property2=<value>`.
    groupName: Generic Update Arguments
  globalParameters:
  - name: --debug
    defaultValue: "False"
    summary: |-
      Increase logging verbosity to show all debug logs.
  - name: --help -h
    summary: |-
      Show this help message and exit.
  - name: --only-show-errors
    defaultValue: "False"
    summary: |-
      Only show errors, suppressing warnings.
  - name: --output -o
    defaultValue: json
    acceptedValues: json, jsonc, none, table, tsv, yaml, yamlc
    summary: |-
      Output format.
  - name: --query
    summary: |-
      JMESPath query string. See http://jmespath.org/ for more information and examples.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --verbose
    defaultValue: "False"
    summary: |-
      Increase logging verbosity. Use --debug for full debug logs.
commands:
- az_policy_exemption_create
- az_policy_exemption_delete
- az_policy_exemption_list
- az_policy_exemption_show
- az_policy_exemption_update
metadata:
  ms.date: 08/26/2025
  description: Policy exemptions specify resources that a policy assignment does not apply to.
