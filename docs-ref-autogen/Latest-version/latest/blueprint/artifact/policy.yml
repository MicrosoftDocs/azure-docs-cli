### YamlMime:AzureCLIGroup
uid: az_blueprint_artifact_policy
name: az blueprint artifact policy
extensionInformation: |-
  > [!NOTE]
  > This reference is part of the **blueprint** extension for the Azure CLI (version 2.50.0 or higher). The extension will automatically install the first time you run an **az blueprint artifact policy** command. [Learn more](https://learn.microsoft.com/cli/azure/azure-cli-extensions-overview) about extensions.
summary: |-
  Commands to manage blueprint policy assignment artifact.
status: Deprecated
isDeprecated: true
deprecateInfo: >-
  This command group is implicitly deprecated because command group 'az blueprint' is deprecated and will be removed in a future release.

  Blueprints and associated commands will be deprecated

  as early as July 2026. Customers are encouraged to transition to

  Template Specs and Deployments Stacks to support their scenarios beyond that date.

  Migration documentation is available at

  https://learn.microsoft.com/en-us/azure/azure-resource-manager/bicep/migrate-blueprint.
sourceType: Extension
directCommands:
- uid: az_blueprint_artifact_policy_create
  name: az blueprint artifact policy create
  summary: |-
    Create blueprint policy artifact.
  status: Deprecated
  isDeprecated: true
  deprecateInfo: >-
    Blueprints and associated commands will be deprecated

    as early as July 2026. Customers are encouraged to transition to

    Template Specs and Deployments Stacks to support their scenarios beyond that date.

    Migration documentation is available at

    https://learn.microsoft.com/en-us/azure/azure-resource-manager/bicep/migrate-blueprint.

    This command is implicitly deprecated because command group 'az blueprint' is deprecated and will be removed in a future release.
  sourceType: Extension
  syntax: >-
    az blueprint artifact policy create --artifact-name
                                        --blueprint-name
                                        --policy-definition-id
                                        [--depends-on]
                                        [--description]
                                        [--display-name]
                                        [--management-group]
                                        [--parameters]
                                        [--resource-group-art]
                                        [--subscription]
  examples:
  - summary: |-
      Create a policy artifact
    syntax: >-
      az blueprint artifact policy create \

      --blueprint-name MyBlueprint --artifact-name MyPolicy --policy-definition-id \

      "/providers/Microsoft.Authorization/policyDefinitions/00000000-0000-0000-0000-000000000000" \

      --parameters path/to/file --display-name "Policy to do sth"
  requiredParameters:
  - isRequired: true
    name: --artifact-name
    summary: |-
      Name of the blueprint artifact.
  - isRequired: true
    name: --blueprint-name
    summary: |-
      Name of the blueprint definition.
  - isRequired: true
    name: --policy-definition-id
    summary: |-
      The full policy definition id.
  optionalParameters:
  - name: --depends-on
    summary: |-
      Artifacts which need to be deployed before the specified artifact.
  - name: --description
    summary: |-
      Description of the blueprint artifact.
  - name: --display-name
    summary: |-
      DisplayName of this artifact.
  - name: --management-group -m
    summary: |-
      Use management group for the scope of the blueprint.
    groupName: Resource_scope Arguments
  - name: --parameters -p
    summary: |-
      Parameters for policy assignment artifact. It can be a JSON string or JSON file path.
  - name: --resource-group-art
    summary: |-
      Name of the resource group artifact to which the policy will be assigned.
  - name: --subscription -s
    summary: |-
      Use subscription for the scope of the blueprint. If --management-group is not specified, --subscription value or the default subscription will be used as the scope.
    groupName: Resource_scope Arguments
  globalParameters:
  - name: --debug
    defaultValue: "False"
    summary: |-
      Increase logging verbosity to show all debug logs.
  - name: --help -h
    summary: |-
      Show this help message and exit.
  - name: --only-show-errors
    defaultValue: "False"
    summary: |-
      Only show errors, suppressing warnings.
  - name: --output -o
    defaultValue: json
    acceptedValues: json, jsonc, none, table, tsv, yaml, yamlc
    summary: |-
      Output format.
  - name: --query
    summary: |-
      JMESPath query string. See http://jmespath.org/ for more information and examples.
  - name: --verbose
    defaultValue: "False"
    summary: |-
      Increase logging verbosity. Use --debug for full debug logs.
- uid: az_blueprint_artifact_policy_update
  name: az blueprint artifact policy update
  summary: |-
    Update blueprint policy artifact.
  status: Deprecated
  isDeprecated: true
  deprecateInfo: >-
    Blueprints and associated commands will be deprecated

    as early as July 2026. Customers are encouraged to transition to

    Template Specs and Deployments Stacks to support their scenarios beyond that date.

    Migration documentation is available at

    https://learn.microsoft.com/en-us/azure/azure-resource-manager/bicep/migrate-blueprint.

    This command is implicitly deprecated because command group 'az blueprint' is deprecated and will be removed in a future release.
  sourceType: Extension
  syntax: >-
    az blueprint artifact policy update --artifact-name
                                        --blueprint-name
                                        [--depends-on]
                                        [--description]
                                        [--display-name]
                                        [--management-group]
                                        [--parameters]
                                        [--resource-group-art]
                                        [--subscription]
  examples:
  - summary: |-
      Update a policy artifact
    syntax: >-
      az blueprint artifact policy update \

      --blueprint-name MyBlueprint --artifact-name MyPolicy --display-name "My Policy"
  requiredParameters:
  - isRequired: true
    name: --artifact-name
    summary: |-
      Name of the blueprint artifact.
  - isRequired: true
    name: --blueprint-name
    summary: |-
      Name of the blueprint definition.
  optionalParameters:
  - name: --depends-on
    summary: |-
      Artifacts which need to be deployed before the specified artifact. Use '--depends-on' with no values to remove dependencies.
  - name: --description
    summary: |-
      Description of the blueprint artifact.
  - name: --display-name
    summary: |-
      DisplayName of this artifact.
  - name: --management-group -m
    summary: |-
      Use management group for the scope of the blueprint.
    groupName: Resource_scope Arguments
  - name: --parameters -p
    summary: |-
      Parameters for policy assignment artifact. It can be a JSON string or JSON file path.
  - name: --resource-group-art
    summary: |-
      Name of the resource group artifact to which the policy will be assigned.
  - name: --subscription -s
    summary: |-
      Use subscription for the scope of the blueprint. If --management-group is not specified, --subscription value or the default subscription will be used as the scope.
    groupName: Resource_scope Arguments
  globalParameters:
  - name: --debug
    defaultValue: "False"
    summary: |-
      Increase logging verbosity to show all debug logs.
  - name: --help -h
    summary: |-
      Show this help message and exit.
  - name: --only-show-errors
    defaultValue: "False"
    summary: |-
      Only show errors, suppressing warnings.
  - name: --output -o
    defaultValue: json
    acceptedValues: json, jsonc, none, table, tsv, yaml, yamlc
    summary: |-
      Output format.
  - name: --query
    summary: |-
      JMESPath query string. See http://jmespath.org/ for more information and examples.
  - name: --verbose
    defaultValue: "False"
    summary: |-
      Increase logging verbosity. Use --debug for full debug logs.
commands:
- az_blueprint_artifact_policy_create
- az_blueprint_artifact_policy_update
metadata:
  description: Commands to manage blueprint policy assignment artifact.
