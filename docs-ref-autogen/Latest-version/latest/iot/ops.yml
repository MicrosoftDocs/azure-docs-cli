### YamlMime:AzureCLIGroup
uid: az_iot_ops
name: az iot ops
extensionInformation: |-
  > [!NOTE]
  > This reference is part of the **azure-iot-ops** extension for the Azure CLI (version 2.67.0 or higher). The extension will automatically install the first time you run an **az iot ops** command. [Learn more](https://learn.microsoft.com/cli/azure/azure-cli-extensions-overview) about extensions.
summary: |-
  Manage Azure IoT Operations.
description: |-
  Azure IoT Operations is a set of highly aligned, but loosely coupled, first-party
  Kubernetes services that enable you to aggregate data from on-prem assets into an
  industrial-grade MQTT Broker, add edge compute and set up bi-directional data flow with
  a variety of services in the cloud.

  By default IoT Operations CLI commands will periodically check to see if a new extension version is available.
  This behavior can be disabled with `az config set iotops.check_latest=false`.
status: GA
sourceType: Extension
directCommands:
- uid: az_iot_ops_check
  name: az iot ops check
  summary: |-
    Evaluate cluster-side readiness and runtime health of deployed IoT Operations services.
  description: |-
    The command by default shows a high-level human friendly _summary_ view of all services.
    Use the '--svc' option to specify checks for a single service, and configure verbosity via the `--detail-level` argument.
    Note: Resource kind (--resources) and name (--resource-name) filtering can only be used with the '--svc' argument.

    {Supported service APIs}
    - deviceregistry.microsoft.com/[v1,v1beta1]
    - namespaces.deviceregistry.microsoft.com/[v1beta1]
    - mqttbroker.iotoperations.azure.com/[v1,v1beta1]
    - connectivity.iotoperations.azure.com/[v1,v1beta1]

    For more information on cluster requirements, please check https://aka.ms/iot-ops-cluster-requirements.
  status: Preview
  isPreview: true
  previewOrExperimentalInfo: 'This command is in preview and under development. Reference and support levels: https://aka.ms/CLI_refstatus'
  sourceType: Extension
  syntax: >-
    az iot ops check [--as-object {false, true}]
                     [--context]
                     [--detail-level {0, 1, 2}]
                     [--ops-service --svc {akri, broker, dataflow, deviceregistry, opcua}]
                     [--post {false, true}]
                     [--pre {false, true}]
                     [--resource-name --rn]
                     [--resources {asset, assetendpointprofile, broker, brokerauthentication, brokerauthorization, brokerlistener, dataflow, dataflowendpoint, dataflowprofile, registryendpoint}]
  examples:
  - summary: |-
      Basic usage. Checks overall IoT Operations health with summary output.
    syntax: az iot ops check
  - summary: |-
      Checks `broker` service health and configuration with detailed output.
    syntax: az iot ops check --svc broker --detail-level 1
  - summary: |-
      Evaluate only the `dataflow` service with output optimized for CI.
    syntax: az iot ops check --svc dataflow --as-object
  - summary: |-
      Checks `deviceregistry` health with verbose output, but constrains results to `asset` resources.
    syntax: az iot ops check --svc deviceregistry --detail-level 2 --resources asset
  - summary: |-
      Use resource name to constrain results to `asset` resources with `my-asset-` name prefix
    syntax: az iot ops check --svc deviceregistry --resources asset --resource-name 'my-asset-*'
  optionalParameters:
  - name: --as-object
    acceptedValues: false, true
    summary: |-
      Output check content and validations in a CI friendly data structure.
    groupName: Format Arguments
  - name: --context
    summary: |-
      Kubeconfig context name to use for k8s cluster communication. If no context is provided current_context is used.
    groupName: K8s Cluster Arguments
  - name: --detail-level
    defaultValue: "0"
    acceptedValues: 0, 1, 2
    summary: |-
      Controls the level of detail displayed in the check output. Choose 0 for a summary view (minimal output), 1 for a detailed view (more comprehensive information), or 2 for a verbose view (all available information).
  - name: --ops-service --svc
    acceptedValues: akri, broker, dataflow, deviceregistry, opcua
    summary: |-
      The IoT Operations service deployment that will be evaluated.
  - name: --post
    acceptedValues: false, true
    summary: |-
      Run post-deployment checks.
  - name: --pre
    acceptedValues: false, true
    summary: |-
      Run pre-requisite checks to determine if the minimum requirements of a service deployment are fulfilled.
  - name: --resource-name --rn
    summary: |-
      Only run checks for the specific resource name. The name is case insensitive. Glob patterns '*' and '?' are supported. Note: Only alphanumeric characters, hyphens, '?' and '*' are allowed.
  - name: --resources
    acceptedValues: asset, assetendpointprofile, broker, brokerauthentication, brokerauthorization, brokerlistener, dataflow, dataflowendpoint, dataflowprofile, registryendpoint
    summary: |-
      Only run checks on specific resource kinds. Use space-separated values.
  globalParameters:
  - name: --debug
    defaultValue: "False"
    summary: |-
      Increase logging verbosity to show all debug logs.
  - name: --help -h
    summary: |-
      Show this help message and exit.
  - name: --only-show-errors
    defaultValue: "False"
    summary: |-
      Only show errors, suppressing warnings.
  - name: --output -o
    defaultValue: json
    acceptedValues: json, jsonc, none, table, tsv, yaml, yamlc
    summary: |-
      Output format.
  - name: --query
    summary: |-
      JMESPath query string. See http://jmespath.org/ for more information and examples.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --verbose
    defaultValue: "False"
    summary: |-
      Increase logging verbosity. Use --debug for full debug logs.
- uid: az_iot_ops_clone
  name: az iot ops clone
  summary: |-
    Clone an instance.
  description: |-
    Clone analyzes an instance then reproduces it in an infrastructure-as-code
    manner via ARM templates.

    The output of clone may be applied directly to another connected
    cluster (referred to as replication), and/or saved locally to use at another time
    with potential modification.

    The clone definition being a generic ARM template, can be deployed via existing tools.
    See https://aka.ms/aio-clone for details.

    Clone is compatible with the following instance version range: `1.0.34>=,<1.3.0`.
  status: Preview
  isPreview: true
  previewOrExperimentalInfo: 'This command is in preview and under development. Reference and support levels: https://aka.ms/CLI_refstatus'
  sourceType: Extension
  syntax: >-
    az iot ops clone --name
                     --resource-group
                     [--base-uri]
                     [--force {false, true}]
                     [--mode {linked, nested}]
                     [--no-progress {false, true}]
                     [--param]
                     [--self-hosted-issuer {false, true}]
                     [--summary {detailed, simple}]
                     [--to-cluster-id]
                     [--to-dir]
                     [--yes {false, true}]
  examples:
  - summary: |-
      Clone an instance to a desired connected cluster.
    syntax: az iot ops clone -n myinstance -g myresourcegroup --to-cluster-id $CLUSTER_RESOURCE_ID
  - summary: |-
      Clone an instance to a desired connected cluster, with customized replication.
    syntax: az iot ops clone -n myinstance -g myresourcegroup --to-cluster-id $CLUSTER_RESOURCE_ID --param location=eastus
  - summary: |-
      Clone an instance to a desired connected cluster, but splitting and serially applying asset related sub-deployments.
    syntax: az iot ops clone -n myinstance -g myresourcegroup --to-cluster-id $CLUSTER_RESOURCE_ID --mode linked
  - summary: |-
      Clone an instance to a local directory.
    syntax: az iot ops clone -n myinstance -g myresourcegroup --to-dir .
  - summary: |-
      Clone an instance to a local directory, but splitting and linking to asset related sub-deployments.
    syntax: az iot ops clone -n myinstance -g myresourcegroup --to-dir /my/content --mode linked
  - summary: |-
      Hide progress displays and skip prompts.
    syntax: az iot ops clone -n myinstance -g myresourcegroup --to-dir . --no-progress -y
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      The model instance to clone.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      The resource group the model instance to clone resides in.
  optionalParameters:
  - name: --base-uri
    summary: |-
      Base URI to use for template links. If not provided a relative path strategy will be used. Relevant when --mode is set to 'linked'. Example: `https://raw.githubusercontent.com/myorg/myproject/main/myclones/`.
    groupName: Local Target Arguments
  - name: --force
    acceptedValues: false, true
    summary: |-
      Force the operation to execute.
  - name: --mode
    defaultValue: nested
    acceptedValues: linked, nested
    summary: |-
      When mode 'nested' is used, sub-deployments will be self-contained in the root deployment. When mode 'linked' is used, asset related sub-deployments will be split and stored as separate files linked by the root deployment.
  - name: --no-progress
    acceptedValues: false, true
    summary: |-
      Disable visual representation of work.
  - name: --param -p
    summary: |-
      Parameter overrides when replicating the clone to a connected cluster. If omitted default values from the model instance are used. Format is space-separated key=value pairs where the key represents a clone definition parameter. The following keys can be set: instanceName, clusterName, clusterNamespace, customLocationName, opsExtensionName, schemaRegistryId, resourceSlug, location, applyRoleAssignments, adrNamespaceId. Can be used one or more times.
    groupName: Cluster Target Arguments
  - name: --self-hosted-issuer
    acceptedValues: false, true
    summary: |-
      Use the self-hosted oidc issuer for federation. Only applicable if user-assigned managed identities are associated to the model instance.
    groupName: Cluster Target Arguments
  - name: --summary
    defaultValue: simple
    acceptedValues: detailed, simple
    summary: |-
      Deployment summary option.
  - name: --to-cluster-id
    summary: |-
      The resource Id of the connected cluster the clone will be applied to.
    groupName: Cluster Target Arguments
  - name: --to-dir
    summary: |-
      The local directory the instance clone definitions will be stored in.
    groupName: Local Target Arguments
  - name: --yes -y
    acceptedValues: false, true
    summary: |-
      Confirm [y]es without a prompt. Useful for CI and automation scenarios.
  globalParameters:
  - name: --debug
    defaultValue: "False"
    summary: |-
      Increase logging verbosity to show all debug logs.
  - name: --help -h
    summary: |-
      Show this help message and exit.
  - name: --only-show-errors
    defaultValue: "False"
    summary: |-
      Only show errors, suppressing warnings.
  - name: --output -o
    defaultValue: json
    acceptedValues: json, jsonc, none, table, tsv, yaml, yamlc
    summary: |-
      Output format.
  - name: --query
    summary: |-
      JMESPath query string. See http://jmespath.org/ for more information and examples.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --verbose
    defaultValue: "False"
    summary: |-
      Increase logging verbosity. Use --debug for full debug logs.
- uid: az_iot_ops_create
  name: az iot ops create
  summary: |-
    Create an IoT Operations instance.
  description: |-
    A succesful execution of init is required before running this command.

    The result of the command nets an IoT Operations instance with
    a set of default resources configured for cohesive function.

    To enable broker disk persistence at least a value for --persist-max-size
    must be provided. When enabled the default configuration is constrained to
    dynamic persistence across state store, retain messages and subscriber
    queues.

    To enable edge to cloud resource hydration please use the
    `az iot ops rsync enable` command post instance creation.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot ops create --cluster
                      --name
                      --ns-resource-id
                      --resource-group
                      --sr-resource-id
                      [--add-insecure-listener {false, true}]
                      [--bp --broker-backend-part]
                      [--br --broker-backend-rf]
                      [--broker-backend-workers --bw]
                      [--broker-config-file]
                      [--broker-frontend-replicas --fr]
                      [--broker-frontend-workers --fw]
                      [--broker-mem-profile --mp {High, Low, Medium, Tiny}]
                      [--cluster-namespace]
                      [--custom-location]
                      [--description]
                      [--df-profile-instances]
                      [--feature]
                      [--location]
                      [--no-progress {false, true}]
                      [--ops-config]
                      [--persist-max-size]
                      [--persist-mode]
                      [--persist-pvc-sc]
                      [--skip-sr-ra {false, true}]
                      [--tags]
                      [--trust-settings]
  examples:
  - summary: |-
      Create the target instance with minimum input.
    syntax: az iot ops create --cluster mycluster -g myresourcegroup --name myinstance --sr-resource-id $SCHEMA_REGISTRY_RESOURCE_ID --ns-resource-id $NAMESPACE_RESOURCE_ID
  - summary: |-
      The following example adds customization to the default broker instance resource as well as an instance description and tags.
    syntax: az iot ops create --cluster mycluster -g myresourcegroup --name myinstance --sr-resource-id $SCHEMA_REGISTRY_RESOURCE_ID --ns-resource-id $NAMESPACE_RESOURCE_ID --broker-mem-profile High --broker-backend-workers 4 --description 'Contoso Factory' --tags tier=testX1
  - summary: |-
      This example shows deploying an additional insecure (no authn or authz) broker listener configured for port 1883 of service type load balancer. Useful for testing and/or demos. Do not use the insecure option in production.
    syntax: az iot ops create --cluster mycluster -g myresourcegroup --name myinstance --sr-resource-id $SCHEMA_REGISTRY_RESOURCE_ID --ns-resource-id $NAMESPACE_RESOURCE_ID --add-insecure-listener
  - summary: |-
      This example highlights trust settings for a user provided cert-manager config. Note that the cluster must have been initialized with `--user-trust` and a user cert-manager deployment must be present.
    syntax: az iot ops create --cluster mycluster -g myresourcegroup --name myinstance --sr-resource-id $SCHEMA_REGISTRY_RESOURCE_ID --ns-resource-id $NAMESPACE_RESOURCE_ID --trust-settings configMapName=example-bundle configMapKey=trust-bundle.pem issuerKind=ClusterIssuer issuerName=trust-manager-selfsigned-issuer
  - summary: |-
      Deploy the mqtt broker with the min options to enable disk persistence.
    syntax: az iot ops create --cluster mycluster -g myresourcegroup --name myinstance --sr-resource-id $SCHEMA_REGISTRY_RESOURCE_ID --ns-resource-id $NAMESPACE_RESOURCE_ID --persist-max-size 10Gi
  - summary: |-
      Deploy the mqtt broker with disk persistence, configuring volume claim storage class and persistence mode.
    syntax: az iot ops create --cluster mycluster -g myresourcegroup --name myinstance --sr-resource-id $SCHEMA_REGISTRY_RESOURCE_ID --ns-resource-id $NAMESPACE_RESOURCE_ID --persist-max-size 10Gi --persist-pvc-sc mystorageclass --persist-mode retain=All stateStore=None
  requiredParameters:
  - isRequired: true
    name: --cluster
    summary: |-
      Target cluster name for IoT Operations deployment.
  - isRequired: true
    name: --name -n
    summary: |-
      IoT Operations instance name.
  - isRequired: true
    name: --ns-resource-id
    summary: |-
      The device registry namespace resource Id to use with IoT Operations.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  - isRequired: true
    name: --sr-resource-id
    summary: |-
      The schema registry resource Id to use with IoT Operations.
  optionalParameters:
  - name: --add-insecure-listener
    acceptedValues: false, true
    summary: |-
      When enabled the mqtt broker deployment will include a listener of service type LoadBalancer, bound to port 1883 with no authN or authZ. For non-production workloads only.
    groupName: Broker Arguments
  - name: --bp --broker-backend-part
    defaultValue: "2"
    summary: |-
      Mqtt broker backend partitions. Min value: 1, max value: 16.
    groupName: Broker Arguments
  - name: --br --broker-backend-rf
    defaultValue: "2"
    summary: |-
      Mqtt broker backend redundancy factor. Indicates the desired numbers of backend replicas (pods) in a physical partition. Min value: 1, max value: 5.
    groupName: Broker Arguments
  - name: --broker-backend-workers --bw
    defaultValue: "2"
    summary: |-
      Mqtt broker backend workers. Min value: 1, max value: 16.
    groupName: Broker Arguments
  - name: --broker-config-file
    summary: |-
      Path to a json file with custom broker config properties. File config content is used over individual broker config parameters. Useful for advanced scenarios. The expected format is described at https://aka.ms/aziotops-broker-config.
    groupName: Broker Arguments
  - name: --broker-frontend-replicas --fr
    defaultValue: "2"
    summary: |-
      Mqtt broker frontend replicas. Min value: 1, max value: 16.
    groupName: Broker Arguments
  - name: --broker-frontend-workers --fw
    defaultValue: "2"
    summary: |-
      Mqtt broker frontend workers. Min value: 1, max value: 16.
    groupName: Broker Arguments
  - name: --broker-mem-profile --mp
    defaultValue: Medium
    acceptedValues: High, Low, Medium, Tiny
    summary: |-
      Mqtt broker memory profile.
    groupName: Broker Arguments
  - name: --cluster-namespace
    defaultValue: azure-iot-operations
    summary: |-
      The cluster namespace IoT Operations infra will be deployed to. Must be lowercase.
  - name: --custom-location
    summary: |-
      The custom location name corresponding to the IoT Operations deployment. The default is in the form 'location-{hash(5)}'.
  - name: --description
    summary: |-
      Description of the IoT Operations instance.
  - name: --df-profile-instances
    defaultValue: "1"
    summary: |-
      The instance count associated with the default dataflow profile.
    groupName: Dataflow Arguments
  - name: --feature
    summary: |-
      Instance feature config. The settings of a component and/or it's mode can be configured. Component mode syntax is `{component}.mode={mode}` where known mode values are: `Stable`, `Preview` and `Disabled`. Component setting syntax is `{component}.settings.{setting}={value}` where known setting values are `Enabled` or `Disabled`. This option can be used one or more times.
  - name: --location
    summary: |-
      The region that will be used for provisioned resource collateral. If not provided the connected cluster location will be used.
  - name: --no-progress
    acceptedValues: false, true
    summary: |-
      Disable visual representation of work.
  - name: --ops-config
    summary: |-
      IotOperations arc extension custom config. Format is space-separated key=value pairs or just the key. This option can be used one or more times.
    groupName: Extension Config Arguments
  - name: --persist-max-size
    summary: |-
      The max size of the message buffer on disk. Setting a value will enable disk persistence. Kubernetes resource units must be used e.g. the following value suffixes are supported: E, P, T, G, M, K. You can also use the power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki.
    groupName: Disk Persistence Arguments
  - name: --persist-mode
    summary: |-
      Configure disk persistence mode for state store, retain messages and subscriber queues. Format is space-separated key=value pairs. Supported keys include: 'stateStore', 'retain', 'subscriberQueue'. Supported values for each key include: 'None', 'All', 'Custom'. By default each mode is set to min Custom with dynamic persistence enabled. This option can be used one or more times.
    groupName: Disk Persistence Arguments
  - name: --persist-pvc-sc
    summary: |-
      Name of the storage class required by the persistent volume claim.
    groupName: Disk Persistence Arguments
  - name: --skip-sr-ra
    acceptedValues: false, true
    summary: |-
      When used the role assignment between the IoT Operations extension system-managed identity and schema registry will be skipped.
  - name: --tags
    summary: |-
      Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags.
  - name: --trust-settings
    summary: |-
      Settings for user provided trust bundle. Used for component TLS. Format is space-separated key=value pairs. The following keys are required: `issuerName`, `issuerKind`, `configMapName`, `configMapKey`. If not used, a system provided self-signed trust bundle is configured.
    groupName: Trust Arguments
  globalParameters:
  - name: --debug
    defaultValue: "False"
    summary: |-
      Increase logging verbosity to show all debug logs.
  - name: --help -h
    summary: |-
      Show this help message and exit.
  - name: --only-show-errors
    defaultValue: "False"
    summary: |-
      Only show errors, suppressing warnings.
  - name: --output -o
    defaultValue: json
    acceptedValues: json, jsonc, none, table, tsv, yaml, yamlc
    summary: |-
      Output format.
  - name: --query
    summary: |-
      JMESPath query string. See http://jmespath.org/ for more information and examples.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --verbose
    defaultValue: "False"
    summary: |-
      Increase logging verbosity. Use --debug for full debug logs.
- uid: az_iot_ops_delete
  name: az iot ops delete
  summary: |-
    Delete IoT Operations from the cluster.
  description: |-
    The name of either the instance or cluster must be provided.

    The operation uses Azure Resource Graph to determine correlated resources.
    Resource Graph being eventually consistent does not guarantee a synchronized state at the
    time of execution.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot ops delete --resource-group
                      [--cluster]
                      [--force {false, true}]
                      [--include-deps {false, true}]
                      [--name]
                      [--no-progress {false, true}]
                      [--yes {false, true}]
  examples:
  - summary: |-
      Minimum input for complete deletion.
    syntax: az iot ops delete -n myinstance -g myresourcegroup
  - summary: |-
      Skip confirmation prompt and continue to deletion process. Useful for CI scenarios.
    syntax: az iot ops delete -n myinstance -g myresourcegroup -y
  - summary: |-
      Force deletion regardless of warnings. May lead to errors.
    syntax: az iot ops delete -n myinstance -g myresourcegroup --force
  - summary: |-
      Use cluster name instead of instance for lookup.
    syntax: az iot ops delete --cluster mycluster -g myresourcegroup
  - summary: |-
      Reverse application of init.
    syntax: az iot ops delete -n myinstance -g myresourcegroup --include-deps
  requiredParameters:
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  optionalParameters:
  - name: --cluster
    summary: |-
      Target cluster name for IoT Operations deletion.
  - name: --force
    acceptedValues: false, true
    summary: |-
      Force the operation to execute.
  - name: --include-deps
    acceptedValues: false, true
    summary: |-
      Indicates the command should remove IoT Operations dependencies. This option is intended to reverse the application of init.
  - name: --name -n
    summary: |-
      IoT Operations instance name.
  - name: --no-progress
    acceptedValues: false, true
    summary: |-
      Disable visual representation of work.
  - name: --yes -y
    acceptedValues: false, true
    summary: |-
      Confirm [y]es without a prompt. Useful for CI and automation scenarios.
  globalParameters:
  - name: --debug
    defaultValue: "False"
    summary: |-
      Increase logging verbosity to show all debug logs.
  - name: --help -h
    summary: |-
      Show this help message and exit.
  - name: --only-show-errors
    defaultValue: "False"
    summary: |-
      Only show errors, suppressing warnings.
  - name: --output -o
    defaultValue: json
    acceptedValues: json, jsonc, none, table, tsv, yaml, yamlc
    summary: |-
      Output format.
  - name: --query
    summary: |-
      JMESPath query string. See http://jmespath.org/ for more information and examples.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --verbose
    defaultValue: "False"
    summary: |-
      Increase logging verbosity. Use --debug for full debug logs.
- uid: az_iot_ops_enable-rsync
  name: az iot ops enable-rsync
  summary: |-
    Enable edge to cloud hydration.
  description: |-
    This operation will lookup the K8 Bridge service principal then assign
    it to the scope of the IoT Operations instance custom location with the built-in
    role of Azure Kubernetes Service Arc Contributor by default.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot ops enable-rsync --name
                            --resource-group
                            [--custom-role-id]
                            [--k8-bridge-sp-oid]
  examples:
  - summary: |-
      Enable resource sync for the instance.
    syntax: az iot ops enable-rsync -n myinstance -g myresourcegroup
  - summary: |-
      Enable resource sync for the instance and explictly provide the K8 Bridge principal OID.
    syntax: az iot ops enable-rsync -n myinstance -g myresourcegroup --k8-bridge-sp-oid $TENANT_K8_BRIDGE_SP_OID
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      IoT Operations instance name.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  optionalParameters:
  - name: --custom-role-id
    summary: |-
      Fully qualified role definition Id in the following format: /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleDefinitions/{roleId}.
    groupName: Role Assignment Arguments
  - name: --k8-bridge-sp-oid
    summary: |-
      Provide an explicit K8 Bridge service principal OID for the custom location role assignment. This is useful if the logged-in principal does not have permission to query apps from MS Graph.
  globalParameters:
  - name: --debug
    defaultValue: "False"
    summary: |-
      Increase logging verbosity to show all debug logs.
  - name: --help -h
    summary: |-
      Show this help message and exit.
  - name: --only-show-errors
    defaultValue: "False"
    summary: |-
      Only show errors, suppressing warnings.
  - name: --output -o
    defaultValue: json
    acceptedValues: json, jsonc, none, table, tsv, yaml, yamlc
    summary: |-
      Output format.
  - name: --query
    summary: |-
      JMESPath query string. See http://jmespath.org/ for more information and examples.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --verbose
    defaultValue: "False"
    summary: |-
      Increase logging verbosity. Use --debug for full debug logs.
- uid: az_iot_ops_get-versions
  name: az iot ops get-versions
  summary: |-
    Opens the version guide located at https://aka.ms/aio-versions in the default browser.
  status: Experimental
  isExperimental: true
  previewOrExperimentalInfo: 'This command is experimental and under development. Reference and support levels: https://aka.ms/CLI_refstatus'
  sourceType: Extension
  syntax: az iot ops get-versions [--inline {false, true}]
  examples:
  - summary: |-
      Route to the version guide in a new browser window.
    syntax: az iot ops get-versions
  optionalParameters:
  - name: --inline
    acceptedValues: false, true
    summary: |-
      Provides key version attributes in console output.
  globalParameters:
  - name: --debug
    defaultValue: "False"
    summary: |-
      Increase logging verbosity to show all debug logs.
  - name: --help -h
    summary: |-
      Show this help message and exit.
  - name: --only-show-errors
    defaultValue: "False"
    summary: |-
      Only show errors, suppressing warnings.
  - name: --output -o
    defaultValue: json
    acceptedValues: json, jsonc, none, table, tsv, yaml, yamlc
    summary: |-
      Output format.
  - name: --query
    summary: |-
      JMESPath query string. See http://jmespath.org/ for more information and examples.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --verbose
    defaultValue: "False"
    summary: |-
      Increase logging verbosity. Use --debug for full debug logs.
- uid: az_iot_ops_init
  name: az iot ops init
  summary: |-
    Bootstrap the Arc-enabled cluster for IoT Operations deployment.
  description: |-
    An Arc-enabled cluster is required to deploy IoT Operations. See the following resource for
    more info https://aka.ms/aziotops-arcconnect.

    The init operation will do work in installing and configuring a foundation layer of edge
    services necessary for IoT Operations deployment.

    After the foundation layer has been installed the `az iot ops create` command should
    be used to deploy an instance.

    Note: --*-config options allow override of default config settings.

    The default config settings for secret store are:
      rotationPollIntervalInSeconds=120
      validatingAdmissionPolicies.applyPolicies=false.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot ops init --cluster
                    --resource-group
                    [--check-cluster {false, true}]
                    [--cm-config]
                    [--context]
                    [--ensure-latest {false, true}]
                    [--no-progress {false, true}]
                    [--ssc-config]
                    [--user-trust --ut {false, true}]
  examples:
  - summary: |-
      Usage with minimum input. This form will deploy the IoT Operations foundation layer.
    syntax: az iot ops init --cluster mycluster -g myresourcegroup
  - summary: |-
      The following example highlights enabling user trust settings for a custom cert-manager config. This will skip deployment of the system cert-manager and trust-manager.
    syntax: az iot ops init --cluster mycluster -g myresourcegroup --user-trust
  - summary: |-
      Provide custom deploy-time configs for Arc Secret Store.
    syntax: az iot ops init --cluster mycluster -g myresourcegroup --ssc-config rotationPollIntervalInSeconds=60
  - summary: |-
      Check if the cluster meets necessary prerequisite configuration before continuing with init. A valid kubeconfig is required with this option.
    syntax: az iot ops init --cluster mycluster -g myresourcegroup --check-cluster
  requiredParameters:
  - isRequired: true
    name: --cluster
    summary: |-
      Target cluster name for IoT Operations deployment.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  optionalParameters:
  - name: --check-cluster
    acceptedValues: false, true
    summary: |-
      Enforce a check for minimum cluster requirements before bootstrapping.
    isPreview: true
  - name: --cm-config
    summary: |-
      CertManager arc extension custom config. Format is space-separated key=value pairs or just the key. This option can be used one or more times.
    groupName: Extension Config Arguments
  - name: --context
    summary: |-
      Kubeconfig context name to use for k8s cluster communication. If no context is provided current_context is used.
    groupName: K8s Cluster Arguments
  - name: --ensure-latest
    acceptedValues: false, true
    summary: |-
      Ensure the latest IoT Ops CLI is being used, raising an error if an upgrade is available.
  - name: --no-progress
    acceptedValues: false, true
    summary: |-
      Disable visual representation of work.
  - name: --ssc-config
    summary: |-
      SecretStore arc extension custom config. Format is space-separated key=value pairs or just the key. This option can be used one or more times.
    groupName: Extension Config Arguments
  - name: --user-trust --ut
    acceptedValues: false, true
    summary: |-
      Skip the deployment of the system cert-manager and trust-manager in favor of a user-provided configuration.
    groupName: Trust Arguments
  globalParameters:
  - name: --debug
    defaultValue: "False"
    summary: |-
      Increase logging verbosity to show all debug logs.
  - name: --help -h
    summary: |-
      Show this help message and exit.
  - name: --only-show-errors
    defaultValue: "False"
    summary: |-
      Only show errors, suppressing warnings.
  - name: --output -o
    defaultValue: json
    acceptedValues: json, jsonc, none, table, tsv, yaml, yamlc
    summary: |-
      Output format.
  - name: --query
    summary: |-
      JMESPath query string. See http://jmespath.org/ for more information and examples.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --verbose
    defaultValue: "False"
    summary: |-
      Increase logging verbosity. Use --debug for full debug logs.
- uid: az_iot_ops_list
  name: az iot ops list
  summary: |-
    List IoT Operations instances.
  description: |-
    Use --query with desired JMESPath syntax to query the result.
  status: GA
  sourceType: Extension
  syntax: az iot ops list [--resource-group]
  examples:
  - summary: |-
      List all instances in the subscription.
    syntax: az iot ops list
  - summary: |-
      List all instances of a particular resource group.
    syntax: az iot ops list -g myresourcegroup
  - summary: |-
      List the instances in the subscription that have a particular tag value.
    syntax: az iot ops list -g myresourcegroup --query "[?tags.env == 'prod']"
  optionalParameters:
  - name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  globalParameters:
  - name: --debug
    defaultValue: "False"
    summary: |-
      Increase logging verbosity to show all debug logs.
  - name: --help -h
    summary: |-
      Show this help message and exit.
  - name: --only-show-errors
    defaultValue: "False"
    summary: |-
      Only show errors, suppressing warnings.
  - name: --output -o
    defaultValue: json
    acceptedValues: json, jsonc, none, table, tsv, yaml, yamlc
    summary: |-
      Output format.
  - name: --query
    summary: |-
      JMESPath query string. See http://jmespath.org/ for more information and examples.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --verbose
    defaultValue: "False"
    summary: |-
      Increase logging verbosity. Use --debug for full debug logs.
- uid: az_iot_ops_migrate-assets
  name: az iot ops migrate-assets
  summary: |-
    Migrate root assets to a namespace.
  description: |-
    Requires an instance version >= 1.2.36.

    The target set of root assets will be converted to an equivalent namespace representation
    replacing the original root assets.

    During the migration, namespace devices will be created in-place of the endpoint profiles
    referenced by the assets. If multiple assets reference the same endpoint profile, a
    single namespace device will be referenced by the migrated assets.

    Post migration use the `az iot ops ns asset` and `az iot ops ns device` command groups to
    manage namespace assets and devices.

    It is highly recommended to take a snapshot of the target instance via `az iot ops clone`
    before migration is executed. You can use the clone to restore the instance if needed.

    For glob-style pattern matching via --name-pattern, '*' or '?' or '[...]' can be used.

    By default the command will check if the Device Registry service principal has the
    `Azure Kubernetes Service Arc Contributor` built-in role against the custom location
    associated with the instance, applying the role if needed. This can be skipped with
    the `--skip-ra` flag.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot ops migrate-assets --name
                              --resource-group
                              [--adr-sp-oid]
                              [--pattern]
                              [--skip-ra {false, true}]
                              [--yes {false, true}]
  examples:
  - summary: |-
      Migrate all root assets associated with the instance.
    syntax: az iot ops migrate-assets -n myinstance --resource-group myresourcegroup
  - summary: |-
      Migrate specific assets associated with the instance.
    syntax: az iot ops migrate-assets -n myinstance --resource-group myresourcegroup --pattern asset1 asset2 asset3
  - summary: |-
      Migrate assets associated with the instance that match glob-style patterns.
    syntax: az iot ops migrate-assets -n myinstance --resource-group myresourcegroup --pattern asset-p1-* asset-eng?-01
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      IoT Operations instance name.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  optionalParameters:
  - name: --adr-sp-oid
    summary: |-
      Provide an explicit Device Registry service principal OID for the custom location role assignment. This is useful if the logged-in principal does not have permission to query apps from MS Graph.
    groupName: Role Assignment Arguments
  - name: --pattern -p
    summary: |-
      Space-separated glob-style patterns to match asset names. '*' or '?' or '[...]' can be used.
  - name: --skip-ra
    acceptedValues: false, true
    summary: |-
      When used the role assignment step of the operation will be skipped.
    groupName: Role Assignment Arguments
  - name: --yes -y
    acceptedValues: false, true
    summary: |-
      Confirm [y]es without a prompt. Useful for CI and automation scenarios.
  globalParameters:
  - name: --debug
    defaultValue: "False"
    summary: |-
      Increase logging verbosity to show all debug logs.
  - name: --help -h
    summary: |-
      Show this help message and exit.
  - name: --only-show-errors
    defaultValue: "False"
    summary: |-
      Only show errors, suppressing warnings.
  - name: --output -o
    defaultValue: json
    acceptedValues: json, jsonc, none, table, tsv, yaml, yamlc
    summary: |-
      Output format.
  - name: --query
    summary: |-
      JMESPath query string. See http://jmespath.org/ for more information and examples.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --verbose
    defaultValue: "False"
    summary: |-
      Increase logging verbosity. Use --debug for full debug logs.
- uid: az_iot_ops_show
  name: az iot ops show
  summary: |-
    Show an IoT Operations instance.
  description: |-
    Optionally the command can output a tree structure of associated resources representing the IoT Operations deployment against the backing cluster.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot ops show --name
                    --resource-group
                    [--tree {false, true}]
  examples:
  - summary: |-
      Basic usage to show an instance.
    syntax: az iot ops show --name myinstance -g myresourcegroup
  - summary: |-
      Output a tree structure of associated resources representing the IoT Operations deployment.
    syntax: az iot ops show --name myinstance -g myresourcegroup --tree
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      IoT Operations instance name.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  optionalParameters:
  - name: --tree
    acceptedValues: false, true
    summary: |-
      Use to visualize the IoT Operations deployment against the backing cluster.
  globalParameters:
  - name: --debug
    defaultValue: "False"
    summary: |-
      Increase logging verbosity to show all debug logs.
  - name: --help -h
    summary: |-
      Show this help message and exit.
  - name: --only-show-errors
    defaultValue: "False"
    summary: |-
      Only show errors, suppressing warnings.
  - name: --output -o
    defaultValue: json
    acceptedValues: json, jsonc, none, table, tsv, yaml, yamlc
    summary: |-
      Output format.
  - name: --query
    summary: |-
      JMESPath query string. See http://jmespath.org/ for more information and examples.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --verbose
    defaultValue: "False"
    summary: |-
      Increase logging verbosity. Use --debug for full debug logs.
- uid: az_iot_ops_update
  name: az iot ops update
  summary: |-
    Update an IoT Operations instance.
  description: |-
    Currently instance tags, description and features can be updated.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot ops update --name
                      --resource-group
                      [--description]
                      [--feature]
                      [--tags]
  examples:
  - summary: |-
      Update instance tags. This is equivalent to a replace.
    syntax: az iot ops update --name myinstance -g myresourcegroup --tags a=b c=d
  - summary: |-
      Remove instance tags.
    syntax: az iot ops update --name myinstance -g myresourcegroup --tags ""
  - summary: |-
      Update the instance description.
    syntax: az iot ops update --name myinstance -g myresourcegroup --desc "Fabrikam Widget Factory B42"
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      IoT Operations instance name.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  optionalParameters:
  - name: --description
    summary: |-
      Description of the IoT Operations instance.
  - name: --feature
    summary: |-
      Instance feature config. The settings of a component and/or it's mode can be configured. Component mode syntax is `{component}.mode={mode}` where known mode values are: `Stable`, `Preview` and `Disabled`. Component setting syntax is `{component}.settings.{setting}={value}` where known setting values are `Enabled` or `Disabled`. This option can be used one or more times.
  - name: --tags
    summary: |-
      Space-separated tags: key[=value] [key[=value] ...]. Use "" to clear existing tags.
  globalParameters:
  - name: --debug
    defaultValue: "False"
    summary: |-
      Increase logging verbosity to show all debug logs.
  - name: --help -h
    summary: |-
      Show this help message and exit.
  - name: --only-show-errors
    defaultValue: "False"
    summary: |-
      Only show errors, suppressing warnings.
  - name: --output -o
    defaultValue: json
    acceptedValues: json, jsonc, none, table, tsv, yaml, yamlc
    summary: |-
      Output format.
  - name: --query
    summary: |-
      JMESPath query string. See http://jmespath.org/ for more information and examples.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --verbose
    defaultValue: "False"
    summary: |-
      Increase logging verbosity. Use --debug for full debug logs.
- uid: az_iot_ops_upgrade
  name: az iot ops upgrade
  summary: |-
    Upgrade an IoT Operations instance.
  description: |-
    By default, with no options, the command will evaluate versions of the
    deployed cluster side services that make up IoT Operations and compare them
    with the built-in deployment that would be executed with `az iot ops init`
    and `az iot ops create`.
  status: GA
  sourceType: Extension
  syntax: >-
    az iot ops upgrade --name
                       --resource-group
                       [--cm-config]
                       [--no-cm-install {false, true}]
                       [--no-progress {false, true}]
                       [--ns-resource-id]
                       [--ops-config]
                       [--ssc-config]
                       [--yes {false, true}]
  examples:
  - summary: |-
      Upgrade the instance with minimal inputs.
    syntax: az iot ops upgrade --name myinstance -g myresourcegroup
  - summary: |-
      Skip the confirmation prompt for instance upgrade. Useful for CI scenarios.
    syntax: az iot ops upgrade --name myinstance -g myresourcegroup -y
  - summary: |-
      Set extension config settings that apply should be during upgrade. To remove a setting provide the key with no value.
    syntax: az iot ops upgrade --name myinstance -g myresourcegroup --ops-config key1=value1 deletekey
  requiredParameters:
  - isRequired: true
    name: --name -n
    summary: |-
      IoT Operations instance name.
  - isRequired: true
    name: --resource-group -g
    summary: |-
      Name of resource group. You can configure the default group using `az configure --defaults group=<name>`.
  optionalParameters:
  - name: --cm-config
    summary: |-
      CertManager arc extension custom config. Format is space-separated key=value pairs or just the key. This option can be used one or more times.
    groupName: Extension Config Arguments
  - name: --no-cm-install
    acceptedValues: false, true
    summary: |-
      Flag to disable cert-manager arc extension installation.
    groupName: Extension Config Arguments
  - name: --no-progress
    acceptedValues: false, true
    summary: |-
      Disable visual representation of work.
  - name: --ns-resource-id
    summary: |-
      The device registry namespace resource Id to use with IoT Operations.
  - name: --ops-config
    summary: |-
      IotOperations arc extension custom config. Format is space-separated key=value pairs or just the key. This option can be used one or more times.
    groupName: Extension Config Arguments
  - name: --ssc-config
    summary: |-
      SecretStore arc extension custom config. Format is space-separated key=value pairs or just the key. This option can be used one or more times.
    groupName: Extension Config Arguments
  - name: --yes -y
    acceptedValues: false, true
    summary: |-
      Confirm [y]es without a prompt. Useful for CI and automation scenarios.
  globalParameters:
  - name: --debug
    defaultValue: "False"
    summary: |-
      Increase logging verbosity to show all debug logs.
  - name: --help -h
    summary: |-
      Show this help message and exit.
  - name: --only-show-errors
    defaultValue: "False"
    summary: |-
      Only show errors, suppressing warnings.
  - name: --output -o
    defaultValue: json
    acceptedValues: json, jsonc, none, table, tsv, yaml, yamlc
    summary: |-
      Output format.
  - name: --query
    summary: |-
      JMESPath query string. See http://jmespath.org/ for more information and examples.
  - name: --subscription
    summary: |-
      Name or ID of subscription. You can configure the default subscription using `az account set -s NAME_OR_ID`.
  - name: --verbose
    defaultValue: "False"
    summary: |-
      Increase logging verbosity. Use --debug for full debug logs.
commands:
- az_iot_ops_asset
- az_iot_ops_asset_create
- az_iot_ops_asset_dataset
- az_iot_ops_asset_dataset_list
- az_iot_ops_asset_dataset_point
- az_iot_ops_asset_dataset_point_add
- az_iot_ops_asset_dataset_point_export
- az_iot_ops_asset_dataset_point_import
- az_iot_ops_asset_dataset_point_list
- az_iot_ops_asset_dataset_point_remove
- az_iot_ops_asset_dataset_show
- az_iot_ops_asset_delete
- az_iot_ops_asset_endpoint
- az_iot_ops_asset_endpoint_create
- az_iot_ops_asset_endpoint_create_opcua
- az_iot_ops_asset_endpoint_delete
- az_iot_ops_asset_endpoint_query
- az_iot_ops_asset_endpoint_show
- az_iot_ops_asset_endpoint_update
- az_iot_ops_asset_event
- az_iot_ops_asset_event_add
- az_iot_ops_asset_event_export
- az_iot_ops_asset_event_import
- az_iot_ops_asset_event_list
- az_iot_ops_asset_event_remove
- az_iot_ops_asset_query
- az_iot_ops_asset_show
- az_iot_ops_asset_update
- az_iot_ops_broker
- az_iot_ops_broker_authn
- az_iot_ops_broker_authn_apply
- az_iot_ops_broker_authn_delete
- az_iot_ops_broker_authn_list
- az_iot_ops_broker_authn_method
- az_iot_ops_broker_authn_method_add
- az_iot_ops_broker_authn_show
- az_iot_ops_broker_authz
- az_iot_ops_broker_authz_apply
- az_iot_ops_broker_authz_delete
- az_iot_ops_broker_authz_list
- az_iot_ops_broker_authz_show
- az_iot_ops_broker_list
- az_iot_ops_broker_listener
- az_iot_ops_broker_listener_apply
- az_iot_ops_broker_listener_delete
- az_iot_ops_broker_listener_list
- az_iot_ops_broker_listener_port
- az_iot_ops_broker_listener_port_add
- az_iot_ops_broker_listener_port_remove
- az_iot_ops_broker_listener_show
- az_iot_ops_broker_persist
- az_iot_ops_broker_persist_update
- az_iot_ops_broker_show
- az_iot_ops_check
- az_iot_ops_clone
- az_iot_ops_connector
- az_iot_ops_connector_opcua
- az_iot_ops_connector_opcua_client
- az_iot_ops_connector_opcua_client_add
- az_iot_ops_connector_opcua_client_remove
- az_iot_ops_connector_opcua_client_show
- az_iot_ops_connector_opcua_issuer
- az_iot_ops_connector_opcua_issuer_add
- az_iot_ops_connector_opcua_issuer_remove
- az_iot_ops_connector_opcua_issuer_show
- az_iot_ops_connector_opcua_trust
- az_iot_ops_connector_opcua_trust_add
- az_iot_ops_connector_opcua_trust_remove
- az_iot_ops_connector_opcua_trust_show
- az_iot_ops_create
- az_iot_ops_dataflow
- az_iot_ops_dataflow_apply
- az_iot_ops_dataflow_delete
- az_iot_ops_dataflow_endpoint
- az_iot_ops_dataflow_endpoint_apply
- az_iot_ops_dataflow_endpoint_create
- az_iot_ops_dataflow_endpoint_create_adls
- az_iot_ops_dataflow_endpoint_create_adx
- az_iot_ops_dataflow_endpoint_create_custom-kafka
- az_iot_ops_dataflow_endpoint_create_custom-mqtt
- az_iot_ops_dataflow_endpoint_create_eventgrid
- az_iot_ops_dataflow_endpoint_create_eventhub
- az_iot_ops_dataflow_endpoint_create_fabric-onelake
- az_iot_ops_dataflow_endpoint_create_fabric-realtime
- az_iot_ops_dataflow_endpoint_create_local-mqtt
- az_iot_ops_dataflow_endpoint_create_local-storage
- az_iot_ops_dataflow_endpoint_create_otel
- az_iot_ops_dataflow_endpoint_delete
- az_iot_ops_dataflow_endpoint_list
- az_iot_ops_dataflow_endpoint_show
- az_iot_ops_dataflow_endpoint_update
- az_iot_ops_dataflow_endpoint_update_adls
- az_iot_ops_dataflow_endpoint_update_adx
- az_iot_ops_dataflow_endpoint_update_custom-kafka
- az_iot_ops_dataflow_endpoint_update_custom-mqtt
- az_iot_ops_dataflow_endpoint_update_eventgrid
- az_iot_ops_dataflow_endpoint_update_eventhub
- az_iot_ops_dataflow_endpoint_update_fabric-onelake
- az_iot_ops_dataflow_endpoint_update_fabric-realtime
- az_iot_ops_dataflow_endpoint_update_local-mqtt
- az_iot_ops_dataflow_endpoint_update_local-storage
- az_iot_ops_dataflow_endpoint_update_otel
- az_iot_ops_dataflow_list
- az_iot_ops_dataflow_profile
- az_iot_ops_dataflow_profile_create
- az_iot_ops_dataflow_profile_delete
- az_iot_ops_dataflow_profile_list
- az_iot_ops_dataflow_profile_show
- az_iot_ops_dataflow_profile_update
- az_iot_ops_dataflow_show
- az_iot_ops_delete
- az_iot_ops_enable-rsync
- az_iot_ops_get-versions
- az_iot_ops_identity
- az_iot_ops_identity_assign
- az_iot_ops_identity_remove
- az_iot_ops_identity_show
- az_iot_ops_init
- az_iot_ops_list
- az_iot_ops_migrate-assets
- az_iot_ops_ns
- az_iot_ops_ns_asset
- az_iot_ops_ns_asset_custom
- az_iot_ops_ns_asset_custom_create
- az_iot_ops_ns_asset_custom_datapoint
- az_iot_ops_ns_asset_custom_datapoint_add
- az_iot_ops_ns_asset_custom_datapoint_list
- az_iot_ops_ns_asset_custom_datapoint_remove
- az_iot_ops_ns_asset_custom_dataset
- az_iot_ops_ns_asset_custom_dataset_add
- az_iot_ops_ns_asset_custom_dataset_list
- az_iot_ops_ns_asset_custom_dataset_remove
- az_iot_ops_ns_asset_custom_dataset_show
- az_iot_ops_ns_asset_custom_dataset_update
- az_iot_ops_ns_asset_custom_event
- az_iot_ops_ns_asset_custom_event-group
- az_iot_ops_ns_asset_custom_event-group_add
- az_iot_ops_ns_asset_custom_event-group_list
- az_iot_ops_ns_asset_custom_event-group_remove
- az_iot_ops_ns_asset_custom_event-group_show
- az_iot_ops_ns_asset_custom_event-group_update
- az_iot_ops_ns_asset_custom_event_add
- az_iot_ops_ns_asset_custom_event_list
- az_iot_ops_ns_asset_custom_event_remove
- az_iot_ops_ns_asset_custom_mgmt-action
- az_iot_ops_ns_asset_custom_mgmt-action_add
- az_iot_ops_ns_asset_custom_mgmt-action_list
- az_iot_ops_ns_asset_custom_mgmt-action_remove
- az_iot_ops_ns_asset_custom_mgmt-group
- az_iot_ops_ns_asset_custom_mgmt-group_add
- az_iot_ops_ns_asset_custom_mgmt-group_list
- az_iot_ops_ns_asset_custom_mgmt-group_remove
- az_iot_ops_ns_asset_custom_mgmt-group_show
- az_iot_ops_ns_asset_custom_mgmt-group_update
- az_iot_ops_ns_asset_custom_stream
- az_iot_ops_ns_asset_custom_stream_add
- az_iot_ops_ns_asset_custom_stream_list
- az_iot_ops_ns_asset_custom_stream_remove
- az_iot_ops_ns_asset_custom_stream_show
- az_iot_ops_ns_asset_custom_stream_update
- az_iot_ops_ns_asset_custom_update
- az_iot_ops_ns_asset_delete
- az_iot_ops_ns_asset_media
- az_iot_ops_ns_asset_media_create
- az_iot_ops_ns_asset_media_stream
- az_iot_ops_ns_asset_media_stream_add
- az_iot_ops_ns_asset_media_stream_list
- az_iot_ops_ns_asset_media_stream_remove
- az_iot_ops_ns_asset_media_stream_show
- az_iot_ops_ns_asset_media_stream_update
- az_iot_ops_ns_asset_media_update
- az_iot_ops_ns_asset_onvif
- az_iot_ops_ns_asset_onvif_create
- az_iot_ops_ns_asset_onvif_event-group
- az_iot_ops_ns_asset_onvif_event-group_add
- az_iot_ops_ns_asset_onvif_event-group_list
- az_iot_ops_ns_asset_onvif_event-group_remove
- az_iot_ops_ns_asset_onvif_event-group_show
- az_iot_ops_ns_asset_onvif_event-group_update
- az_iot_ops_ns_asset_onvif_mgmt-group
- az_iot_ops_ns_asset_onvif_mgmt-group_add
- az_iot_ops_ns_asset_onvif_mgmt-group_list
- az_iot_ops_ns_asset_onvif_mgmt-group_remove
- az_iot_ops_ns_asset_onvif_mgmt-group_show
- az_iot_ops_ns_asset_onvif_mgmt-group_update
- az_iot_ops_ns_asset_onvif_update
- az_iot_ops_ns_asset_opcua
- az_iot_ops_ns_asset_opcua_create
- az_iot_ops_ns_asset_opcua_datapoint
- az_iot_ops_ns_asset_opcua_datapoint_add
- az_iot_ops_ns_asset_opcua_datapoint_list
- az_iot_ops_ns_asset_opcua_datapoint_remove
- az_iot_ops_ns_asset_opcua_dataset
- az_iot_ops_ns_asset_opcua_dataset_add
- az_iot_ops_ns_asset_opcua_dataset_list
- az_iot_ops_ns_asset_opcua_dataset_remove
- az_iot_ops_ns_asset_opcua_dataset_show
- az_iot_ops_ns_asset_opcua_dataset_update
- az_iot_ops_ns_asset_opcua_event-group
- az_iot_ops_ns_asset_opcua_event-group_add
- az_iot_ops_ns_asset_opcua_event-group_list
- az_iot_ops_ns_asset_opcua_event-group_remove
- az_iot_ops_ns_asset_opcua_event-group_show
- az_iot_ops_ns_asset_opcua_event-group_update
- az_iot_ops_ns_asset_opcua_mgmt-action
- az_iot_ops_ns_asset_opcua_mgmt-action_add
- az_iot_ops_ns_asset_opcua_mgmt-action_list
- az_iot_ops_ns_asset_opcua_mgmt-action_remove
- az_iot_ops_ns_asset_opcua_mgmt-group
- az_iot_ops_ns_asset_opcua_mgmt-group_add
- az_iot_ops_ns_asset_opcua_mgmt-group_list
- az_iot_ops_ns_asset_opcua_mgmt-group_remove
- az_iot_ops_ns_asset_opcua_mgmt-group_show
- az_iot_ops_ns_asset_opcua_mgmt-group_update
- az_iot_ops_ns_asset_opcua_update
- az_iot_ops_ns_asset_query
- az_iot_ops_ns_asset_rest
- az_iot_ops_ns_asset_rest_create
- az_iot_ops_ns_asset_rest_dataset
- az_iot_ops_ns_asset_rest_dataset_add
- az_iot_ops_ns_asset_rest_dataset_list
- az_iot_ops_ns_asset_rest_dataset_remove
- az_iot_ops_ns_asset_rest_dataset_show
- az_iot_ops_ns_asset_rest_dataset_update
- az_iot_ops_ns_asset_rest_update
- az_iot_ops_ns_asset_show
- az_iot_ops_ns_create
- az_iot_ops_ns_delete
- az_iot_ops_ns_device
- az_iot_ops_ns_device_create
- az_iot_ops_ns_device_delete
- az_iot_ops_ns_device_endpoint
- az_iot_ops_ns_device_endpoint_inbound
- az_iot_ops_ns_device_endpoint_inbound_add
- az_iot_ops_ns_device_endpoint_inbound_add_custom
- az_iot_ops_ns_device_endpoint_inbound_add_media
- az_iot_ops_ns_device_endpoint_inbound_add_onvif
- az_iot_ops_ns_device_endpoint_inbound_add_opcua
- az_iot_ops_ns_device_endpoint_inbound_add_rest
- az_iot_ops_ns_device_endpoint_inbound_list
- az_iot_ops_ns_device_endpoint_inbound_remove
- az_iot_ops_ns_device_endpoint_list
- az_iot_ops_ns_device_query
- az_iot_ops_ns_device_show
- az_iot_ops_ns_device_update
- az_iot_ops_ns_list
- az_iot_ops_ns_show
- az_iot_ops_ns_update
- az_iot_ops_registry
- az_iot_ops_registry_create
- az_iot_ops_registry_delete
- az_iot_ops_registry_list
- az_iot_ops_registry_show
- az_iot_ops_registry_update
- az_iot_ops_schema
- az_iot_ops_schema_create
- az_iot_ops_schema_delete
- az_iot_ops_schema_list
- az_iot_ops_schema_registry
- az_iot_ops_schema_registry_create
- az_iot_ops_schema_registry_delete
- az_iot_ops_schema_registry_list
- az_iot_ops_schema_registry_show
- az_iot_ops_schema_show
- az_iot_ops_schema_show-dataflow-refs
- az_iot_ops_schema_version
- az_iot_ops_schema_version_add
- az_iot_ops_schema_version_list
- az_iot_ops_schema_version_remove
- az_iot_ops_schema_version_show
- az_iot_ops_secretsync
- az_iot_ops_secretsync_disable
- az_iot_ops_secretsync_enable
- az_iot_ops_secretsync_list
- az_iot_ops_show
- az_iot_ops_support
- az_iot_ops_support_create-bundle
- az_iot_ops_update
- az_iot_ops_upgrade
metadata:
  description: >-
    Azure IoT Operations is a set of highly aligned, but loosely coupled, first-party

    Kubernetes services that enable you to aggregate data from on-prem assets into an

    industrial-grade MQTT Broker, add edge compute and set up bi-directional data flow with

    a variety of services in the cloud.


    By default IoT Operations CLI commands will periodically check to see if a new extension version is available.

    This behavior can be disabled with `az config set iotops.check_latest=false`.
